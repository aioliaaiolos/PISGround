//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CommonTestClient.CommonService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferInfo", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class TransferInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FtpServerIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort FtpPortNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FtpUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FtpPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderId {
            get {
                return this.FolderIdField;
            }
            set {
                if ((this.FolderIdField.Equals(value) != true)) {
                    this.FolderIdField = value;
                    this.RaisePropertyChanged("FolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FtpServerIP {
            get {
                return this.FtpServerIPField;
            }
            set {
                if ((object.ReferenceEquals(this.FtpServerIPField, value) != true)) {
                    this.FtpServerIPField = value;
                    this.RaisePropertyChanged("FtpServerIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ushort FtpPortNumber {
            get {
                return this.FtpPortNumberField;
            }
            set {
                if ((this.FtpPortNumberField.Equals(value) != true)) {
                    this.FtpPortNumberField = value;
                    this.RaisePropertyChanged("FtpPortNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string FtpUsername {
            get {
                return this.FtpUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.FtpUsernameField, value) != true)) {
                    this.FtpUsernameField = value;
                    this.RaisePropertyChanged("FtpUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string FtpPassword {
            get {
                return this.FtpPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.FtpPasswordField, value) != true)) {
                    this.FtpPasswordField = value;
                    this.RaisePropertyChanged("FtpPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommonService.ICommonService")]
    public interface ICommonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/Login", ReplyAction="http://tempuri.org/ICommonService/LoginResponse")]
        System.Guid Login(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/Logout", ReplyAction="http://tempuri.org/ICommonService/LogoutResponse")]
        void Logout(System.Guid SessionIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SetNotificationInformation", ReplyAction="http://tempuri.org/ICommonService/SetNotificationInformationResponse")]
        int SetNotificationInformation(System.Guid SessionId, string NotificationURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetListOfElements", ReplyAction="http://tempuri.org/ICommonService/GetListOfElementsResponse")]
        string[] GetListOfElements(System.Guid SessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetTransferInformation", ReplyAction="http://tempuri.org/ICommonService/GetTransferInformationResponse")]
        CommonTestClient.CommonService.TransferInfo GetTransferInformation(System.Guid SessionId, int FolderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ICommonServiceChannel : CommonTestClient.CommonService.ICommonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CommonServiceClient : System.ServiceModel.ClientBase<CommonTestClient.CommonService.ICommonService>, CommonTestClient.CommonService.ICommonService {
        
        public CommonServiceClient() {
        }
        
        public CommonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Guid Login(string Username, string Password) {
            return base.Channel.Login(Username, Password);
        }
        
        public void Logout(System.Guid SessionIdentifier) {
            base.Channel.Logout(SessionIdentifier);
        }
        
        public int SetNotificationInformation(System.Guid SessionId, string NotificationURL) {
            return base.Channel.SetNotificationInformation(SessionId, NotificationURL);
        }
        
        public string[] GetListOfElements(System.Guid SessionId) {
            return base.Channel.GetListOfElements(SessionId);
        }
        
        public CommonTestClient.CommonService.TransferInfo GetTransferInformation(System.Guid SessionId, int FolderId) {
            return base.Channel.GetTransferInformation(SessionId, FolderId);
        }
    }
}
