<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="GroundApp V5.11.20" resourceRoot="" soapui-version="4.5.1" abortOnError="false" runType="SEQUENTIAL" id="1f7603b4-1295-4c71-ab9c-907f3fe3e9f1" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Login"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\Ground\results"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="true"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="BasicHttpBinding_DataPackageService" type="wsdl" bindingName="{http://alstom.com/pacis/pis/ground/datapackage/}BasicHttpBinding_DataPackageService" soapVersion="1_1" anonymous="optional" definition="http://alstom-ground-pis-server/DataPackage/DataPackageService.svc?wsdl" id="b5f661dd-7514-43be-8d72-349b62d54e6a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://alstom-ground-pis-server/DataPackage/DataPackageService.svc?wsdl"><con:part><con:url>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="DataPackageService" targetNamespace="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:tns="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex">
  <wsdl:types>
    <xsd:schema targetNamespace="http://alstom.com/pacis/pis/ground/datapackage/Imports">
      <xsd:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd0" namespace="http://alstom.com/pacis/pis/ground/datapackage/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/ground/datapackage"/>
      <xsd:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/schema/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd4" namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
      <xsd:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd5" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="DataPackageService_StartService_InputMessage">
    <wsdl:part name="parameters" element="tns:StartService"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_StartService_OutputMessage">
    <wsdl:part name="parameters" element="tns:StartServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_getBaselinesList_InputMessage">
    <wsdl:part name="parameters" element="tns:getBaselinesList"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_getBaselinesList_OutputMessage">
    <wsdl:part name="parameters" element="tns:getBaselinesListResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_getAddresseesDataPackagesBaselines_InputMessage">
    <wsdl:part name="parameters" element="tns:getAddresseesDataPackagesBaselines"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_getAddresseesDataPackagesBaselines_OutputMessage">
    <wsdl:part name="parameters" element="tns:getAddresseesDataPackagesBaselinesResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_uploadDataPackages_InputMessage">
    <wsdl:part name="parameters" element="tns:uploadDataPackages"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_uploadDataPackages_OutputMessage">
    <wsdl:part name="parameters" element="tns:uploadDataPackagesResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_defineNewBaseline_InputMessage">
    <wsdl:part name="parameters" element="tns:defineNewBaseline"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_defineNewBaseline_OutputMessage">
    <wsdl:part name="parameters" element="tns:defineNewBaselineResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_deleteBaselineDefinition_InputMessage">
    <wsdl:part name="parameters" element="tns:deleteBaselineDefinition"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_deleteBaselineDefinition_OutputMessage">
    <wsdl:part name="parameters" element="tns:deleteBaselineDefinitionResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_assignFutureBaselineToElement_InputMessage">
    <wsdl:part name="parameters" element="tns:assignFutureBaselineToElement"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_assignFutureBaselineToElement_OutputMessage">
    <wsdl:part name="parameters" element="tns:assignFutureBaselineToElementResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_assignCurrentBaselineToElement_InputMessage">
    <wsdl:part name="parameters" element="tns:assignCurrentBaselineToElement"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_assignCurrentBaselineToElement_OutputMessage">
    <wsdl:part name="parameters" element="tns:assignCurrentBaselineToElementResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_distributeBaseline_InputMessage">
    <wsdl:part name="parameters" element="tns:distributeBaseline"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_distributeBaseline_OutputMessage">
    <wsdl:part name="parameters" element="tns:distributeBaselineResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_forceAddresseesFutureBaseline_InputMessage">
    <wsdl:part name="parameters" element="tns:forceAddresseesFutureBaseline"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_forceAddresseesFutureBaseline_OutputMessage">
    <wsdl:part name="parameters" element="tns:forceAddresseesFutureBaselineResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_forceAddresseesArchivedBaseline_InputMessage">
    <wsdl:part name="parameters" element="tns:forceAddresseesArchivedBaseline"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_forceAddresseesArchivedBaseline_OutputMessage">
    <wsdl:part name="parameters" element="tns:forceAddresseesArchivedBaselineResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_clearAddreeseesForcingStatus_InputMessage">
    <wsdl:part name="parameters" element="tns:clearAddreeseesForcingStatus"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_clearAddreeseesForcingStatus_OutputMessage">
    <wsdl:part name="parameters" element="tns:clearAddreeseesForcingStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_GetAvailableElementDataList_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementDataList"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_GetAvailableElementDataList_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementDataListResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_unassignCurrentBaselineFromElement_InputMessage">
    <wsdl:part name="parameters" element="tns:unassignCurrentBaselineFromElement"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_unassignCurrentBaselineFromElement_OutputMessage">
    <wsdl:part name="parameters" element="tns:unassignCurrentBaselineFromElementResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_unassignFutureBaselineFromElement_InputMessage">
    <wsdl:part name="parameters" element="tns:unassignFutureBaselineFromElement"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_unassignFutureBaselineFromElement_OutputMessage">
    <wsdl:part name="parameters" element="tns:unassignFutureBaselineFromElementResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_getDataPackagesVersionsList_InputMessage">
    <wsdl:part name="parameters" element="tns:getDataPackagesVersionsList"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_getDataPackagesVersionsList_OutputMessage">
    <wsdl:part name="parameters" element="tns:getDataPackagesVersionsListResponse"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_deleteDataPackage_InputMessage">
    <wsdl:part name="parameters" element="tns:deleteDataPackage"/>
  </wsdl:message>
  <wsdl:message name="DataPackageService_deleteDataPackage_OutputMessage">
    <wsdl:part name="parameters" element="tns:deleteDataPackageResponse"/>
  </wsdl:message>
  <wsdl:portType name="DataPackageService">
    <wsdl:operation name="StartService">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/StartService" message="tns:DataPackageService_StartService_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/StartServiceResponse" message="tns:DataPackageService_StartService_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getBaselinesList">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getBaselinesList" message="tns:DataPackageService_getBaselinesList_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getBaselinesListResponse" message="tns:DataPackageService_getBaselinesList_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getAddresseesDataPackagesBaselines">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselines" message="tns:DataPackageService_getAddresseesDataPackagesBaselines_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselinesResponse" message="tns:DataPackageService_getAddresseesDataPackagesBaselines_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="uploadDataPackages">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages" message="tns:DataPackageService_uploadDataPackages_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackagesResponse" message="tns:DataPackageService_uploadDataPackages_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="defineNewBaseline">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" message="tns:DataPackageService_defineNewBaseline_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaselineResponse" message="tns:DataPackageService_defineNewBaseline_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="deleteBaselineDefinition">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/deleteBaselineDefinition" message="tns:DataPackageService_deleteBaselineDefinition_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/deleteBaselineDefinitionResponse" message="tns:DataPackageService_deleteBaselineDefinition_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="assignFutureBaselineToElement">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" message="tns:DataPackageService_assignFutureBaselineToElement_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElementResponse" message="tns:DataPackageService_assignFutureBaselineToElement_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="assignCurrentBaselineToElement">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" message="tns:DataPackageService_assignCurrentBaselineToElement_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElementResponse" message="tns:DataPackageService_assignCurrentBaselineToElement_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="distributeBaseline">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" message="tns:DataPackageService_distributeBaseline_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaselineResponse" message="tns:DataPackageService_distributeBaseline_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="forceAddresseesFutureBaseline">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" message="tns:DataPackageService_forceAddresseesFutureBaseline_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaselineResponse" message="tns:DataPackageService_forceAddresseesFutureBaseline_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="forceAddresseesArchivedBaseline">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" message="tns:DataPackageService_forceAddresseesArchivedBaseline_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaselineResponse" message="tns:DataPackageService_forceAddresseesArchivedBaseline_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="clearAddreeseesForcingStatus">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" message="tns:DataPackageService_clearAddreeseesForcingStatus_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatusResponse" message="tns:DataPackageService_clearAddreeseesForcingStatus_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementDataList">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/GetAvailableElementDataList" message="tns:DataPackageService_GetAvailableElementDataList_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/GetAvailableElementDataListResponse" message="tns:DataPackageService_GetAvailableElementDataList_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="unassignCurrentBaselineFromElement">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/unassignCurrentBaselineFromElement" message="tns:DataPackageService_unassignCurrentBaselineFromElement_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/unassignCurrentBaselineFromElementResponse" message="tns:DataPackageService_unassignCurrentBaselineFromElement_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="unassignFutureBaselineFromElement">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/unassignFutureBaselineFromElement" message="tns:DataPackageService_unassignFutureBaselineFromElement_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/unassignFutureBaselineFromElementResponse" message="tns:DataPackageService_unassignFutureBaselineFromElement_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getDataPackagesVersionsList">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getDataPackagesVersionsList" message="tns:DataPackageService_getDataPackagesVersionsList_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getDataPackagesVersionsListResponse" message="tns:DataPackageService_getDataPackagesVersionsList_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="deleteDataPackage">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/deleteDataPackage" message="tns:DataPackageService_deleteDataPackage_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/deleteDataPackageResponse" message="tns:DataPackageService_deleteDataPackage_OutputMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_DataPackageService" type="tns:DataPackageService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="StartService">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/StartService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBaselinesList">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getBaselinesList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAddresseesDataPackagesBaselines">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselines" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="uploadDataPackages">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="defineNewBaseline">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteBaselineDefinition">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/deleteBaselineDefinition" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="assignFutureBaselineToElement">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="assignCurrentBaselineToElement">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="distributeBaseline">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="forceAddresseesFutureBaseline">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="forceAddresseesArchivedBaseline">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAddreeseesForcingStatus">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementDataList">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/GetAvailableElementDataList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unassignCurrentBaselineFromElement">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/unassignCurrentBaselineFromElement" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unassignFutureBaselineFromElement">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/unassignFutureBaselineFromElement" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDataPackagesVersionsList">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getDataPackagesVersionsList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteDataPackage">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/deleteDataPackage" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DataPackageService">
    <wsdl:port name="BasicHttpBinding_DataPackageService" binding="tns:BasicHttpBinding_DataPackageService">
      <soap:address location="http://pis-ground-pc/DataPackage/DataPackageService.svc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd0</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
  <xs:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/ground/datapackage"/>
  <xs:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/schema/"/>
  <xs:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd4" namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
  <xs:element name="StartService">
    <xs:complexType>
      <xs:sequence/>
    </xs:complexType>
  </xs:element>
  <xs:element name="StartServiceResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="StartServiceResult" type="q1:DataPackageErrorEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="DataPackageErrorEnum">
    <xs:annotation>
      <xs:appinfo>
        <ActualType Name="unsignedInt" Namespace="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.microsoft.com/2003/10/Serialization/"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR"/>
      <xs:enumeration value="REQUEST_ACCEPTED"/>
      <xs:enumeration value="INVALID_SESSION_ID"/>
      <xs:enumeration value="REMOTEDATASTORE_NOT_ACCESSIBLE"/>
      <xs:enumeration value="T2G_SERVER_OFFLINE"/>
      <xs:enumeration value="INVALID_BASELINE_VERSION">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">10</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INVALID_PIS_MISSION_DATA_PACKAGE_VERSION">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">11</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INVALID_PIS_INFOTAINMENT_DATA_PACKAGE_VERSION">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">12</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INVALID_LMT_DATA_PACKAGE_VERSION">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">13</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INVALID_PIS_BASE_DATA_PACKAGE_VERSION">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">14</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ELEMENT_ID_NOT_FOUND">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">20</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INVALID_MISSION_ID">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">21</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SERVICE_INFO_NOT_FOUND">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">22</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INVALID_EXPIRATION_DATEANDTIME">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">30</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FILE_NOT_FOUND">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">40</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INVALID_PATH">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">41</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FILE_CURRENTLY_DOWNLOADING">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">42</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INVALID_TRANSFER_MODE">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">50</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INVALID_TIMEOUT">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">51</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BASELINE_IS_ASSIGNED">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">61</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SOME_BASELINES_ARE_ASSIGNED">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">62</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BASELINE_NOT_FOUND">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">63</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DATA_PACKAGE_IS_USED">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">70</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DATA_PACKAGE_IS_ASSIGNED">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">71</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DATA_PACKAGE_INVALID_VERSION">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">72</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DATA_PACKAGE_NOT_FOUND">
        <xs:annotation>
          <xs:appinfo>
            <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">73</EnumerationValue>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="DataPackageErrorEnum" nillable="true" type="q2:DataPackageErrorEnum" xmlns:q2="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:element name="getBaselinesList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pListType" type="q3:BaselinesListType" xmlns:q3="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="BaselinesListType">
    <xs:annotation>
      <xs:appinfo>
        <ActualType Name="unsignedInt" Namespace="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.microsoft.com/2003/10/Serialization/"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALL"/>
      <xs:enumeration value="DEFINED"/>
      <xs:enumeration value="UNDEFINED"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="BaselinesListType" nillable="true" type="q4:BaselinesListType" xmlns:q4="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:element name="getBaselinesListResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="getBaselinesListResult" nillable="true" type="q5:GetBaselineListResult" xmlns:q5="http://alstom.com/pacis/pis/ground/datapackage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="ArrayOfBaselineDefinition">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="BaselineDefinition" nillable="true" type="q6:BaselineDefinition" xmlns:q6="http://alstom.com/pacis/pis/ground/datapackage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfBaselineDefinition" nillable="true" type="q7:ArrayOfBaselineDefinition" xmlns:q7="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:complexType name="BaselineDefinition">
    <xs:sequence>
      <xs:element minOccurs="0" name="BaselineCreationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="BaselineDescription" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="BaselineVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="LMTDataPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="PISBaseDataPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="PISInfotainmentDataPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="PISMissionDataPackageVersion" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="BaselineDefinition" nillable="true" type="q8:BaselineDefinition" xmlns:q8="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:element name="getAddresseesDataPackagesBaselines">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pTargetAddress" nillable="true" type="q9:TargetAddressType" xmlns:q9="http://alstom.com/pacis/pis/schema/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAddresseesDataPackagesBaselinesResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="getAddresseesDataPackagesBaselinesResult" nillable="true" type="q10:GetAdresseesDataPackageBaselinesResult" xmlns:q10="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="GetAdresseesDataPackageBaselinesResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="ElementDesc" nillable="true" type="q11:ArrayOfElementDescription" xmlns:q11="http://alstom.com/pacis/pis/ground/datapackage/"/>
      <xs:element minOccurs="0" name="error_code" type="q12:DataPackageErrorEnum" xmlns:q12="http://alstom.com/pacis/pis/ground/datapackage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GetAdresseesDataPackageBaselinesResult" nillable="true" type="q13:GetAdresseesDataPackageBaselinesResult" xmlns:q13="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:complexType name="ArrayOfElementDescription">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="ElementDescription" nillable="true" type="q14:ElementDescription" xmlns:q14="http://alstom.com/pacis/pis/ground/datapackage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfElementDescription" nillable="true" type="q15:ArrayOfElementDescription" xmlns:q15="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:complexType name="ElementDescription">
    <xs:sequence>
      <xs:element minOccurs="0" name="AssignedCurrentBaseline" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="AssignedCurrentBaselineExpirationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="AssignedFutureBaseline" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="AssignedFutureBaselineActivationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="AssignedFutureBaselineExpirationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="ElementArchivedBaseline" nillable="true" type="q16:ElementBaseline" xmlns:q16="http://alstom.com/pacis/pis/ground/datapackage/"/>
      <xs:element minOccurs="0" name="ElementArchivedBaselineExpirationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="ElementCurrentBaseline" nillable="true" type="q17:ElementBaseline" xmlns:q17="http://alstom.com/pacis/pis/ground/datapackage/"/>
      <xs:element minOccurs="0" name="ElementCurrentBaselineExpirationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="ElementFutureBaseline" nillable="true" type="q18:ElementBaseline" xmlns:q18="http://alstom.com/pacis/pis/ground/datapackage/"/>
      <xs:element minOccurs="0" name="ElementFutureBaselineActivationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="ElementFutureBaselineExpirationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="ElementID" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="UndefinedBaselineLmtVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="UndefinedBaselinePisBaseVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="UndefinedBaselinePisInfotainmentVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="UndefinedBaselinePisMissionVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="isCurrentBaselineForced" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ElementDescription" nillable="true" type="q19:ElementDescription" xmlns:q19="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:complexType name="ElementBaseline">
    <xs:sequence>
      <xs:element minOccurs="0" name="BaselineDescription" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="BaselineValidity" type="xs:boolean"/>
      <xs:element minOccurs="0" name="BaselineVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="LMTDataPackageValidity" type="xs:boolean"/>
      <xs:element minOccurs="0" name="LMTDataPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="PISBaseDataPackageValidity" type="xs:boolean"/>
      <xs:element minOccurs="0" name="PISBaseDataPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="PISInfotainmentDataPackageValidity" type="xs:boolean"/>
      <xs:element minOccurs="0" name="PISInfotainmentDataPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="PISMissionDataPackageValidity" type="xs:boolean"/>
      <xs:element minOccurs="0" name="PISMissionDataPackageVersion" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ElementBaseline" nillable="true" type="q20:ElementBaseline" xmlns:q20="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:element name="uploadDataPackages">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pFilesURLs" nillable="true" type="q21:ArrayOfstring" xmlns:q21="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="uploadDataPackagesResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="uploadDataPackagesResult" nillable="true" type="q22:DataPackageResult" xmlns:q22="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DataPackageResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="error_code" type="q23:DataPackageErrorEnum" xmlns:q23="http://alstom.com/pacis/pis/ground/datapackage/"/>
      <xs:element minOccurs="0" name="reqId" type="ser:guid"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="DataPackageResult" nillable="true" type="q24:DataPackageResult" xmlns:q24="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:element name="defineNewBaseline">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pBLDef" nillable="true" type="q25:BaselineDefinition" xmlns:q25="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="defineNewBaselineResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="defineNewBaselineResult" nillable="true" type="q26:DataPackageResult" xmlns:q26="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="deleteBaselineDefinition">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pVersion" nillable="true" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="deleteBaselineDefinitionResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="deleteBaselineDefinitionResult" type="q27:DataPackageErrorEnum" xmlns:q27="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="assignFutureBaselineToElement">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pElementId" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="pBLVersion" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="pActDate" type="xs:dateTime"/>
        <xs:element minOccurs="0" name="pExpDate" type="xs:dateTime"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="assignFutureBaselineToElementResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="assignFutureBaselineToElementResult" nillable="true" type="q28:DataPackageResult" xmlns:q28="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="assignCurrentBaselineToElement">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pElementId" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="pBLVersion" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="pExpDate" type="xs:dateTime"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="assignCurrentBaselineToElementResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="assignCurrentBaselineToElementResult" nillable="true" type="q29:DataPackageResult" xmlns:q29="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="distributeBaseline">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pTargetAddress" nillable="true" type="q30:TargetAddressType" xmlns:q30="http://alstom.com/pacis/pis/schema/"/>
        <xs:element minOccurs="0" name="pBLAttributes" nillable="true" type="q31:BaselineDistributionAttributes" xmlns:q31="http://alstom.com/pacis/pis/ground/datapackage/"/>
        <xs:element minOccurs="0" name="pIncr" type="xs:boolean"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="BaselineDistributionAttributes">
    <xs:sequence>
      <xs:element minOccurs="0" name="TransferMode" type="q32:FileTransferMode" xmlns:q32="http://alstom.com/pacis/pis/schema/"/>
      <xs:element minOccurs="0" name="fileCompression" type="xs:boolean"/>
      <xs:element minOccurs="0" name="priority" type="xs:byte"/>
      <xs:element minOccurs="0" name="transferDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="transferExpirationDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="BaselineDistributionAttributes" nillable="true" type="q33:BaselineDistributionAttributes" xmlns:q33="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:element name="distributeBaselineResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="distributeBaselineResult" nillable="true" type="q34:DataPackageResult" xmlns:q34="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="forceAddresseesFutureBaseline">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pElementId" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="pReqTimeout" type="xs:unsignedInt"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="forceAddresseesFutureBaselineResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="forceAddresseesFutureBaselineResult" nillable="true" type="q35:DataPackageResult" xmlns:q35="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="forceAddresseesArchivedBaseline">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pElementId" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="pReqTimeout" type="xs:unsignedInt"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="forceAddresseesArchivedBaselineResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="forceAddresseesArchivedBaselineResult" nillable="true" type="q36:DataPackageResult" xmlns:q36="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="clearAddreeseesForcingStatus">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pElementId" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="pReqTimeout" type="xs:unsignedInt"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="clearAddreeseesForcingStatusResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="clearAddreeseesForcingStatusResult" nillable="true" type="q37:DataPackageResult" xmlns:q37="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAvailableElementDataList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAvailableElementDataListResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetAvailableElementDataListResult" nillable="true" type="q38:DataPackageResult" xmlns:q38="http://alstom.com/pacis/pis/ground/datapackage/"/>
        <xs:element minOccurs="0" name="pElementDataList" nillable="true" type="q39:ElementAvailableElementDataList" xmlns:q39="http://alstom.com/pacis/pis/schema/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="unassignCurrentBaselineFromElement">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pElementId" nillable="true" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="unassignCurrentBaselineFromElementResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="unassignCurrentBaselineFromElementResult" type="q40:DataPackageErrorEnum" xmlns:q40="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="unassignFutureBaselineFromElement">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pElementId" nillable="true" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="unassignFutureBaselineFromElementResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="unassignFutureBaselineFromElementResult" type="q41:DataPackageErrorEnum" xmlns:q41="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getDataPackagesVersionsList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pPackageType" type="q42:DataPackageType" xmlns:q42="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="DataPackageType">
    <xs:annotation>
      <xs:appinfo>
        <ActualType Name="unsignedInt" Namespace="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.microsoft.com/2003/10/Serialization/"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="PISBASE"/>
      <xs:enumeration value="PISMISSION"/>
      <xs:enumeration value="PISINFOTAINMENT"/>
      <xs:enumeration value="LMT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="DataPackageType" nillable="true" type="q43:DataPackageType" xmlns:q43="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:element name="getDataPackagesVersionsListResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="getDataPackagesVersionsListResult" type="q44:DataPackageErrorEnum" xmlns:q44="http://alstom.com/pacis/pis/ground/datapackage/"/>
        <xs:element minOccurs="0" name="pVersionsList" nillable="true" type="q45:DataPackagesVersionsList" xmlns:q45="http://alstom.com/pacis/pis/ground/datapackage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="deleteDataPackage">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="pSessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="pPackageType" type="q46:DataPackageType" xmlns:q46="http://alstom.com/pacis/pis/ground/datapackage/"/>
        <xs:element minOccurs="0" name="pPackageVersion" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="pForceDeleting" type="xs:boolean"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="deleteDataPackageResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="deleteDataPackageResult" nillable="true" type="q47:DataPackageResult" xmlns:q47="http://alstom.com/pacis/pis/ground/datapackage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd1</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:element name="anyType" nillable="true" type="xs:anyType"/>
  <xs:element name="anyURI" nillable="true" type="xs:anyURI"/>
  <xs:element name="base64Binary" nillable="true" type="xs:base64Binary"/>
  <xs:element name="boolean" nillable="true" type="xs:boolean"/>
  <xs:element name="byte" nillable="true" type="xs:byte"/>
  <xs:element name="dateTime" nillable="true" type="xs:dateTime"/>
  <xs:element name="decimal" nillable="true" type="xs:decimal"/>
  <xs:element name="double" nillable="true" type="xs:double"/>
  <xs:element name="float" nillable="true" type="xs:float"/>
  <xs:element name="int" nillable="true" type="xs:int"/>
  <xs:element name="long" nillable="true" type="xs:long"/>
  <xs:element name="QName" nillable="true" type="xs:QName"/>
  <xs:element name="short" nillable="true" type="xs:short"/>
  <xs:element name="string" nillable="true" type="xs:string"/>
  <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte"/>
  <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt"/>
  <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong"/>
  <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort"/>
  <xs:element name="char" nillable="true" type="tns:char"/>
  <xs:simpleType name="char">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>
  <xs:element name="duration" nillable="true" type="tns:duration"/>
  <xs:simpleType name="duration">
    <xs:restriction base="xs:duration">
      <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"/>
      <xs:minInclusive value="-P10675199DT2H48M5.4775808S"/>
      <xs:maxInclusive value="P10675199DT2H48M5.4775807S"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="guid" nillable="true" type="tns:guid"/>
  <xs:simpleType name="guid">
    <xs:restriction base="xs:string">
      <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="FactoryType" type="xs:QName"/>
  <xs:attribute name="Id" type="xs:ID"/>
  <xs:attribute name="Ref" type="xs:IDREF"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd2</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/datapackage" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/ground/datapackage">
  <xs:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd0" namespace="http://alstom.com/pacis/pis/ground/datapackage/"/>
  <xs:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd4" namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
  <xs:complexType name="GetBaselineListResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="baselineDef" nillable="true" type="q1:ArrayOfBaselineDefinition" xmlns:q1="http://alstom.com/pacis/pis/ground/datapackage/"/>
      <xs:element minOccurs="0" name="error_code" type="q2:DataPackageErrorEnum" xmlns:q2="http://alstom.com/pacis/pis/ground/datapackage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GetBaselineListResult" nillable="true" type="tns:GetBaselineListResult"/>
  <xs:complexType name="DataPackagesVersionsList">
    <xs:sequence>
      <xs:element minOccurs="0" name="DataPackageType" type="q3:DataPackageType" xmlns:q3="http://alstom.com/pacis/pis/ground/datapackage/"/>
      <xs:element minOccurs="0" name="VersionsList" nillable="true" type="q4:ArrayOfstring" xmlns:q4="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="DataPackagesVersionsList" nillable="true" type="tns:DataPackagesVersionsList"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd4</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
  <xs:complexType name="ArrayOfstring">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfstring" nillable="true" type="tns:ArrayOfstring"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd3</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/schema/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/schema/">
  <xs:import schemaLocation="http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd5" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
  <xs:complexType name="TargetAddressType">
    <xs:sequence>
      <xs:element name="Id" nillable="true" type="xs:string"/>
      <xs:element name="Type" type="tns:AddressTypeEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="TargetAddressType" nillable="true" type="tns:TargetAddressType"/>
  <xs:simpleType name="AddressTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Element"/>
      <xs:enumeration value="MissionOperatorCode"/>
      <xs:enumeration value="MissionCode"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="AddressTypeEnum" nillable="true" type="tns:AddressTypeEnum"/>
  <xs:simpleType name="FileTransferMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LowBandwidth"/>
      <xs:enumeration value="HighBandwidth"/>
      <xs:enumeration value="AnyBandwidth"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="FileTransferMode" nillable="true" type="tns:FileTransferMode"/>
  <xs:complexType name="ElementAvailableElementDataList">
    <xs:annotation>
      <xs:appinfo>
        <GenericType Name="Element{0}List" Namespace="http://alstom.com/pacis/pis/schema/" xmlns="http://schemas.microsoft.com/2003/10/Serialization/">
          <GenericParameter Name="AvailableElementData" Namespace="http://alstom.com/pacis/pis/schema/"/>
        </GenericType>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ElementAvailableElementDataList" nillable="true" type="tns:ElementAvailableElementDataList"/>
  <xs:complexType name="AvailableElementData">
    <xs:sequence>
      <xs:element minOccurs="0" name="ElementNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="LmtPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionCommercialNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionOperatorCode" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionState" type="q1:MissionStateEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/core/data/"/>
      <xs:element minOccurs="0" name="OnlineStatus" type="xs:boolean"/>
      <xs:element minOccurs="0" name="PisBaselineData" nillable="true" type="tns:PisBaseline"/>
      <xs:element minOccurs="0" name="PisBasicPackageVersion" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
  <xs:complexType name="PisBaseline">
    <xs:sequence>
      <xs:element minOccurs="0" name="ArchivedValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentForcedOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureActivationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisMissionOut" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PisBaseline" nillable="true" type="tns:PisBaseline"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/DataPackage/DataPackageService.svc?xsd=xsd5</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/core/data/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/ground/core/data/">
  <xs:simpleType name="MissionStateEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MI"/>
      <xs:enumeration value="ME"/>
      <xs:enumeration value="NI"/>
      <xs:enumeration value="MIE"/>
      <xs:enumeration value="DEG"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="MissionStateEnum" nillable="true" type="tns:MissionStateEnum"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:endpoint>http://pis-ground-pc/DataPackage/DataPackageService.svc</con:endpoint><con:endpoint>http://pis-ground-pc/DataPackage/DataPackageService.svc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" name="assignCurrentBaselineToElement" bindingOperationName="assignCurrentBaselineToElement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="934f30d1-67f4-480f-bd95-1b70b6972172"><con:settings/><con:call name="Request 1" id="9e7491d8-1d5a-4776-9224-ff35f44fad55"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignCurrentBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>?</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>?</dat:pBLVersion>
         <!--Optional:-->
         <dat:pExpDate>?</dat:pExpDate>
      </dat:assignCurrentBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" name="assignFutureBaselineToElement" bindingOperationName="assignFutureBaselineToElement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="65fb49a9-5234-48a1-ba93-7ede719220d9"><con:settings/><con:call name="Request 1" id="40028c53-c5ba-40a1-ae08-27c5438ba5c3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>?</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>?</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>?</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>?</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" name="clearAddreeseesForcingStatus" bindingOperationName="clearAddreeseesForcingStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="afe57374-70d7-4a15-91db-5e1a01ccaefc"><con:settings/><con:call name="Request 1" id="1bcf598a-504d-4699-9f8f-4161232ce183"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:clearAddreeseesForcingStatus>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>?</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>?</dat:pReqTimeout>
      </dat:clearAddreeseesForcingStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" name="defineNewBaseline" bindingOperationName="defineNewBaseline" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1ff663ce-a567-46bf-9035-036445fb4103"><con:settings/><con:call name="Request 1" id="7a7ef5d2-bef3-4712-9ba7-bed2adfec862"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>?</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>?</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>?</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>?</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>?</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>?</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>?</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" name="distributeBaseline" bindingOperationName="distributeBaseline" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f8c208d4-46aa-4770-b22e-42eacdb18be6"><con:settings/><con:call name="Request 1" id="4c7fb3ca-d9ad-44eb-bdd8-ef128878a01e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline><!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>?</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>?</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>?</dat:priority>
            <!--Optional:-->
            <dat:transferDate>?</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>?</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>?</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" name="forceAddresseesArchivedBaseline" bindingOperationName="forceAddresseesArchivedBaseline" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ab641382-8fdf-42db-8693-c93eff627873"><con:settings/><con:call name="Request 1" id="ad5025ea-3ca8-4ca7-b2a2-8b30614b7b7e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesArchivedBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>?</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesArchivedBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" name="forceAddresseesFutureBaseline" bindingOperationName="forceAddresseesFutureBaseline" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="5761d071-8230-44e3-9457-888cc990a16f"><con:settings/><con:call name="Request 1" id="22caae3c-232c-4c1c-aed6-e9ff34a3b3cd"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesFutureBaseline>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>?</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>?</dat:pReqTimeout>
      </dat:forceAddresseesFutureBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselines" name="getAddresseesDataPackagesBaselines" bindingOperationName="getAddresseesDataPackagesBaselines" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="2d19aed6-94a8-4c18-b4ca-df5c56e4a68d"><con:settings/><con:call name="Request 1" id="416cc869-f0fb-4de4-be47-25c192bd9d51"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getAddresseesDataPackagesBaselines>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </dat:pTargetAddress>
      </dat:getAddresseesDataPackagesBaselines>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselines"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/GetAvailableElementDataList" name="GetAvailableElementDataList" bindingOperationName="GetAvailableElementDataList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="3e551903-35ca-4980-8361-b410d4445d8e"><con:settings/><con:call name="Request 1" id="ef6a834c-3198-4d53-a0a0-91cdb7203734"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:GetAvailableElementDataList>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
      </dat:GetAvailableElementDataList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/GetAvailableElementDataList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getBaselinesList" name="getBaselinesList" bindingOperationName="getBaselinesList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="cb9dae5d-b916-4932-81ad-852b84603030"><con:settings/><con:call name="Request 1" id="6be07175-bddc-4b58-96da-64035b2cb617"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getBaselinesList>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pListType>?</dat:pListType>
      </dat:getBaselinesList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getBaselinesList"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages" name="uploadDataPackages" bindingOperationName="uploadDataPackages" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="138cddc6-40fd-4ee3-bd92-447c58bd1f09"><con:settings/><con:call name="Request 1" id="e442d55d-9719-447b-be62-53e009ffed10"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:uploadDataPackages>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pFilesURLs>
            <!--Zero or more repetitions:-->
            <arr:string>?</arr:string>
         </dat:pFilesURLs>
      </dat:uploadDataPackages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/StartService" name="StartService" bindingOperationName="StartService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="362e782e-d5bb-4e8a-8039-443e353ce8d4"><con:settings/><con:call name="Request 1" id="e74aa683-aa83-4cc7-a28e-00a0acffe113"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/StartService"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/deleteBaselineDefinition" name="deleteBaselineDefinition" bindingOperationName="deleteBaselineDefinition" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="83ee11d5-e35e-4fb2-9509-46260bf3d1d8"><con:settings/><con:call name="Request 1" id="245bfbc2-e816-4cc8-9291-c1202593890a"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:deleteBaselineDefinition>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pVersion>?</dat:pVersion>
      </dat:deleteBaselineDefinition>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/removeBaseline"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/unassignCurrentBaselineFromElement" name="unassignCurrentBaselineFromElement" bindingOperationName="unassignCurrentBaselineFromElement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="c76bb7e4-9e1e-45ae-b5b9-d332a44525e4"><con:settings/><con:call name="Request 1" id="add5dc75-e656-4ea3-98a7-7188c08a0d78"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:unassignCurrentBaselineFromElement>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>?</dat:pElementId>
      </dat:unassignCurrentBaselineFromElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/unassignCurrentBaselineFromElement"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/unassignFutureBaselineFromElement" name="unassignFutureBaselineFromElement" bindingOperationName="unassignFutureBaselineFromElement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="081b9421-e936-4bde-b833-7a6fe75a0cc2"><con:settings/><con:call name="Request 1" id="97fe87d4-ea9e-47cd-bb94-975b7ae7bc02"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:unassignFutureBaselineFromElement>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>?</dat:pElementId>
      </dat:unassignFutureBaselineFromElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/unassignFutureBaselineFromElement"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getDataPackagesVersionsList" name="getDataPackagesVersionsList" bindingOperationName="getDataPackagesVersionsList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a230de96-bc61-4fee-874d-f1230520f5dd"><con:settings/><con:call name="Request 1" id="1ec34d6d-790b-4459-aa78-09520efb1927"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getDataPackagesVersionsList>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pPackageType>?</dat:pPackageType>
      </dat:getDataPackagesVersionsList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getDataPackagesVersionsList"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/deleteDataPackage" name="deleteDataPackage" bindingOperationName="deleteDataPackage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b27d9ee3-058a-49fc-b635-43b6854bb3ae"><con:settings/><con:call name="Request 1" id="92bafc3c-1e6c-4ef1-9cff-c9536fe7e87e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:deleteDataPackage>
         <!--Optional:-->
         <dat:pSessionId>?</dat:pSessionId>
         <!--Optional:-->
         <dat:pPackageType>?</dat:pPackageType>
         <!--Optional:-->
         <dat:pPackageVersion>?</dat:pPackageVersion>
         <!--Optional:-->
         <dat:pForceDeleting>?</dat:pForceDeleting>
      </dat:deleteDataPackage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/deleteDataPackage"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="BasicHttpBinding_JournalingService" type="wsdl" bindingName="{http://alstom.com/pacis/pis/ground/infotainment/journaling/}BasicHttpBinding_JournalingService" soapVersion="1_1" anonymous="optional" definition="http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc?wsdl" id="2fa3b2f0-4a89-4e36-a5b9-928fdfa5c9b0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc?wsdl"><con:part><con:url>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="JournalingService" targetNamespace="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:tns="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex">
  <wsdl:types>
    <xsd:schema targetNamespace="http://alstom.com/pacis/pis/ground/infotainment/journaling/Imports">
      <xsd:import schemaLocation="http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd0" namespace="http://alstom.com/pacis/pis/ground/infotainment/journaling/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/schema/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="JournalingService_StartService_InputMessage">
    <wsdl:part name="parameters" element="tns:StartService"/>
  </wsdl:message>
  <wsdl:message name="JournalingService_StartService_OutputMessage">
    <wsdl:part name="parameters" element="tns:StartServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="JournalingService_GetAvailableElementList_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementList"/>
  </wsdl:message>
  <wsdl:message name="JournalingService_GetAvailableElementList_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementListResponse"/>
  </wsdl:message>
  <wsdl:message name="JournalingService_GetReport_InputMessage">
    <wsdl:part name="parameters" element="tns:GetReport"/>
  </wsdl:message>
  <wsdl:message name="JournalingService_GetReport_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetReportResponse"/>
  </wsdl:message>
  <wsdl:portType name="JournalingService">
    <wsdl:operation name="StartService">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/StartService" message="tns:JournalingService_StartService_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/StartServiceResponse" message="tns:JournalingService_StartService_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementList">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetAvailableElementList" message="tns:JournalingService_GetAvailableElementList_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetAvailableElementListResponse" message="tns:JournalingService_GetAvailableElementList_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetReport">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" message="tns:JournalingService_GetReport_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReportResponse" message="tns:JournalingService_GetReport_OutputMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_JournalingService" type="tns:JournalingService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="StartService">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/StartService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementList">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetAvailableElementList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReport">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="JournalingService">
    <wsdl:port name="BasicHttpBinding_JournalingService" binding="tns:BasicHttpBinding_JournalingService">
      <soap:address location="http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd0</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:import schemaLocation="http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
  <xs:import schemaLocation="http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/schema/"/>
  <xs:element name="StartService">
    <xs:complexType>
      <xs:sequence/>
    </xs:complexType>
  </xs:element>
  <xs:element name="StartServiceResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="StartServiceResult" type="q1:ResultCodeEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/infotainment/journaling/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="ResultCodeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="INTERNAL_ERROR"/>
      <xs:enumeration value="REQUEST_ACCEPTED"/>
      <xs:enumeration value="INVALID_SESSION_ID"/>
      <xs:enumeration value="INVALID_REQUEST_TIMEOUT"/>
      <xs:enumeration value="ELEMENT_LIST_NOT_AVAILABLE"/>
      <xs:enumeration value="UNKNOWN_ELEMENT_ID"/>
      <xs:enumeration value="UNKNOWN_MISSION_ID"/>
      <xs:enumeration value="T2G_SERVER_OFFLINE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ResultCodeEnum" nillable="true" type="q2:ResultCodeEnum" xmlns:q2="http://alstom.com/pacis/pis/ground/infotainment/journaling/"/>
  <xs:element name="GetAvailableElementList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAvailableElementListResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetAvailableElementListResult" nillable="true" type="q3:InfotainmentJournalingElementListResponse" xmlns:q3="http://alstom.com/pacis/pis/ground/infotainment/journaling/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InfotainmentJournalingElementListResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="ElementList" nillable="true" type="q4:ElementAvailableElementDataList" xmlns:q4="http://alstom.com/pacis/pis/schema/"/>
      <xs:element minOccurs="0" name="ResultCode" type="q5:ResultCodeEnum" xmlns:q5="http://alstom.com/pacis/pis/ground/infotainment/journaling/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="InfotainmentJournalingElementListResponse" nillable="true" type="q6:InfotainmentJournalingElementListResponse" xmlns:q6="http://alstom.com/pacis/pis/ground/infotainment/journaling/"/>
  <xs:element name="GetReport">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="SessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="TargetAddress" nillable="true" type="q7:TargetAddressType" xmlns:q7="http://alstom.com/pacis/pis/schema/"/>
        <xs:element minOccurs="0" name="RequestTimeout" type="xs:unsignedInt"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetReportResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetReportResult" nillable="true" type="q8:InfotainmentJournalingGetReportResponse" xmlns:q8="http://alstom.com/pacis/pis/ground/infotainment/journaling/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InfotainmentJournalingGetReportResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="RequestId" type="ser:guid"/>
      <xs:element minOccurs="0" name="ResultCode" type="q9:ResultCodeEnum" xmlns:q9="http://alstom.com/pacis/pis/ground/infotainment/journaling/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="InfotainmentJournalingGetReportResponse" nillable="true" type="q10:InfotainmentJournalingGetReportResponse" xmlns:q10="http://alstom.com/pacis/pis/ground/infotainment/journaling/"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd1</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:element name="anyType" nillable="true" type="xs:anyType"/>
  <xs:element name="anyURI" nillable="true" type="xs:anyURI"/>
  <xs:element name="base64Binary" nillable="true" type="xs:base64Binary"/>
  <xs:element name="boolean" nillable="true" type="xs:boolean"/>
  <xs:element name="byte" nillable="true" type="xs:byte"/>
  <xs:element name="dateTime" nillable="true" type="xs:dateTime"/>
  <xs:element name="decimal" nillable="true" type="xs:decimal"/>
  <xs:element name="double" nillable="true" type="xs:double"/>
  <xs:element name="float" nillable="true" type="xs:float"/>
  <xs:element name="int" nillable="true" type="xs:int"/>
  <xs:element name="long" nillable="true" type="xs:long"/>
  <xs:element name="QName" nillable="true" type="xs:QName"/>
  <xs:element name="short" nillable="true" type="xs:short"/>
  <xs:element name="string" nillable="true" type="xs:string"/>
  <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte"/>
  <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt"/>
  <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong"/>
  <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort"/>
  <xs:element name="char" nillable="true" type="tns:char"/>
  <xs:simpleType name="char">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>
  <xs:element name="duration" nillable="true" type="tns:duration"/>
  <xs:simpleType name="duration">
    <xs:restriction base="xs:duration">
      <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"/>
      <xs:minInclusive value="-P10675199DT2H48M5.4775808S"/>
      <xs:maxInclusive value="P10675199DT2H48M5.4775807S"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="guid" nillable="true" type="tns:guid"/>
  <xs:simpleType name="guid">
    <xs:restriction base="xs:string">
      <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="FactoryType" type="xs:QName"/>
  <xs:attribute name="Id" type="xs:ID"/>
  <xs:attribute name="Ref" type="xs:IDREF"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd2</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/schema/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/schema/">
  <xs:import schemaLocation="http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
  <xs:complexType name="ElementAvailableElementDataList">
    <xs:annotation>
      <xs:appinfo>
        <GenericType Name="Element{0}List" Namespace="http://alstom.com/pacis/pis/schema/" xmlns="http://schemas.microsoft.com/2003/10/Serialization/">
          <GenericParameter Name="AvailableElementData" Namespace="http://alstom.com/pacis/pis/schema/"/>
        </GenericType>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ElementAvailableElementDataList" nillable="true" type="tns:ElementAvailableElementDataList"/>
  <xs:complexType name="AvailableElementData">
    <xs:sequence>
      <xs:element minOccurs="0" name="ElementNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="LmtPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionCommercialNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionOperatorCode" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionState" type="q1:MissionStateEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/core/data/"/>
      <xs:element minOccurs="0" name="OnlineStatus" type="xs:boolean"/>
      <xs:element minOccurs="0" name="PisBaselineData" nillable="true" type="tns:PisBaseline"/>
      <xs:element minOccurs="0" name="PisBasicPackageVersion" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
  <xs:complexType name="PisBaseline">
    <xs:sequence>
      <xs:element minOccurs="0" name="ArchivedValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentForcedOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureActivationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisMissionOut" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PisBaseline" nillable="true" type="tns:PisBaseline"/>
  <xs:complexType name="TargetAddressType">
    <xs:sequence>
      <xs:element name="Id" nillable="true" type="xs:string"/>
      <xs:element name="Type" type="tns:AddressTypeEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="TargetAddressType" nillable="true" type="tns:TargetAddressType"/>
  <xs:simpleType name="AddressTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Element"/>
      <xs:enumeration value="MissionOperatorCode"/>
      <xs:enumeration value="MissionCode"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="AddressTypeEnum" nillable="true" type="tns:AddressTypeEnum"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc?xsd=xsd3</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/core/data/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/ground/core/data/">
  <xs:simpleType name="MissionStateEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MI"/>
      <xs:enumeration value="ME"/>
      <xs:enumeration value="NI"/>
      <xs:enumeration value="MIE"/>
      <xs:enumeration value="DEG"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="MissionStateEnum" nillable="true" type="tns:MissionStateEnum"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:endpoint>http://pis-ground-pc/InfotainmentJournaling/JournalingService.svc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" name="GetReport" bindingOperationName="GetReport" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="6be4c147-dff0-47f4-bb61-196312a9e79d"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="7fe00abd-6b1f-4dab-83ea-d5cd5ddf5bf3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>?</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>?</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetAvailableElementList" name="GetAvailableElementList" bindingOperationName="GetAvailableElementList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1923a9fd-f541-4443-b53a-aeafb2da9326"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="51194916-e349-47b2-9a00-50a27839d4f8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetAvailableElementList><!--Optional:-->
         <jour:sessionId>?</jour:sessionId>
      </jour:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/RetrieveElementList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/StartService" name="StartService" bindingOperationName="StartService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="75cb507f-981b-4ca3-92ed-4e0e645f2441"><con:settings/><con:call name="Request 1" id="579a27fd-d4eb-455d-a398-c2db8c868d79"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/StartService"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="BasicHttpBinding_InstantMessage" type="wsdl" bindingName="{http://alstom.com/pacis/pis/ground/instantmessage/}BasicHttpBinding_InstantMessage" soapVersion="1_1" anonymous="optional" definition="http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc?wsdl" id="614dedbb-2902-4a3e-93b3-dae1599a4db9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc?wsdl"><con:part><con:url>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="InstantMessageService" targetNamespace="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:tns="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex">
  <wsdl:types>
    <xsd:schema targetNamespace="http://alstom.com/pacis/pis/ground/instantmessage/Imports">
      <xsd:import schemaLocation="http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd0" namespace="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/schema/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="InstantMessage_StartService_InputMessage">
    <wsdl:part name="parameters" element="tns:StartService"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_StartService_OutputMessage">
    <wsdl:part name="parameters" element="tns:StartServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_GetAvailableElementList_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementList"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_GetAvailableElementList_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementListResponse"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_RetrieveMessageTemplateList_InputMessage">
    <wsdl:part name="parameters" element="tns:RetrieveMessageTemplateList"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_RetrieveMessageTemplateList_OutputMessage">
    <wsdl:part name="parameters" element="tns:RetrieveMessageTemplateListResponse"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_RetrieveStationList_InputMessage">
    <wsdl:part name="parameters" element="tns:RetrieveStationList"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_RetrieveStationList_OutputMessage">
    <wsdl:part name="parameters" element="tns:RetrieveStationListResponse"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_SendPredefinedMessages_InputMessage">
    <wsdl:part name="parameters" element="tns:SendPredefinedMessages"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_SendPredefinedMessages_OutputMessage">
    <wsdl:part name="parameters" element="tns:SendPredefinedMessagesResponse"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_SendFreeTextMessage_InputMessage">
    <wsdl:part name="parameters" element="tns:SendFreeTextMessage"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_SendFreeTextMessage_OutputMessage">
    <wsdl:part name="parameters" element="tns:SendFreeTextMessageResponse"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_SendScheduledMessage_InputMessage">
    <wsdl:part name="parameters" element="tns:SendScheduledMessage"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_SendScheduledMessage_OutputMessage">
    <wsdl:part name="parameters" element="tns:SendScheduledMessageResponse"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_CancelAllMessages_InputMessage">
    <wsdl:part name="parameters" element="tns:CancelAllMessages"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_CancelAllMessages_OutputMessage">
    <wsdl:part name="parameters" element="tns:CancelAllMessagesResponse"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_CancelScheduledMessage_InputMessage">
    <wsdl:part name="parameters" element="tns:CancelScheduledMessage"/>
  </wsdl:message>
  <wsdl:message name="InstantMessage_CancelScheduledMessage_OutputMessage">
    <wsdl:part name="parameters" element="tns:CancelScheduledMessageResponse"/>
  </wsdl:message>
  <wsdl:portType name="InstantMessage">
    <wsdl:operation name="StartService">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/StartService" message="tns:InstantMessage_StartService_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/StartServiceResponse" message="tns:InstantMessage_StartService_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementList">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/GetAvailableElementList" message="tns:InstantMessage_GetAvailableElementList_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/GetAvailableElementListResponse" message="tns:InstantMessage_GetAvailableElementList_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="RetrieveMessageTemplateList">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" message="tns:InstantMessage_RetrieveMessageTemplateList_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateListResponse" message="tns:InstantMessage_RetrieveMessageTemplateList_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="RetrieveStationList">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" message="tns:InstantMessage_RetrieveStationList_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationListResponse" message="tns:InstantMessage_RetrieveStationList_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="SendPredefinedMessages">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" message="tns:InstantMessage_SendPredefinedMessages_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessagesResponse" message="tns:InstantMessage_SendPredefinedMessages_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="SendFreeTextMessage">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendFreeTextMessage" message="tns:InstantMessage_SendFreeTextMessage_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendFreeTextMessageResponse" message="tns:InstantMessage_SendFreeTextMessage_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="SendScheduledMessage">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendScheduledMessage" message="tns:InstantMessage_SendScheduledMessage_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendScheduledMessageResponse" message="tns:InstantMessage_SendScheduledMessage_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CancelAllMessages">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessages" message="tns:InstantMessage_CancelAllMessages_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessagesResponse" message="tns:InstantMessage_CancelAllMessages_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CancelScheduledMessage">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduledMessage" message="tns:InstantMessage_CancelScheduledMessage_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduledMessageResponse" message="tns:InstantMessage_CancelScheduledMessage_OutputMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_InstantMessage" type="tns:InstantMessage">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="StartService">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/StartService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementList">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/GetAvailableElementList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RetrieveMessageTemplateList">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RetrieveStationList">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendPredefinedMessages">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendFreeTextMessage">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendFreeTextMessage" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendScheduledMessage">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendScheduledMessage" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelAllMessages">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessages" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelScheduledMessage">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduledMessage" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="InstantMessageService">
    <wsdl:port name="BasicHttpBinding_InstantMessage" binding="tns:BasicHttpBinding_InstantMessage">
      <soap:address location="http://pis-ground-pc/InstantMessage/InstantMessageService.svc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd0</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:import schemaLocation="http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
  <xs:import schemaLocation="http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/schema/"/>
  <xs:element name="StartService">
    <xs:complexType>
      <xs:sequence/>
    </xs:complexType>
  </xs:element>
  <xs:element name="StartServiceResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="StartServiceResult" type="q1:InstantMessageErrorEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="InstantMessageErrorEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REQUEST_ACCEPTED"/>
      <xs:enumeration value="INVALID_SESSION_ID"/>
      <xs:enumeration value="INVALID_REQUEST_TIMEOUT"/>
      <xs:enumeration value="UNKNOWN_ELEMENT_ID"/>
      <xs:enumeration value="UNKNOWN_MISSION_ID"/>
      <xs:enumeration value="MESSAGE_TEMPLATE_LIST_NOT_AVAILABLE"/>
      <xs:enumeration value="STATION_LIST_NOT_AVAILABLE"/>
      <xs:enumeration value="ELEMENT_LIST_NOT_AVAILABLE"/>
      <xs:enumeration value="PIS_DATASTORE_NOT_ACCESSIBLE"/>
      <xs:enumeration value="T2G_SERVER_OFFLINE"/>
      <xs:enumeration value="TEMPLATE_FILE_NOT_FOUND"/>
      <xs:enumeration value="TEMPLATE_FILE_NOT_VALID"/>
      <xs:enumeration value="SQL_ERROR"/>
      <xs:enumeration value="INVALID_COMMAND_TYPE"/>
      <xs:enumeration value="INVALID_END_DATE"/>
      <xs:enumeration value="INVALID_START_DATE"/>
      <xs:enumeration value="INVALID_CONTEXT"/>
      <xs:enumeration value="INVALID_REQUEST_ID"/>
      <xs:enumeration value="INVALID_TRAIN_ID"/>
      <xs:enumeration value="INVALID_STATUS"/>
      <xs:enumeration value="INTERNAL_ERROR"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="InstantMessageErrorEnum" nillable="true" type="q2:InstantMessageErrorEnum" xmlns:q2="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:element name="GetAvailableElementList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAvailableElementListResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetAvailableElementListResult" nillable="true" type="q3:InstantMessageElementListResult" xmlns:q3="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InstantMessageElementListResult">
    <xs:sequence>
      <xs:element name="ElementList" nillable="true" type="q4:ElementAvailableElementDataList" xmlns:q4="http://alstom.com/pacis/pis/schema/"/>
      <xs:element name="ResultCode" type="q5:InstantMessageErrorEnum" xmlns:q5="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="InstantMessageElementListResult" nillable="true" type="q6:InstantMessageElementListResult" xmlns:q6="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:element name="RetrieveMessageTemplateList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q7:TargetAddressType" xmlns:q7="http://alstom.com/pacis/pis/schema/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RetrieveMessageTemplateListResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="RetrieveMessageTemplateListResult" nillable="true" type="q8:InstantMessageTemplateListResult" xmlns:q8="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InstantMessageTemplateListResult">
    <xs:sequence>
      <xs:element name="MessageTemplateList" nillable="true" type="q9:MessageTemplateList" xmlns:q9="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      <xs:element name="ResultCode" type="q10:InstantMessageErrorEnum" xmlns:q10="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="InstantMessageTemplateListResult" nillable="true" type="q11:InstantMessageTemplateListResult" xmlns:q11="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="MessageTemplateList">
    <xs:sequence>
      <xs:element name="FreeTextMessageTemplateList" nillable="true" type="q12:ArrayOfFreeTextMessageTemplate" xmlns:q12="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      <xs:element name="PredefinedMessageTemplateList" nillable="true" type="q13:ArrayOfPredefinedMessageTemplate" xmlns:q13="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      <xs:element name="ScheduledMessageTemplateList" nillable="true" type="q14:ArrayOfScheduledMessageTemplate" xmlns:q14="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MessageTemplateList" nillable="true" type="q15:MessageTemplateList" xmlns:q15="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="ArrayOfFreeTextMessageTemplate">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="FreeTextMessageTemplate" nillable="true" type="q16:FreeTextMessageTemplate" xmlns:q16="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfFreeTextMessageTemplate" nillable="true" type="q17:ArrayOfFreeTextMessageTemplate" xmlns:q17="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="FreeTextMessageTemplate">
    <xs:sequence>
      <xs:element name="Category" nillable="true" type="xs:string"/>
      <xs:element name="Class" nillable="true" type="xs:string"/>
      <xs:element name="DescriptionList" nillable="true" type="q18:ArrayOfDescription" xmlns:q18="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      <xs:element name="Identifier" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="FreeTextMessageTemplate" nillable="true" type="q19:FreeTextMessageTemplate" xmlns:q19="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="ArrayOfDescription">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Description" nillable="true" type="q20:Description" xmlns:q20="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfDescription" nillable="true" type="q21:ArrayOfDescription" xmlns:q21="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="Description">
    <xs:sequence>
      <xs:element name="Language" nillable="true" type="xs:string"/>
      <xs:element name="Text" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Description" nillable="true" type="q22:Description" xmlns:q22="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="ArrayOfPredefinedMessageTemplate">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="PredefinedMessageTemplate" nillable="true" type="q23:PredefinedMessageTemplate" xmlns:q23="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfPredefinedMessageTemplate" nillable="true" type="q24:ArrayOfPredefinedMessageTemplate" xmlns:q24="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="PredefinedMessageTemplate">
    <xs:sequence>
      <xs:element name="Category" nillable="true" type="xs:string"/>
      <xs:element name="Class" nillable="true" type="xs:string"/>
      <xs:element name="DescriptionList" nillable="true" type="q25:ArrayOfDescription" xmlns:q25="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      <xs:element name="Identifier" nillable="true" type="xs:string"/>
      <xs:element name="ParameterList" nillable="true" type="q26:ArrayOfParameter" xmlns:q26="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PredefinedMessageTemplate" nillable="true" type="q27:PredefinedMessageTemplate" xmlns:q27="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="ArrayOfParameter">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Parameter" type="q28:Parameter" xmlns:q28="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfParameter" nillable="true" type="q29:ArrayOfParameter" xmlns:q29="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:simpleType name="Parameter">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Class"/>
      <xs:enumeration value="StationId"/>
      <xs:enumeration value="CarId"/>
      <xs:enumeration value="Delay"/>
      <xs:enumeration value="DelayReason"/>
      <xs:enumeration value="Hour"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="Parameter" nillable="true" type="q30:Parameter" xmlns:q30="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="ArrayOfScheduledMessageTemplate">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="ScheduledMessageTemplate" nillable="true" type="q31:ScheduledMessageTemplate" xmlns:q31="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfScheduledMessageTemplate" nillable="true" type="q32:ArrayOfScheduledMessageTemplate" xmlns:q32="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="ScheduledMessageTemplate">
    <xs:sequence>
      <xs:element name="Category" nillable="true" type="xs:string"/>
      <xs:element name="Class" nillable="true" type="xs:string"/>
      <xs:element name="DescriptionList" nillable="true" type="q33:ArrayOfDescription" xmlns:q33="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      <xs:element name="Identifier" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ScheduledMessageTemplate" nillable="true" type="q34:ScheduledMessageTemplate" xmlns:q34="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:element name="RetrieveStationList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q35:TargetAddressType" xmlns:q35="http://alstom.com/pacis/pis/schema/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RetrieveStationListResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="RetrieveStationListResult" nillable="true" type="q36:InstantMessageStationListResult" xmlns:q36="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InstantMessageStationListResult">
    <xs:sequence>
      <xs:element name="InstantMessageStationList" nillable="true" type="q37:ArrayOfStation" xmlns:q37="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      <xs:element name="ResultCode" type="q38:InstantMessageErrorEnum" xmlns:q38="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="InstantMessageStationListResult" nillable="true" type="q39:InstantMessageStationListResult" xmlns:q39="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="ArrayOfStation">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Station" nillable="true" type="q40:Station" xmlns:q40="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfStation" nillable="true" type="q41:ArrayOfStation" xmlns:q41="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="Station">
    <xs:sequence>
      <xs:element name="NameList" nillable="true" type="q42:ArrayOfStationName" xmlns:q42="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      <xs:element name="OperatorCode" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Station" nillable="true" type="q43:Station" xmlns:q43="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="ArrayOfStationName">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="StationName" nillable="true" type="q44:StationName" xmlns:q44="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfStationName" nillable="true" type="q45:ArrayOfStationName" xmlns:q45="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="StationName">
    <xs:sequence>
      <xs:element name="Language" nillable="true" type="xs:string"/>
      <xs:element name="Name" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="StationName" nillable="true" type="q46:StationName" xmlns:q46="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:element name="SendPredefinedMessages">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q47:TargetAddressType" xmlns:q47="http://alstom.com/pacis/pis/schema/"/>
        <xs:element minOccurs="0" name="requestTimeout" nillable="true" type="xs:unsignedInt"/>
        <xs:element minOccurs="0" name="Messages" nillable="true" type="q48:ArrayOfPredefinedMessageType" xmlns:q48="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="ArrayOfPredefinedMessageType">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="PredefinedMessageType" nillable="true" type="q49:PredefinedMessageType" xmlns:q49="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfPredefinedMessageType" nillable="true" type="q50:ArrayOfPredefinedMessageType" xmlns:q50="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="PredefinedMessageType">
    <xs:sequence>
      <xs:element minOccurs="0" name="CarId" nillable="true" type="xs:unsignedInt"/>
      <xs:element minOccurs="0" name="Delay" nillable="true" type="xs:unsignedInt"/>
      <xs:element minOccurs="0" name="DelayReason" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="Hour" nillable="true" type="xs:dateTime"/>
      <xs:element name="Identifier" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="StationId" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PredefinedMessageType" nillable="true" type="q51:PredefinedMessageType" xmlns:q51="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:element name="SendPredefinedMessagesResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="SendPredefinedMessagesResult" nillable="true" type="q52:InstantMessageResult" xmlns:q52="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InstantMessageResult">
    <xs:sequence>
      <xs:element name="RequestId" type="ser:guid"/>
      <xs:element name="ResultCode" type="q53:InstantMessageErrorEnum" xmlns:q53="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="InstantMessageResult" nillable="true" type="q54:InstantMessageResult" xmlns:q54="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:element name="SendFreeTextMessage">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q55:TargetAddressType" xmlns:q55="http://alstom.com/pacis/pis/schema/"/>
        <xs:element minOccurs="0" name="requestTimeout" nillable="true" type="xs:unsignedInt"/>
        <xs:element minOccurs="0" name="Message" nillable="true" type="q56:FreeTextMessageType" xmlns:q56="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="FreeTextMessageType">
    <xs:sequence>
      <xs:element name="AttentionGetter" type="xs:boolean"/>
      <xs:element name="DelayBetweenRepetitions" type="xs:unsignedInt"/>
      <xs:element name="DisplayDuration" type="xs:unsignedInt"/>
      <xs:element name="FreeText" nillable="true" type="xs:string"/>
      <xs:element name="Identifier" nillable="true" type="xs:string"/>
      <xs:element name="NumberOfRepetitions" type="xs:unsignedInt"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="FreeTextMessageType" nillable="true" type="q57:FreeTextMessageType" xmlns:q57="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:element name="SendFreeTextMessageResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="SendFreeTextMessageResult" nillable="true" type="q58:InstantMessageResult" xmlns:q58="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SendScheduledMessage">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q59:TargetAddressType" xmlns:q59="http://alstom.com/pacis/pis/schema/"/>
        <xs:element minOccurs="0" name="requestTimeout" nillable="true" type="xs:unsignedInt"/>
        <xs:element minOccurs="0" name="Message" nillable="true" type="q60:ScheduledMessageType" xmlns:q60="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="ScheduledMessageType">
    <xs:sequence>
      <xs:element name="FreeText" nillable="true" type="xs:string"/>
      <xs:element name="Identifier" nillable="true" type="xs:string"/>
      <xs:element name="Period" nillable="true" type="q61:ScheduledPeriod" xmlns:q61="http://alstom.com/pacis/pis/ground/instantmessage/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ScheduledMessageType" nillable="true" type="q62:ScheduledMessageType" xmlns:q62="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:complexType name="ScheduledPeriod">
    <xs:sequence>
      <xs:element name="EndDateTime" type="xs:dateTime"/>
      <xs:element name="StartDateTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ScheduledPeriod" nillable="true" type="q63:ScheduledPeriod" xmlns:q63="http://alstom.com/pacis/pis/ground/instantmessage/"/>
  <xs:element name="SendScheduledMessageResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="SendScheduledMessageResult" nillable="true" type="q64:InstantMessageResult" xmlns:q64="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CancelAllMessages">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q65:TargetAddressType" xmlns:q65="http://alstom.com/pacis/pis/schema/"/>
        <xs:element minOccurs="0" name="requestTimeout" nillable="true" type="xs:unsignedInt"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CancelAllMessagesResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="CancelAllMessagesResult" nillable="true" type="q66:InstantMessageResult" xmlns:q66="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CancelScheduledMessage">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="requestId" type="ser:guid"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q67:TargetAddressType" xmlns:q67="http://alstom.com/pacis/pis/schema/"/>
        <xs:element minOccurs="0" name="requestTimeout" nillable="true" type="xs:unsignedInt"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CancelScheduledMessageResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="CancelScheduledMessageResult" nillable="true" type="q68:InstantMessageResult" xmlns:q68="http://alstom.com/pacis/pis/ground/instantmessage/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd1</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:element name="anyType" nillable="true" type="xs:anyType"/>
  <xs:element name="anyURI" nillable="true" type="xs:anyURI"/>
  <xs:element name="base64Binary" nillable="true" type="xs:base64Binary"/>
  <xs:element name="boolean" nillable="true" type="xs:boolean"/>
  <xs:element name="byte" nillable="true" type="xs:byte"/>
  <xs:element name="dateTime" nillable="true" type="xs:dateTime"/>
  <xs:element name="decimal" nillable="true" type="xs:decimal"/>
  <xs:element name="double" nillable="true" type="xs:double"/>
  <xs:element name="float" nillable="true" type="xs:float"/>
  <xs:element name="int" nillable="true" type="xs:int"/>
  <xs:element name="long" nillable="true" type="xs:long"/>
  <xs:element name="QName" nillable="true" type="xs:QName"/>
  <xs:element name="short" nillable="true" type="xs:short"/>
  <xs:element name="string" nillable="true" type="xs:string"/>
  <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte"/>
  <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt"/>
  <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong"/>
  <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort"/>
  <xs:element name="char" nillable="true" type="tns:char"/>
  <xs:simpleType name="char">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>
  <xs:element name="duration" nillable="true" type="tns:duration"/>
  <xs:simpleType name="duration">
    <xs:restriction base="xs:duration">
      <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"/>
      <xs:minInclusive value="-P10675199DT2H48M5.4775808S"/>
      <xs:maxInclusive value="P10675199DT2H48M5.4775807S"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="guid" nillable="true" type="tns:guid"/>
  <xs:simpleType name="guid">
    <xs:restriction base="xs:string">
      <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="FactoryType" type="xs:QName"/>
  <xs:attribute name="Id" type="xs:ID"/>
  <xs:attribute name="Ref" type="xs:IDREF"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd2</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/schema/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/schema/">
  <xs:import schemaLocation="http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
  <xs:complexType name="ElementAvailableElementDataList">
    <xs:annotation>
      <xs:appinfo>
        <GenericType Name="Element{0}List" Namespace="http://alstom.com/pacis/pis/schema/" xmlns="http://schemas.microsoft.com/2003/10/Serialization/">
          <GenericParameter Name="AvailableElementData" Namespace="http://alstom.com/pacis/pis/schema/"/>
        </GenericType>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ElementAvailableElementDataList" nillable="true" type="tns:ElementAvailableElementDataList"/>
  <xs:complexType name="AvailableElementData">
    <xs:sequence>
      <xs:element minOccurs="0" name="ElementNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="LmtPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionCommercialNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionOperatorCode" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionState" type="q1:MissionStateEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/core/data/"/>
      <xs:element minOccurs="0" name="OnlineStatus" type="xs:boolean"/>
      <xs:element minOccurs="0" name="PisBaselineData" nillable="true" type="tns:PisBaseline"/>
      <xs:element minOccurs="0" name="PisBasicPackageVersion" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
  <xs:complexType name="PisBaseline">
    <xs:sequence>
      <xs:element minOccurs="0" name="ArchivedValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentForcedOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureActivationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisMissionOut" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PisBaseline" nillable="true" type="tns:PisBaseline"/>
  <xs:complexType name="TargetAddressType">
    <xs:sequence>
      <xs:element name="Id" nillable="true" type="xs:string"/>
      <xs:element name="Type" type="tns:AddressTypeEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="TargetAddressType" nillable="true" type="tns:TargetAddressType"/>
  <xs:simpleType name="AddressTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Element"/>
      <xs:enumeration value="MissionOperatorCode"/>
      <xs:enumeration value="MissionCode"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="AddressTypeEnum" nillable="true" type="tns:AddressTypeEnum"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/InstantMessage/InstantMessageService.svc?xsd=xsd3</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/core/data/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/ground/core/data/">
  <xs:simpleType name="MissionStateEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MI"/>
      <xs:enumeration value="ME"/>
      <xs:enumeration value="NI"/>
      <xs:enumeration value="MIE"/>
      <xs:enumeration value="DEG"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="MissionStateEnum" nillable="true" type="tns:MissionStateEnum"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://cnsla1bknc.dom3.ad.sys/PIS/InstantMessage/InstantMessageService.svc</con:endpoint><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:endpoint>http://pis-ground-pc/InstantMessage/InstantMessageService.svc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessages" name="CancelAllMessages" bindingOperationName="CancelAllMessages" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="6545c21d-4837-4215-b5c5-6d5bd1bfc3b2"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="d473fe3a-47dc-4841-9757-bd166882cbaa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages><!--Optional:-->
         <ins:sessionId>?</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>?</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduledMessage" name="CancelScheduledMessage" bindingOperationName="CancelScheduledMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1deda7a7-a101-4740-b8ab-477e931b1112"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="ed72c3a1-6b5e-4fe0-a9cb-55717f7c7590"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage><!--Optional:-->
         <ins:sessionId>?</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>?</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>?</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/GetAvailableElementList" name="GetAvailableElementList" bindingOperationName="GetAvailableElementList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ba03436e-3dd3-4a85-b7ae-16ed76050d1e"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="264d39a9-8905-4904-962f-0a080c6aae40"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:GetAvailableElementList><!--Optional:-->
         <ins:sessionId>?</ins:sessionId>
      </ins:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveElementList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" name="RetrieveMessageTemplateList" bindingOperationName="RetrieveMessageTemplateList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f43270bd-3199-49d7-806e-613b44e03f90"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="74969249-98cb-46e4-8ce5-e00186fcc602"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveMessageTemplateList>
         <!--Optional:-->
         <ins:sessionId>?</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveMessageTemplateList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" name="RetrieveStationList" bindingOperationName="RetrieveStationList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a1ce8098-c643-4631-99b0-a3a53e4e4318"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="da353e96-bfa0-4607-a0f7-a90db4047b1a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveStationList>
         <!--Optional:-->
         <ins:sessionId>?</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveStationList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" name="SendPredefinedMessages" bindingOperationName="SendPredefinedMessages" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a693fef9-7680-40d1-93ea-78524104a633"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="f84267fb-753f-4952-ab7d-21c1dd8d15cb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>?</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>?</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>?</ins:CarId>
               <!--Optional:-->
               <ins:Delay>?</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>?</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>?</ins:Hour>
               <ins:Identifier>?</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>?</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendFreeTextMessage" name="SendFreeTextMessage" bindingOperationName="SendFreeTextMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="140667ec-7d93-48ec-9550-6ce81bc42f16"><con:settings/><con:call name="Request 1" id="2c4a796f-2ec9-4c5b-aa59-f7cb14849ae3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendFreeTextMessage>
         <!--Optional:-->
         <ins:sessionId>?</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>?</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:AttentionGetter>?</ins:AttentionGetter>
            <ins:DelayBetweenRepetitions>?</ins:DelayBetweenRepetitions>
            <ins:DisplayDuration>?</ins:DisplayDuration>
            <ins:FreeText>?</ins:FreeText>
            <ins:Identifier>?</ins:Identifier>
            <ins:NumberOfRepetitions>?</ins:NumberOfRepetitions>
         </ins:Message>
      </ins:SendFreeTextMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendFreeTextMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendScheduledMessage" name="SendScheduledMessage" bindingOperationName="SendScheduledMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="e34ce2d3-8a3c-4c2f-bff1-276c4f3e4a03"><con:settings/><con:call name="Request 1" id="7bc03dac-4adf-4e59-a9c0-92938655cdba"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>?</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>?</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>?</ins:FreeText>
            <ins:Identifier>?</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>?</ins:EndDateTime>
               <ins:StartDateTime>?</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendScheduledMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/StartService" name="StartService" bindingOperationName="StartService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="43bc5cc7-92ae-4b24-a232-df0c0848e949"><con:settings/><con:call name="Request 1" id="b28dfff3-b00f-415d-b3c9-a5daefcec433"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/StartService"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="BasicHttpBinding_ISessionService" type="wsdl" bindingName="{http://alstom.com/pacis/pis/ground/session/}BasicHttpBinding_ISessionService" soapVersion="1_1" anonymous="optional" definition="http://alstom-ground-pis-server/Session/SessionService.svc?wsdl" id="69b9808b-b959-4c28-998a-16b9358580a3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://alstom-ground-pis-server/Session/SessionService.svc?wsdl"><con:part><con:url>http://alstom-ground-pis-server/Session/SessionService.svc?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SessionService" targetNamespace="http://alstom.com/pacis/pis/ground/session/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:tns="http://alstom.com/pacis/pis/ground/session/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex">
  <wsdl:types>
    <xsd:schema targetNamespace="http://alstom.com/pacis/pis/ground/session/Imports">
      <xsd:import schemaLocation="http://pis-ground-pc/Session/SessionService.svc?xsd=xsd0" namespace="http://alstom.com/pacis/pis/ground/session/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/Session/SessionService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ISessionService_Login_InputMessage">
    <wsdl:part name="parameters" element="tns:Login"/>
  </wsdl:message>
  <wsdl:message name="ISessionService_Login_OutputMessage">
    <wsdl:part name="parameters" element="tns:LoginResponse"/>
  </wsdl:message>
  <wsdl:message name="ISessionService_Logout_InputMessage">
    <wsdl:part name="parameters" element="tns:Logout"/>
  </wsdl:message>
  <wsdl:message name="ISessionService_Logout_OutputMessage">
    <wsdl:part name="parameters" element="tns:LogoutResponse"/>
  </wsdl:message>
  <wsdl:message name="ISessionService_SetNotificationInformation_InputMessage">
    <wsdl:part name="parameters" element="tns:SetNotificationInformation"/>
  </wsdl:message>
  <wsdl:message name="ISessionService_SetNotificationInformation_OutputMessage">
    <wsdl:part name="parameters" element="tns:SetNotificationInformationResponse"/>
  </wsdl:message>
  <wsdl:message name="ISessionService_IsSessionValid_InputMessage">
    <wsdl:part name="parameters" element="tns:IsSessionValid"/>
  </wsdl:message>
  <wsdl:message name="ISessionService_IsSessionValid_OutputMessage">
    <wsdl:part name="parameters" element="tns:IsSessionValidResponse"/>
  </wsdl:message>
  <wsdl:portType name="ISessionService">
    <wsdl:operation name="Login">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/session/ISessionService/Login" message="tns:ISessionService_Login_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/session/ISessionService/LoginResponse" message="tns:ISessionService_Login_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="Logout">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/session/ISessionService/Logout" message="tns:ISessionService_Logout_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/session/ISessionService/LogoutResponse" message="tns:ISessionService_Logout_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="SetNotificationInformation">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/session/ISessionService/SetNotificationInformation" message="tns:ISessionService_SetNotificationInformation_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/session/ISessionService/SetNotificationInformationResponse" message="tns:ISessionService_SetNotificationInformation_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="IsSessionValid">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/session/ISessionService/IsSessionValid" message="tns:ISessionService_IsSessionValid_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/session/ISessionService/IsSessionValidResponse" message="tns:ISessionService_IsSessionValid_OutputMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_ISessionService" type="tns:ISessionService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="Login">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/session/ISessionService/Login" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Logout">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/session/ISessionService/Logout" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetNotificationInformation">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/session/ISessionService/SetNotificationInformation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="IsSessionValid">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/session/ISessionService/IsSessionValid" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SessionService">
    <wsdl:port name="BasicHttpBinding_ISessionService" binding="tns:BasicHttpBinding_ISessionService">
      <soap:address location="http://pis-ground-pc/Session/SessionService.svc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://pis-ground-pc/Session/SessionService.svc?xsd=xsd0</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/session/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/ground/session/">
  <xs:import schemaLocation="http://pis-ground-pc/Session/SessionService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
  <xs:element name="Login">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="LoginResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="LoginResult" type="q1:guid" xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Logout">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q2:guid" xmlns:q2="http://schemas.microsoft.com/2003/10/Serialization/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="LogoutResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="LogoutResult" type="xs:boolean"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetNotificationInformation">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q3:guid" xmlns:q3="http://schemas.microsoft.com/2003/10/Serialization/"/>
        <xs:element minOccurs="0" name="notificationURL" nillable="true" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetNotificationInformationResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="SetNotificationInformationResult" type="xs:boolean"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IsSessionValid">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q4:guid" xmlns:q4="http://schemas.microsoft.com/2003/10/Serialization/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IsSessionValidResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="IsSessionValidResult" type="xs:boolean"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/Session/SessionService.svc?xsd=xsd1</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:element name="anyType" nillable="true" type="xs:anyType"/>
  <xs:element name="anyURI" nillable="true" type="xs:anyURI"/>
  <xs:element name="base64Binary" nillable="true" type="xs:base64Binary"/>
  <xs:element name="boolean" nillable="true" type="xs:boolean"/>
  <xs:element name="byte" nillable="true" type="xs:byte"/>
  <xs:element name="dateTime" nillable="true" type="xs:dateTime"/>
  <xs:element name="decimal" nillable="true" type="xs:decimal"/>
  <xs:element name="double" nillable="true" type="xs:double"/>
  <xs:element name="float" nillable="true" type="xs:float"/>
  <xs:element name="int" nillable="true" type="xs:int"/>
  <xs:element name="long" nillable="true" type="xs:long"/>
  <xs:element name="QName" nillable="true" type="xs:QName"/>
  <xs:element name="short" nillable="true" type="xs:short"/>
  <xs:element name="string" nillable="true" type="xs:string"/>
  <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte"/>
  <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt"/>
  <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong"/>
  <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort"/>
  <xs:element name="char" nillable="true" type="tns:char"/>
  <xs:simpleType name="char">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>
  <xs:element name="duration" nillable="true" type="tns:duration"/>
  <xs:simpleType name="duration">
    <xs:restriction base="xs:duration">
      <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"/>
      <xs:minInclusive value="-P10675199DT2H48M5.4775808S"/>
      <xs:maxInclusive value="P10675199DT2H48M5.4775807S"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="guid" nillable="true" type="tns:guid"/>
  <xs:simpleType name="guid">
    <xs:restriction base="xs:string">
      <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="FactoryType" type="xs:QName"/>
  <xs:attribute name="Id" type="xs:ID"/>
  <xs:attribute name="Ref" type="xs:IDREF"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:endpoint>http://pis-ground-pc/Session/SessionService.svc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/session/ISessionService/IsSessionValid" name="IsSessionValid" bindingOperationName="IsSessionValid" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="75cb884e-56d8-4025-9df9-883ff0c06aed"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="6f576b67-2026-46c3-8eb9-6b474c9b37ec"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:IsSessionValid>
         <!--Optional:-->
         <ses:sessionId>?</ses:sessionId>
      </ses:IsSessionValid>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/session/ISessionService/IsSessionValid"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/session/ISessionService/Login" name="Login" bindingOperationName="Login" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="7b5c3b3f-c9cd-4109-ab4f-8b2a0b35ee6d"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="3e782733-c16a-4974-9d16-fc1700a12989"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:Login>
         <!--Optional:-->
         <ses:username>admin</ses:username>
         <!--Optional:-->
         <ses:password>admin</ses:password>
      </ses:Login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/session/ISessionService/Login"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/session/ISessionService/Logout" name="Logout" bindingOperationName="Logout" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="23a87a19-4ab1-4f16-a315-ebd54c3a65b7"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="9ddd04b7-6d79-404b-9d41-2f4b0ca63078"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:Logout>
         <!--Optional:-->
         <ses:sessionId>?</ses:sessionId>
      </ses:Logout>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/session/ISessionService/Logout"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/session/ISessionService/SetNotificationInformation" name="SetNotificationInformation" bindingOperationName="SetNotificationInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="66ff4ea5-8c72-4a23-80ea-38434328ff43"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="7a8f5b8c-0c32-45aa-8408-00d37d8cef45"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:SetNotificationInformation>
         <!--Optional:-->
         <ses:sessionId>?</ses:sessionId>
         <!--Optional:-->
         <ses:notificationURL>?</ses:notificationURL>
      </ses:SetNotificationInformation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/session/ISessionService/SetNotificationInformation"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="NotificationAppGroundBinding" type="wsdl" bindingName="{http://alstom.com/pacis/pis/appground/}NotificationAppGroundBinding" soapVersion="1_2" anonymous="optional" definition="D:/CC/ingsoft_PIS_V5.14_GROUND_Dev_merge/PIS/SIF/wsdl/AppGround/AppGround.wsdl" id="43694593-c405-4e70-9ecb-ccf9afed84d5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/D:/CC/ingsoft_PIS_V5.14_GROUND_Dev_merge/PIS/SIF/wsdl/AppGround/AppGround.wsdl"><con:part><con:url>file:/D:/CC/ingsoft_PIS_V5.14_GROUND_Dev_merge/PIS/SIF/wsdl/AppGround/AppGround.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="GroundApp" targetNamespace="http://alstom.com/pacis/pis/appground/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsd1="http://alstom.com/pacis/pis/schema/appground/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://alstom.com/pacis/pis/appground/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://alstom.com/pacis/pis/schema/appground/" elementFormDefault="qualified" xmlns:common="http://alstom.com/pacis/pis/schema/common/" xmlns:notification="http://alstom.com/pacis/pis/schema/notification/">
      <xsd:import namespace="http://alstom.com/pacis/pis/schema/common/" schemaLocation="../Schema/Common.xsd"/>
      <xsd:import namespace="http://alstom.com/pacis/pis/schema/notification/" schemaLocation="../Schema/Notification.xsd"/>
      <xsd:complexType name="SendNotificationInput">
        <xsd:sequence>
          <xsd:element name="RequestId" type="common:guid"/>
          <xsd:element name="NotificationId" type="notification:NotificationIdEnum"/>
          <xsd:element name="Parameter" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SendNotificationOutput">
        <xsd:sequence/>
      </xsd:complexType>
      <xsd:element name="SendNotification" type="xsd1:SendNotificationInput"/>
      <xsd:element name="SendNotificationResponse" type="xsd1:SendNotificationOutput"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="msgSendNotificationRequest">
    <wsdl:part name="parameters" element="xsd1:SendNotification"/>
  </wsdl:message>
  <wsdl:message name="msgSendNotificationResponse">
    <wsdl:part name="parameters" element="xsd1:SendNotificationResponse"/>
  </wsdl:message>
  <wsdl:portType name="INotificationAppGroundService">
    <wsdl:operation name="SendNotification">
      <wsdl:input message="tns:msgSendNotificationRequest"/>
      <wsdl:output message="tns:msgSendNotificationResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="NotificationAppGroundBinding" type="tns:INotificationAppGroundService">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" wsdl:required="true"/>
    <wsdl:operation name="SendNotification">
      <soap12:operation soapAction="http://alstom.com/pacis/pis/ground/notification/SendNotification" wsdl:required="true"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="NotificationAppGroundService">
    <wsdl:port name="NotificationAppGroundEndpoint" binding="tns:NotificationAppGroundBinding">
      <soap12:address location="http://alstom.com/pis/ground/notification"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\D:\CC\ingsoft_PIS_V5.14_GROUND_Dev_merge\URBAN\SIF\wsdl\Schema\Common.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://alstom.com/pacis/pis/schema/common/" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:simpleType name="guid">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PackageVersionType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]{1,2}.[0-9]{1,2}.[0-9]{1,2}.[0-9]{1,2}"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\D:\CC\ingsoft_PIS_V5.14_GROUND_Dev_merge\URBAN\SIF\wsdl\Schema\Notification.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://alstom.com/pacis/pis/schema/notification/" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:simpleType name="NotificationIdEnum">
    <xsd:restriction base="xsd:string">
      <!--Data Package notifications-->
      <xsd:enumeration value="DataPackageUploadProcessing"/>
      <xsd:enumeration value="DataPackageUploadCompleted"/>
      <xsd:enumeration value="DataPackageUploadAlreadyExist"/>
      <xsd:enumeration value="DataPackageUploadFailed"/>
      <xsd:enumeration value="DataPackageBaselineDefinitionProcessing"/>
      <xsd:enumeration value="DataPackageBaselineDefinitionCompleted"/>
      <xsd:enumeration value="DataPackageBaselineDefinitionFailed"/>
      <xsd:enumeration value="DataPackageBaselineAssignmentProcessing"/>
      <xsd:enumeration value="DataPackageBaselineAssignmentCompleted"/>
      <xsd:enumeration value="DataPackageBaselineAssignmentFailed"/>
      <xsd:enumeration value="DataPackageBaselineNotInstalled"/>
      <xsd:enumeration value="DataPackageBaselineUpdatePending"/>
      <xsd:enumeration value="DataPackageDistributionProcessing"/>
      <xsd:enumeration value="DataPackageDistributionWaitingToTransfer"/>
      <xsd:enumeration value="DataPackageDistributionTransferring"/>
      <xsd:enumeration value="DataPackageDistributionTransferred"/>
      <xsd:enumeration value="DataPackageDistributionCompleted"/>
      <xsd:enumeration value="DataPackageDistributionTimedOut"/>
      <xsd:enumeration value="DataPackageDistributionFailedMissingDataPackage"/>
      <xsd:enumeration value="DataPackageDistributionFailedNoAssignedFutureBaseline"/>
      <xsd:enumeration value="DataPackageDistributionFailedTransferCancelledManually"/>
      <xsd:enumeration value="DataPackageDistributionFailedRejectedByElement"/>
      <xsd:enumeration value="DataPackageDistributionFailedUnknowOnBoardBaseline"/>
      <xsd:enumeration value="DataPackageDistributionFailedUnknowOnBoardDataPackage"/>
      <xsd:enumeration value="DataPackageDistributionInhibited"/>
      <xsd:enumeration value="DataPackageDistributionUnknowElementId"/>
      <xsd:enumeration value="DataPackageBaselineForcingProcessing"/>
      <xsd:enumeration value="DataPackageBaselineForcingWaitingToSend"/>
      <xsd:enumeration value="DataPackageBaselineForcingSent"/>
      <xsd:enumeration value="DataPackageBaselineForcingCompleted"/>
      <xsd:enumeration value="DataPackageBaselineForcingTimedOut"/>
      <xsd:enumeration value="DataPackageBaselineForcingFailed"/>
      <xsd:enumeration value="DataPackageBaselineForcingInhibited"/>
      <xsd:enumeration value="DataPackageBaselineClearForcingProcessing"/>
      <xsd:enumeration value="DataPackageBaselineClearForcingWaitingToSend"/>
      <xsd:enumeration value="DataPackageBaselineClearForcingSent"/>
      <xsd:enumeration value="DataPackageBaselineClearForcingCompleted"/>
      <xsd:enumeration value="DataPackageBaselineClearForcingTimedOut"/>
      <xsd:enumeration value="DataPackageBaselineClearForcingFailed"/>
      <xsd:enumeration value="DataPackageBaselineClearForcingInhibited"/>
      <xsd:enumeration value="DataPackageMissing"/>
      <xsd:enumeration value="DataPackageFutureBaselineDefinition"/>
      <xsd:enumeration value="DataPackageT2GServerOffline"/>
      <xsd:enumeration value="DataPackageServiceStarted"/>
      <!--Instant Message notifications-->
      <xsd:enumeration value="InstantMessageUndefinedTemplateId"/>
      <xsd:enumeration value="InstantMessageUndefinedStationId"/>
      <xsd:enumeration value="InstantMessageUnknownCarId"/>
      <xsd:enumeration value="InstantMessageInvalidDelay"/>
      <xsd:enumeration value="InstantMessageInvalidDelayReasonCode"/>
      <xsd:enumeration value="InstantMessageInvalidHour"/>
      <xsd:enumeration value="InstantMessageInvalidScheduledPeriod"/>
      <xsd:enumeration value="InstantMessageInvalidText"/>
      <xsd:enumeration value="InstantMessageInvalidRepetitionCount"/>
      <xsd:enumeration value="InstantMessageTemplateListUpdated"/>
      <xsd:enumeration value="InstantMessageStationListUpdated"/>
      <xsd:enumeration value="InstantMessageDistributionProcessing"/>
      <xsd:enumeration value="InstantMessageDistributionWaitingToSend"/>
      <xsd:enumeration value="InstantMessageDistributionSent"/>
      <xsd:enumeration value="InstantMessageDistributionReceived"/>
      <xsd:enumeration value="InstantMessageDistributionTimedOut"/>
      <xsd:enumeration value="InstantMessageDistributionInhibited"/>
      <xsd:enumeration value="InstantMessageMessageLimitExceeded"/>
      <xsd:enumeration value="InstantMessageInternalError"/>
      <xsd:enumeration value="InstantMessageElementNotFound"/>
      <xsd:enumeration value="InstantMessageServiceNotFound"/>
      <xsd:enumeration value="InstantMessageT2GServerOffline"/>
      <xsd:enumeration value="InstantMessageTemplateFileNotValid"/>
      <xsd:enumeration value="InstantMessageServiceStarted"/>
      <!--Maintenance notifications-->
      <xsd:enumeration value="MaintenanceDownloadProcessing"/>
      <xsd:enumeration value="MaintenanceDownloadWaitingToSend"/>
      <xsd:enumeration value="MaintenanceDownloadDownloading"/>
      <xsd:enumeration value="MaintenanceDownloadCompleted"/>
      <xsd:enumeration value="MaintenanceDownloadTimedOut"/>
      <xsd:enumeration value="MaintenanceDownloadInhibited"/>
      <xsd:enumeration value="MaintenanceDownloadElementNotFound"/>
      <xsd:enumeration value="MaintenanceDownloadServiceNotFound"/>
      <xsd:enumeration value="MaintenanceT2GServerOffline"/>
      <xsd:enumeration value="MaintenanceServiceStarted"/>
      <!--Infotainment notifications-->
      <xsd:enumeration value="InfotainmentDownloadProcessing"/>
      <xsd:enumeration value="InfotainmentDownloadWaitingToSend"/>
      <xsd:enumeration value="InfotainmentDownloadDownloading"/>
      <xsd:enumeration value="InfotainmentDownloadCompleted"/>
      <xsd:enumeration value="InfotainmentDownloadTimedOut"/>
      <xsd:enumeration value="InfotainmentDownloadInhibited"/>
      <xsd:enumeration value="InfotainmentDownloadElementNotFound"/>
      <xsd:enumeration value="InfotainmentDownloadServiceNotFound"/>
      <xsd:enumeration value="InfotainmentT2GServerOffline"/>
      <xsd:enumeration value="InfotainmentServiceStarted"/>
      <!--Mission Ground notifications-->
      <xsd:enumeration value="MissionCommandProgressProcessing"/>
      <xsd:enumeration value="MissionCommandProgressWaitingToSend"/>
      <xsd:enumeration value="MissionCommandProgressSent"/>
      <xsd:enumeration value="MissionCommandProgressSuccess"/>
      <xsd:enumeration value="MissionCommandProgressTimedOut"/>
      <xsd:enumeration value="MissionCommandProgressUnknownLmtDataPackageVersion"/>
      <xsd:enumeration value="MissionCommandProgressPendingValidation"/>
      <xsd:enumeration value="MissionCommandProgressUnknownElementId"/>
      <xsd:enumeration value="MissionCommandProgressUnknownLanguageCode"/>
      <xsd:enumeration value="MissionCommandProgressUnknownOnboardServiceCode"/>
      <xsd:enumeration value="MissionCommandProgressUnknownMissionOperatorCode"/>
      <xsd:enumeration value="MissionCommandProgressUnknownStationId"/>
      <xsd:enumeration value="MissionCommandProgressUnknownServiceId"/>
      <xsd:enumeration value="MissionCommandProgressInvalidServiceHours"/>
      <xsd:enumeration value="MissionCommandProgressInvalidInsertionTypeCode"/>
      <xsd:enumeration value="MissionCommandProgressInvalidCommercialNumberList"/>
      <xsd:enumeration value="MissionCommandProgressUnknownInsertionStationId"/>
      <xsd:enumeration value="MissionCommandProgressUnknownRegionCode"/>
      <xsd:enumeration value="MissionCommandProgressInvalidCarNumberingOffsetCode"/>
      <xsd:enumeration value="MissionCommandProgressInvalidStartDate"/>
      <xsd:enumeration value="MissionCommandProgressInsertionStationIsNotInRoute"/>
      <xsd:enumeration value="MissionCommandProgressLmtDataPackageVersionDifferent"/>
      <xsd:enumeration value="MissionCommandProgressValidationRejected"/>
      <xsd:enumeration value="MissionCommandProgressCancelledByNewCommand"/>
      <xsd:enumeration value="MissionCommandProgressMissionIdDifferent"/>
      <xsd:enumeration value="MissionCommandProgressNoActiveMission"/>
      <xsd:enumeration value="MissionCommandProgressServiceInhibited"/>
      <xsd:enumeration value="MissionCommandProgressTrainIsInMaintenanceMode"/>
      <xsd:enumeration value="MissionCommandT2GServerOffline"/>
      <xsd:enumeration value="MissionServiceStarted"/>
      <!--T2G Server Notification-->
      <xsd:enumeration value="CommonT2GServerOffline"/>
      <xsd:enumeration value="CommonT2GServerOnline"/>
      <!--PIS Ground internal notifications-->
      <xsd:enumeration value="Completed"/>
      <xsd:enumeration value="Failed"/>
      <xsd:enumeration value="ServiceInhibited"/>
      <!--Data Package new notifications-->
      <xsd:enumeration value="DataPackageBaselineDefinitionRequest"/>
      <xsd:enumeration value="DataPackageAssignedPackageWasDeleted"/>
      <!--Live Video Control notifications-->
      <xsd:enumeration value="LiveVideoControlVideoStreamingON"/>
      <xsd:enumeration value="LiveVideoControlVideoStreamingOFF"/>
      <xsd:enumeration value="LiveVideoControlErrorInvalidVideoStream"/>
      <xsd:enumeration value="LiveVideoControlErrorVideoStreamingInterrupted"/>
      <xsd:enumeration value="LiveVideoControlErrorNoStreamReceivedAfterStartCommand"/>
      <xsd:enumeration value="LiveVideoControlErrorUndefined"/>
      <xsd:enumeration value="LiveVideoControlDistributionProcessing"/>
      <xsd:enumeration value="LiveVideoControlDistributionTimedOut"/>
      <xsd:enumeration value="LiveVideoControlElementNotFound"/>
      <xsd:enumeration value="LiveVideoControlDistributionWaitingToSend"/>
      <xsd:enumeration value="LiveVideoControlServiceNotFound"/>
      <xsd:enumeration value="LiveVideoControlDistributionSent"/>
      <xsd:enumeration value="LiveVideoControlDistributionReceived"/>
      <xsd:enumeration value="LiveVideoControlAutomaticMode"/>
      <xsd:enumeration value="LiveVideoControlManualMode"/>
      <xsd:enumeration value="LiveVideoControlT2GServerOffline"/>
      <xsd:enumeration value="LiveVideoControlServiceStarted"/>
      <!--Common notification on element deletion-->
      <xsd:enumeration value="DeletedElement"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://alstom.com/pis/ground/notification</con:endpoint><con:endpoint>http://localhost:44444</con:endpoint><con:endpoint>http://workstation:44444/</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/notification/SendNotification" name="SendNotification" bindingOperationName="SendNotification" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="25c39293-ff29-4a74-a5f5-fd4f6da18801"><con:settings/><con:call name="Request 1" id="0ace16e0-bf08-4166-9bb7-ce470ecd4512"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:44444</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:app="http://alstom.com/pacis/pis/schema/appground/">
   <soap:Header/>
   <soap:Body>
      <app:SendNotification>
         <app:RequestId>?</app:RequestId>
         <app:NotificationId>?</app:NotificationId>
         <app:Parameter>?</app:Parameter>
      </app:SendNotification>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/appground/INotificationAppGroundService/SendNotificationRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="BasicHttpBinding_IMissionService" type="wsdl" bindingName="{http://alstom.com/pacis/pis/ground/mission/}BasicHttpBinding_IMissionService" soapVersion="1_1" anonymous="optional" definition="http://alstom-ground-pis-server/Mission/MissionService.svc?wsdl" id="ea72d2e7-41ce-46bb-ab9d-e22a21124beb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://alstom-ground-pis-server/Mission/MissionService.svc?wsdl"><con:part><con:url>http://alstom-ground-pis-server/Mission/MissionService.svc?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="MissionService" targetNamespace="http://alstom.com/pacis/pis/ground/mission/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:tns="http://alstom.com/pacis/pis/ground/mission/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex">
  <wsdl:types>
    <xsd:schema targetNamespace="http://alstom.com/pacis/pis/ground/mission/Imports">
      <xsd:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd0" namespace="http://alstom.com/pacis/pis/ground/mission/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/schema/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd4" namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
      <xsd:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd5" namespace="http://alstom.com/pacis/pis/schema/train/mission/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd6"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="IMissionService_StartService_InputMessage">
    <wsdl:part name="parameters" element="tns:StartService"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_StartService_OutputMessage">
    <wsdl:part name="parameters" element="tns:StartServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_GetAvailableElementList_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementList"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_GetAvailableElementList_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementListResponse"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_InitializeAutomaticMission_InputMessage">
    <wsdl:part name="parameters" element="tns:InitializeAutomaticMission"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_InitializeAutomaticMission_OutputMessage">
    <wsdl:part name="parameters" element="tns:InitializeAutomaticMissionResponse"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_InitializeModifiedMission_InputMessage">
    <wsdl:part name="parameters" element="tns:InitializeModifiedMission"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_InitializeModifiedMission_OutputMessage">
    <wsdl:part name="parameters" element="tns:InitializeModifiedMissionResponse"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_InitializeManualMission_InputMessage">
    <wsdl:part name="parameters" element="tns:InitializeManualMission"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_InitializeManualMission_OutputMessage">
    <wsdl:part name="parameters" element="tns:InitializeManualMissionResponse"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_StopMission_InputMessage">
    <wsdl:part name="parameters" element="tns:StopMission"/>
  </wsdl:message>
  <wsdl:message name="IMissionService_StopMission_OutputMessage">
    <wsdl:part name="parameters" element="tns:StopMissionResponse"/>
  </wsdl:message>
  <wsdl:portType name="IMissionService">
    <wsdl:operation name="StartService">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StartService" message="tns:IMissionService_StartService_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StartServiceResponse" message="tns:IMissionService_StartService_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementList">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/GetAvailableElementList" message="tns:IMissionService_GetAvailableElementList_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/GetAvailableElementListResponse" message="tns:IMissionService_GetAvailableElementList_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="InitializeAutomaticMission">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" message="tns:IMissionService_InitializeAutomaticMission_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMissionResponse" message="tns:IMissionService_InitializeAutomaticMission_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="InitializeModifiedMission">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" message="tns:IMissionService_InitializeModifiedMission_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMissionResponse" message="tns:IMissionService_InitializeModifiedMission_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="InitializeManualMission">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" message="tns:IMissionService_InitializeManualMission_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMissionResponse" message="tns:IMissionService_InitializeManualMission_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="StopMission">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" message="tns:IMissionService_StopMission_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMissionResponse" message="tns:IMissionService_StopMission_OutputMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_IMissionService" type="tns:IMissionService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="StartService">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/mission/IMissionService/StartService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementList">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/mission/IMissionService/GetAvailableElementList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="InitializeAutomaticMission">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="InitializeModifiedMission">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="InitializeManualMission">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StopMission">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MissionService">
    <wsdl:port name="BasicHttpBinding_IMissionService" binding="tns:BasicHttpBinding_IMissionService">
      <soap:address location="http://pis-ground-pc/Mission/MissionService.svc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd0</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/mission/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
  <xs:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/schema/"/>
  <xs:element name="StartService">
    <xs:complexType>
      <xs:sequence/>
    </xs:complexType>
  </xs:element>
  <xs:element name="StartServiceResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="StartServiceResult" type="q1:MissionErrorCode" xmlns:q1="http://alstom.com/pacis/pis/ground/mission/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="MissionErrorCode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REQUEST_ACCEPTED"/>
      <xs:enumeration value="INVALID_SESSION_ID"/>
      <xs:enumeration value="INVALID_REQUEST_TIMEOUT"/>
      <xs:enumeration value="PIS_DATASTORE_NOT_ACCESSIBLE"/>
      <xs:enumeration value="ELEMENT_LIST_NOT_AVAILABLE"/>
      <xs:enumeration value="INTERNAL_ERROR"/>
      <xs:enumeration value="T2G_SERVER_OFFLINE"/>
      <xs:enumeration value="INVALID_TRAIN_NAME"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="MissionErrorCode" nillable="true" type="q2:MissionErrorCode" xmlns:q2="http://alstom.com/pacis/pis/ground/mission/"/>
  <xs:element name="GetAvailableElementList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAvailableElementListResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetAvailableElementListResult" nillable="true" type="q3:MissionServiceElementListResult" xmlns:q3="http://alstom.com/pacis/pis/ground/mission/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="MissionServiceElementListResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="ElementList" nillable="true" type="q4:ElementAvailableElementDataList" xmlns:q4="http://alstom.com/pacis/pis/schema/"/>
      <xs:element minOccurs="0" name="ResultCode" type="q5:MissionErrorCode" xmlns:q5="http://alstom.com/pacis/pis/ground/mission/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MissionServiceElementListResult" nillable="true" type="q6:MissionServiceElementListResult" xmlns:q6="http://alstom.com/pacis/pis/ground/mission/"/>
  <xs:element name="InitializeAutomaticMission">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="automaticModeRequest" nillable="true" type="q7:AutomaticModeRequest" xmlns:q7="http://alstom.com/pacis/pis/schema/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="InitializeAutomaticMissionResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="InitializeAutomaticMissionResult" nillable="true" type="q8:MissionServiceResult" xmlns:q8="http://alstom.com/pacis/pis/ground/mission/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="MissionServiceResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="RequestId" type="ser:guid"/>
      <xs:element minOccurs="0" name="ResultCode" type="q9:MissionErrorCode" xmlns:q9="http://alstom.com/pacis/pis/ground/mission/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MissionServiceResult" nillable="true" type="q10:MissionServiceResult" xmlns:q10="http://alstom.com/pacis/pis/ground/mission/"/>
  <xs:element name="InitializeModifiedMission">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="modifiedModeRequest" nillable="true" type="q11:ModifiedModeRequest" xmlns:q11="http://alstom.com/pacis/pis/schema/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="InitializeModifiedMissionResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="InitializeModifiedMissionResult" nillable="true" type="q12:MissionServiceResult" xmlns:q12="http://alstom.com/pacis/pis/ground/mission/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="InitializeManualMission">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="manualModeRequest" nillable="true" type="q13:ManualModeRequest" xmlns:q13="http://alstom.com/pacis/pis/schema/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="InitializeManualMissionResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="InitializeManualMissionResult" nillable="true" type="q14:MissionServiceResult" xmlns:q14="http://alstom.com/pacis/pis/ground/mission/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="StopMission">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="onBoardValidationFlag" type="xs:boolean"/>
        <xs:element minOccurs="0" name="elementAlphaNumber" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="missionId" nillable="true" type="xs:string"/>
        <xs:element minOccurs="0" name="timeOut" type="xs:unsignedInt"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="StopMissionResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="StopMissionResult" nillable="true" type="q15:MissionServiceResult" xmlns:q15="http://alstom.com/pacis/pis/ground/mission/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd1</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:element name="anyType" nillable="true" type="xs:anyType"/>
  <xs:element name="anyURI" nillable="true" type="xs:anyURI"/>
  <xs:element name="base64Binary" nillable="true" type="xs:base64Binary"/>
  <xs:element name="boolean" nillable="true" type="xs:boolean"/>
  <xs:element name="byte" nillable="true" type="xs:byte"/>
  <xs:element name="dateTime" nillable="true" type="xs:dateTime"/>
  <xs:element name="decimal" nillable="true" type="xs:decimal"/>
  <xs:element name="double" nillable="true" type="xs:double"/>
  <xs:element name="float" nillable="true" type="xs:float"/>
  <xs:element name="int" nillable="true" type="xs:int"/>
  <xs:element name="long" nillable="true" type="xs:long"/>
  <xs:element name="QName" nillable="true" type="xs:QName"/>
  <xs:element name="short" nillable="true" type="xs:short"/>
  <xs:element name="string" nillable="true" type="xs:string"/>
  <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte"/>
  <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt"/>
  <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong"/>
  <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort"/>
  <xs:element name="char" nillable="true" type="tns:char"/>
  <xs:simpleType name="char">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>
  <xs:element name="duration" nillable="true" type="tns:duration"/>
  <xs:simpleType name="duration">
    <xs:restriction base="xs:duration">
      <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"/>
      <xs:minInclusive value="-P10675199DT2H48M5.4775808S"/>
      <xs:maxInclusive value="P10675199DT2H48M5.4775807S"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="guid" nillable="true" type="tns:guid"/>
  <xs:simpleType name="guid">
    <xs:restriction base="xs:string">
      <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="FactoryType" type="xs:QName"/>
  <xs:attribute name="Id" type="xs:ID"/>
  <xs:attribute name="Ref" type="xs:IDREF"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd2</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/schema/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/schema/" xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
  <xs:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd5" namespace="http://alstom.com/pacis/pis/schema/train/mission/"/>
  <xs:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd4" namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
  <xs:import schemaLocation="http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
  <xs:complexType name="ElementAvailableElementDataList">
    <xs:annotation>
      <xs:appinfo>
        <GenericType Name="Element{0}List" Namespace="http://alstom.com/pacis/pis/schema/" xmlns="http://schemas.microsoft.com/2003/10/Serialization/">
          <GenericParameter Name="AvailableElementData" Namespace="http://alstom.com/pacis/pis/schema/"/>
        </GenericType>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ElementAvailableElementDataList" nillable="true" type="tns:ElementAvailableElementDataList"/>
  <xs:complexType name="AvailableElementData">
    <xs:sequence>
      <xs:element minOccurs="0" name="ElementNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="LmtPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionCommercialNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionOperatorCode" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionState" type="q1:MissionStateEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/core/data/"/>
      <xs:element minOccurs="0" name="OnlineStatus" type="xs:boolean"/>
      <xs:element minOccurs="0" name="PisBaselineData" nillable="true" type="tns:PisBaseline"/>
      <xs:element minOccurs="0" name="PisBasicPackageVersion" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
  <xs:complexType name="PisBaseline">
    <xs:sequence>
      <xs:element minOccurs="0" name="ArchivedValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentForcedOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureActivationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisMissionOut" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PisBaseline" nillable="true" type="tns:PisBaseline"/>
  <xs:complexType name="AutomaticModeRequest">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:MissionInitializeCommonRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="StationInsertion" nillable="true" type="q2:StationInsertion" xmlns:q2="http://alstom.com/pacis/pis/schema/train/mission/"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AutomaticModeRequest" nillable="true" type="tns:AutomaticModeRequest"/>
  <xs:complexType name="MissionInitializeCommonRequest">
    <xs:sequence>
      <xs:element minOccurs="0" name="CarNumberingOffsetCode" type="xs:unsignedInt"/>
      <xs:element minOccurs="0" name="ElementAlphaNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="LanguageCodeList" nillable="true" type="q3:ArrayOfstring" xmlns:q3="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
      <xs:element minOccurs="0" name="LmtDataPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionOperatorCode" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="OnBoardValidationFlag" type="xs:boolean"/>
      <xs:element minOccurs="0" name="OnboardServiceCodeList" nillable="true" type="q4:ArrayOfunsignedInt" xmlns:q4="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
      <xs:element minOccurs="0" name="RequestTimeout" type="xs:unsignedInt"/>
      <xs:element minOccurs="0" name="SessionId" type="ser:guid"/>
      <xs:element minOccurs="0" name="StartDate" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MissionInitializeCommonRequest" nillable="true" type="tns:MissionInitializeCommonRequest"/>
  <xs:complexType name="ModifiedModeRequest">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:ManualModeRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="StationInsertion" nillable="true" type="q5:StationInsertion" xmlns:q5="http://alstom.com/pacis/pis/schema/train/mission/"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ModifiedModeRequest" nillable="true" type="tns:ModifiedModeRequest"/>
  <xs:complexType name="ManualModeRequest">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:MissionInitializeCommonRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="CommercialNumberList" nillable="true" type="q6:ArrayOfstring" xmlns:q6="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
          <xs:element minOccurs="0" name="MissionTypeCode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="RegionCode" type="xs:unsignedInt"/>
          <xs:element minOccurs="0" name="ServiceHourList" nillable="true" type="q7:ArrayOfStationServiceHours" xmlns:q7="http://alstom.com/pacis/pis/schema/train/mission/"/>
          <xs:element minOccurs="0" name="ServicedStationList" nillable="true" type="q8:ArrayOfStationList" xmlns:q8="http://alstom.com/pacis/pis/schema/train/mission/"/>
          <xs:element minOccurs="0" name="TrainName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ManualModeRequest" nillable="true" type="tns:ManualModeRequest"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd3</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/core/data/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/ground/core/data/">
  <xs:simpleType name="MissionStateEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MI"/>
      <xs:enumeration value="ME"/>
      <xs:enumeration value="NI"/>
      <xs:enumeration value="MIE"/>
      <xs:enumeration value="DEG"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="MissionStateEnum" nillable="true" type="tns:MissionStateEnum"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd5</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/schema/train/mission/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/schema/train/mission/">
  <xs:complexType name="StationInsertion">
    <xs:sequence>
      <xs:element minOccurs="0" name="StationId" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="Type" type="xs:unsignedInt"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="StationInsertion" nillable="true" type="tns:StationInsertion"/>
  <xs:complexType name="ArrayOfStationServiceHours">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="StationServiceHours" nillable="true" type="tns:StationServiceHours"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfStationServiceHours" nillable="true" type="tns:ArrayOfStationServiceHours"/>
  <xs:complexType name="StationServiceHours">
    <xs:sequence>
      <xs:element minOccurs="0" name="ArrivalTime" nillable="true" type="xs:time"/>
      <xs:element minOccurs="0" name="DepartureTime" nillable="true" type="xs:time"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="StationServiceHours" nillable="true" type="tns:StationServiceHours"/>
  <xs:complexType name="ArrayOfStationList">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="StationList" nillable="true" type="tns:StationList"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfStationList" nillable="true" type="tns:ArrayOfStationList"/>
  <xs:complexType name="StationList">
    <xs:sequence>
      <xs:element minOccurs="0" name="Id" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="StationList" nillable="true" type="tns:StationList"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd4</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
  <xs:complexType name="ArrayOfstring">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfstring" nillable="true" type="tns:ArrayOfstring"/>
  <xs:complexType name="ArrayOfunsignedInt">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="unsignedInt" type="xs:unsignedInt"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfunsignedInt" nillable="true" type="tns:ArrayOfunsignedInt"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/Mission/MissionService.svc?xsd=xsd6</con:url><con:content>&lt;xs:schema elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  &lt;xs:element name="time" nillable="true" type="xs:time"/>
&lt;/xs:schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://cnsla17cvm.dom3.ad.sys/Mission_Dev/MissionService.svc</con:endpoint><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:endpoint>http://pis-ground-pc/Mission/MissionService.svc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" name="InitializeAutomaticMission" bindingOperationName="InitializeAutomaticMission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="c1fbbfad-e6dd-4964-b8f6-514e7004bce9"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="9c95a970-90fe-418d-9dd8-dcef1b39a7f4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>?</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>?</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               <!--Zero or more repetitions:-->
               <arr:string>?</arr:string>
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>?</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>?</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>?</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               <!--Zero or more repetitions:-->
               <arr:unsignedInt>?</arr:unsignedInt>
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>?</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>?</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>?</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>?</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>?</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" name="InitializeManualMission" bindingOperationName="InitializeManualMission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="3c08cbc8-4d5f-4cfd-8d8a-3990a64b04cd"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="c2b5eab9-5ee3-4ed5-9710-617c78a9f393"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeManualMission>
         <!--Optional:-->
         <mis:manualModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>?</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>?</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               <!--Zero or more repetitions:-->
               <arr:string>?</arr:string>
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>?</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>?</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>?</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               <!--Zero or more repetitions:-->
               <arr:unsignedInt>?</arr:unsignedInt>
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>?</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>?</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>?</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               <!--Zero or more repetitions:-->
               <arr:string>?</arr:string>
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>?</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>?</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
               <!--Zero or more repetitions:-->
               <mis1:StationServiceHours>
                  <!--Optional:-->
                  <mis1:ArrivalTime>?</mis1:ArrivalTime>
                  <!--Optional:-->
                  <mis1:DepartureTime>?</mis1:DepartureTime>
               </mis1:StationServiceHours>
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               <!--Zero or more repetitions:-->
               <mis1:StationList>
                  <!--Optional:-->
                  <mis1:Id>?</mis1:Id>
                  <!--Optional:-->
                  <mis1:Name>?</mis1:Name>
               </mis1:StationList>
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>?</sch:TrainName>
         </mis:manualModeRequest>
      </mis:InitializeManualMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" name="InitializeModifiedMission" bindingOperationName="InitializeModifiedMission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="7116154c-ee45-4ed9-bb45-6818300e9daa"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="befdbede-ad8c-4b17-960f-0d3c22e80919"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>?</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>?</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               <!--Zero or more repetitions:-->
               <arr:string>?</arr:string>
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>?</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>?</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>?</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               <!--Zero or more repetitions:-->
               <arr:unsignedInt>?</arr:unsignedInt>
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>?</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>?</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>?</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               <!--Zero or more repetitions:-->
               <arr:string>?</arr:string>
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>?</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>?</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
               <!--Zero or more repetitions:-->
               <mis1:StationServiceHours>
                  <!--Optional:-->
                  <mis1:ArrivalTime>?</mis1:ArrivalTime>
                  <!--Optional:-->
                  <mis1:DepartureTime>?</mis1:DepartureTime>
               </mis1:StationServiceHours>
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               <!--Zero or more repetitions:-->
               <mis1:StationList>
                  <!--Optional:-->
                  <mis1:Id>?</mis1:Id>
                  <!--Optional:-->
                  <mis1:Name>?</mis1:Name>
               </mis1:StationList>
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>?</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>?</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>?</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/GetAvailableElementList" name="GetAvailableElementList" bindingOperationName="GetAvailableElementList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4bd40195-a3f8-4b12-8229-f14dd3747495"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="0ac021c4-06cd-40b0-8eaf-fa8e3d92f607"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:GetAvailableElementList>
         <!--Optional:-->
         <mis:sessionId>?</mis:sessionId>
      </mis:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/RetrieveElementList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" name="StopMission" bindingOperationName="StopMission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="3848586e-7331-4bb4-8fe1-c541d24de028"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss="" id="a7638837-c5cd-43c9-89ec-c03c427ed907"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StopMission>
         <!--Optional:-->
         <mis:sessionId>?</mis:sessionId>
         <!--Optional:-->
         <mis:onBoardValidationFlag>?</mis:onBoardValidationFlag>
         <!--Optional:-->
         <mis:elementAlphaNumber>?</mis:elementAlphaNumber>
         <!--Optional:-->
         <mis:missionId>?</mis:missionId>
         <!--Optional:-->
         <mis:timeOut>?</mis:timeOut>
      </mis:StopMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StartService" name="StartService" bindingOperationName="StartService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f33d4ab3-a46c-4fd6-ac12-47cf9d855261"><con:settings/><con:call name="Request 1" id="cf2ce859-9558-4837-990f-2e0914bd6915"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://pis-ground-pc/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StartService"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="BasicHttpBinding_IMaintenanceService" type="wsdl" bindingName="{http://alstom.com/pacis/pis/ground/maintenance/}BasicHttpBinding_IMaintenanceService" soapVersion="1_1" anonymous="optional" definition="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc?wsdl" id="fc96fef8-1fd9-49fd-a6ce-7e7c394631e1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc?wsdl"><con:part><con:url>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="MaintenanceService" targetNamespace="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:tns="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex">
  <wsdl:types>
    <xsd:schema targetNamespace="http://alstom.com/pacis/pis/ground/maintenance/Imports">
      <xsd:import schemaLocation="http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd0" namespace="http://alstom.com/pacis/pis/ground/maintenance/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/schema/"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="IMaintenanceService_StartService_InputMessage">
    <wsdl:part name="parameters" element="tns:StartService"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_StartService_OutputMessage">
    <wsdl:part name="parameters" element="tns:StartServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetAvailableElementList_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementList"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetAvailableElementList_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementListResponse"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetSystemMessagesFiles_InputMessage">
    <wsdl:part name="parameters" element="tns:GetSystemMessagesFiles"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetSystemMessagesFiles_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetSystemMessagesFilesResponse"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetVersionsFile_InputMessage">
    <wsdl:part name="parameters" element="tns:GetVersionsFile"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetVersionsFile_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetVersionsFileResponse"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetLogs_InputMessage">
    <wsdl:part name="parameters" element="tns:GetLogs"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetLogs_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetLogsResponse"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetOldestLogDateTime_InputMessage">
    <wsdl:part name="parameters" element="tns:GetOldestLogDateTime"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetOldestLogDateTime_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetOldestLogDateTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetLatestLogDateTime_InputMessage">
    <wsdl:part name="parameters" element="tns:GetLatestLogDateTime"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetLatestLogDateTime_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetLatestLogDateTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_CleanLog_InputMessage">
    <wsdl:part name="parameters" element="tns:CleanLog"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_CleanLog_OutputMessage">
    <wsdl:part name="parameters" element="tns:CleanLogResponse"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetTrainBaselineStatus_InputMessage">
    <wsdl:part name="parameters" element="tns:GetTrainBaselineStatus"/>
  </wsdl:message>
  <wsdl:message name="IMaintenanceService_GetTrainBaselineStatus_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetTrainBaselineStatusResponse"/>
  </wsdl:message>
  <wsdl:portType name="IMaintenanceService">
    <wsdl:operation name="StartService">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/StartService" message="tns:IMaintenanceService_StartService_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/StartServiceResponse" message="tns:IMaintenanceService_StartService_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementList">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetAvailableElementList" message="tns:IMaintenanceService_GetAvailableElementList_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetAvailableElementListResponse" message="tns:IMaintenanceService_GetAvailableElementList_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetSystemMessagesFiles">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" message="tns:IMaintenanceService_GetSystemMessagesFiles_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFilesResponse" message="tns:IMaintenanceService_GetSystemMessagesFiles_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetVersionsFile">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" message="tns:IMaintenanceService_GetVersionsFile_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFileResponse" message="tns:IMaintenanceService_GetVersionsFile_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetLogs">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetLogs" message="tns:IMaintenanceService_GetLogs_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetLogsResponse" message="tns:IMaintenanceService_GetLogs_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetOldestLogDateTime">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetOldestLogDateTime" message="tns:IMaintenanceService_GetOldestLogDateTime_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetOldestLogDateTimeResponse" message="tns:IMaintenanceService_GetOldestLogDateTime_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetLatestLogDateTime">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetLatestLogDateTime" message="tns:IMaintenanceService_GetLatestLogDateTime_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetLatestLogDateTimeResponse" message="tns:IMaintenanceService_GetLatestLogDateTime_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CleanLog">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/CleanLog" message="tns:IMaintenanceService_CleanLog_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/CleanLogResponse" message="tns:IMaintenanceService_CleanLog_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetTrainBaselineStatus">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetTrainBaselineStatus" message="tns:IMaintenanceService_GetTrainBaselineStatus_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetTrainBaselineStatusResponse" message="tns:IMaintenanceService_GetTrainBaselineStatus_OutputMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_IMaintenanceService" type="tns:IMaintenanceService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="StartService">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/StartService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementList">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetAvailableElementList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSystemMessagesFiles">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetVersionsFile">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetLogs">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetLogs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOldestLogDateTime">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetOldestLogDateTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetLatestLogDateTime">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetLatestLogDateTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CleanLog">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/CleanLog" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTrainBaselineStatus">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetTrainBaselineStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MaintenanceService">
    <wsdl:port name="BasicHttpBinding_IMaintenanceService" binding="tns:BasicHttpBinding_IMaintenanceService">
      <soap:address location="http://pis-ground-pc/Maintenance/MaintenanceService.svc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd0</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/ground/maintenance/">
  <xs:import schemaLocation="http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
  <xs:import schemaLocation="http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
  <xs:import schemaLocation="http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/schema/"/>
  <xs:element name="StartService">
    <xs:complexType>
      <xs:sequence/>
    </xs:complexType>
  </xs:element>
  <xs:element name="StartServiceResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="StartServiceResult" type="q1:ResultCodeEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/core/data/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAvailableElementList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q2:guid" xmlns:q2="http://schemas.microsoft.com/2003/10/Serialization/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAvailableElementListResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetAvailableElementListResult" nillable="true" type="tns:MaintenanceElementListOutput"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="MaintenanceElementListOutput">
    <xs:sequence>
      <xs:element minOccurs="0" name="ElementList" nillable="true" type="q3:ElementAvailableElementDataList" xmlns:q3="http://alstom.com/pacis/pis/schema/"/>
      <xs:element minOccurs="0" name="ResultCode" type="q4:ResultCodeEnum" xmlns:q4="http://alstom.com/pacis/pis/ground/core/data/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MaintenanceElementListOutput" nillable="true" type="tns:MaintenanceElementListOutput"/>
  <xs:element name="GetSystemMessagesFiles">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q5:guid" xmlns:q5="http://schemas.microsoft.com/2003/10/Serialization/"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q6:TargetAddressType" xmlns:q6="http://alstom.com/pacis/pis/schema/"/>
        <xs:element minOccurs="0" name="requestTimeout" type="xs:unsignedInt"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetSystemMessagesFilesResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetSystemMessagesFilesResult" nillable="true" type="q7:MaintenanceOutput" xmlns:q7="http://alstom.com/pacis/pis/ground/core/data/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetVersionsFile">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q8:guid" xmlns:q8="http://schemas.microsoft.com/2003/10/Serialization/"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q9:TargetAddressType" xmlns:q9="http://alstom.com/pacis/pis/schema/"/>
        <xs:element minOccurs="0" name="requestTimeout" type="xs:unsignedInt"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetVersionsFileResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetVersionsFileResult" nillable="true" type="q10:MaintenanceOutput" xmlns:q10="http://alstom.com/pacis/pis/ground/core/data/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLogs">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q11:guid" xmlns:q11="http://schemas.microsoft.com/2003/10/Serialization/"/>
        <xs:element minOccurs="0" name="commandList" nillable="true" type="q12:ArrayOfCommandType" xmlns:q12="http://alstom.com/pacis/pis/ground/core/data/"/>
        <xs:element minOccurs="0" name="startDateTime" type="xs:dateTime"/>
        <xs:element minOccurs="0" name="endDateTime" type="xs:dateTime"/>
        <xs:element minOccurs="0" name="language" type="xs:unsignedInt"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLogsResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetLogsResult" nillable="true" type="q13:HistoryLogOutput" xmlns:q13="http://alstom.com/pacis/pis/ground/core/data/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetOldestLogDateTime">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q14:guid" xmlns:q14="http://schemas.microsoft.com/2003/10/Serialization/"/>
        <xs:element minOccurs="0" name="commandList" nillable="true" type="q15:ArrayOfCommandType" xmlns:q15="http://alstom.com/pacis/pis/ground/core/data/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetOldestLogDateTimeResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetOldestLogDateTimeResult" nillable="true" type="q16:HistoryLogOutput" xmlns:q16="http://alstom.com/pacis/pis/ground/core/data/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLatestLogDateTime">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q17:guid" xmlns:q17="http://schemas.microsoft.com/2003/10/Serialization/"/>
        <xs:element minOccurs="0" name="commandList" nillable="true" type="q18:ArrayOfCommandType" xmlns:q18="http://alstom.com/pacis/pis/ground/core/data/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLatestLogDateTimeResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetLatestLogDateTimeResult" nillable="true" type="q19:HistoryLogOutput" xmlns:q19="http://alstom.com/pacis/pis/ground/core/data/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CleanLog">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q20:guid" xmlns:q20="http://schemas.microsoft.com/2003/10/Serialization/"/>
        <xs:element minOccurs="0" name="commandList" nillable="true" type="q21:ArrayOfCommandType" xmlns:q21="http://alstom.com/pacis/pis/ground/core/data/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CleanLogResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="CleanLogResult" nillable="true" type="q22:MaintenanceOutput" xmlns:q22="http://alstom.com/pacis/pis/ground/core/data/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetTrainBaselineStatus">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="q23:guid" xmlns:q23="http://schemas.microsoft.com/2003/10/Serialization/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetTrainBaselineStatusResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetTrainBaselineStatusResult" nillable="true" type="tns:MaintenanceTrainBaselineStatusListOutput"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="MaintenanceTrainBaselineStatusListOutput">
    <xs:sequence>
      <xs:element minOccurs="0" name="ResultCode" type="q24:ResultCodeEnum" xmlns:q24="http://alstom.com/pacis/pis/ground/core/data/"/>
      <xs:element minOccurs="0" name="TrainBaselineStatusList" nillable="true" type="q25:TrainBaselineStatusTrainBaselineStatusDataList" xmlns:q25="http://alstom.com/pacis/pis/schema/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MaintenanceTrainBaselineStatusListOutput" nillable="true" type="tns:MaintenanceTrainBaselineStatusListOutput"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd2</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/core/data/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/ground/core/data/" xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:import schemaLocation="http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
  <xs:simpleType name="ResultCodeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REQUEST_ACCEPTED"/>
      <xs:enumeration value="INVALID_SESSION_ID"/>
      <xs:enumeration value="INVALID_REQUEST_TIMEOUT"/>
      <xs:enumeration value="UNKNOWN_ELEMENT_ID"/>
      <xs:enumeration value="UNKNOWN_MISSION_ID"/>
      <xs:enumeration value="ELEMENT_LIST_NOT_AVAILABLE"/>
      <xs:enumeration value="INTERNAL_ERROR"/>
      <xs:enumeration value="SQL_ERROR"/>
      <xs:enumeration value="INVALID_COMMAND_TYPE"/>
      <xs:enumeration value="INVALID_END_DATE"/>
      <xs:enumeration value="INVALID_START_DATE"/>
      <xs:enumeration value="INVALID_CONTEXT"/>
      <xs:enumeration value="INVALID_REQUEST_ID"/>
      <xs:enumeration value="INVALID_TRAIN_ID"/>
      <xs:enumeration value="INVALID_STATUS"/>
      <xs:enumeration value="T2G_SERVER_OFFLINE"/>
      <xs:enumeration value="OUTPUT_LIMIT_EXCEEDED"/>
      <xs:enumeration value="EMPTY_RESULT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ResultCodeEnum" nillable="true" type="tns:ResultCodeEnum"/>
  <xs:simpleType name="MissionStateEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MI"/>
      <xs:enumeration value="ME"/>
      <xs:enumeration value="NI"/>
      <xs:enumeration value="MIE"/>
      <xs:enumeration value="DEG"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="MissionStateEnum" nillable="true" type="tns:MissionStateEnum"/>
  <xs:complexType name="MaintenanceOutput">
    <xs:sequence>
      <xs:element minOccurs="0" name="RequestId" type="ser:guid"/>
      <xs:element minOccurs="0" name="ResultCode" type="tns:ResultCodeEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MaintenanceOutput" nillable="true" type="tns:MaintenanceOutput"/>
  <xs:complexType name="ArrayOfCommandType">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="CommandType" type="tns:CommandType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfCommandType" nillable="true" type="tns:ArrayOfCommandType"/>
  <xs:simpleType name="CommandType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALL_LOGS"/>
      <xs:enumeration value="SEND_SCHEDULE_MESSAGE"/>
      <xs:enumeration value="CANCEL_SCHEDULE_MESSAGE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="CommandType" nillable="true" type="tns:CommandType"/>
  <xs:complexType name="HistoryLogOutput">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:MaintenanceOutput">
        <xs:sequence>
          <xs:element minOccurs="0" name="LogResponse" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="HistoryLogOutput" nillable="true" type="tns:HistoryLogOutput"/>
  <xs:simpleType name="BaselineProgressStatusEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UPDATED"/>
      <xs:enumeration value="DEPLOYED"/>
      <xs:enumeration value="TRANSFER_COMPLETED"/>
      <xs:enumeration value="TRANSFER_IN_PROGRESS"/>
      <xs:enumeration value="TRANSFER_PAUSED"/>
      <xs:enumeration value="TRANSFER_PLANNED"/>
      <xs:enumeration value="UNKNOWN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="BaselineProgressStatusEnum" nillable="true" type="tns:BaselineProgressStatusEnum"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd1</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:element name="anyType" nillable="true" type="xs:anyType"/>
  <xs:element name="anyURI" nillable="true" type="xs:anyURI"/>
  <xs:element name="base64Binary" nillable="true" type="xs:base64Binary"/>
  <xs:element name="boolean" nillable="true" type="xs:boolean"/>
  <xs:element name="byte" nillable="true" type="xs:byte"/>
  <xs:element name="dateTime" nillable="true" type="xs:dateTime"/>
  <xs:element name="decimal" nillable="true" type="xs:decimal"/>
  <xs:element name="double" nillable="true" type="xs:double"/>
  <xs:element name="float" nillable="true" type="xs:float"/>
  <xs:element name="int" nillable="true" type="xs:int"/>
  <xs:element name="long" nillable="true" type="xs:long"/>
  <xs:element name="QName" nillable="true" type="xs:QName"/>
  <xs:element name="short" nillable="true" type="xs:short"/>
  <xs:element name="string" nillable="true" type="xs:string"/>
  <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte"/>
  <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt"/>
  <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong"/>
  <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort"/>
  <xs:element name="char" nillable="true" type="tns:char"/>
  <xs:simpleType name="char">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>
  <xs:element name="duration" nillable="true" type="tns:duration"/>
  <xs:simpleType name="duration">
    <xs:restriction base="xs:duration">
      <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"/>
      <xs:minInclusive value="-P10675199DT2H48M5.4775808S"/>
      <xs:maxInclusive value="P10675199DT2H48M5.4775807S"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="guid" nillable="true" type="tns:guid"/>
  <xs:simpleType name="guid">
    <xs:restriction base="xs:string">
      <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="FactoryType" type="xs:QName"/>
  <xs:attribute name="Id" type="xs:ID"/>
  <xs:attribute name="Ref" type="xs:IDREF"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd3</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/schema/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/schema/" xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:import schemaLocation="http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
  <xs:import schemaLocation="http://pis-ground-pc/Maintenance/MaintenanceService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
  <xs:complexType name="ElementAvailableElementDataList">
    <xs:annotation>
      <xs:appinfo>
        <GenericType Name="Element{0}List" Namespace="http://alstom.com/pacis/pis/schema/" xmlns="http://schemas.microsoft.com/2003/10/Serialization/">
          <GenericParameter Name="AvailableElementData" Namespace="http://alstom.com/pacis/pis/schema/"/>
        </GenericType>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ElementAvailableElementDataList" nillable="true" type="tns:ElementAvailableElementDataList"/>
  <xs:complexType name="AvailableElementData">
    <xs:sequence>
      <xs:element minOccurs="0" name="ElementNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="LmtPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionCommercialNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionOperatorCode" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionState" type="q1:MissionStateEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/core/data/"/>
      <xs:element minOccurs="0" name="OnlineStatus" type="xs:boolean"/>
      <xs:element minOccurs="0" name="PisBaselineData" nillable="true" type="tns:PisBaseline"/>
      <xs:element minOccurs="0" name="PisBasicPackageVersion" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
  <xs:complexType name="PisBaseline">
    <xs:sequence>
      <xs:element minOccurs="0" name="ArchivedValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentForcedOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureActivationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisMissionOut" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PisBaseline" nillable="true" type="tns:PisBaseline"/>
  <xs:complexType name="TargetAddressType">
    <xs:sequence>
      <xs:element name="Id" nillable="true" type="xs:string"/>
      <xs:element name="Type" type="tns:AddressTypeEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="TargetAddressType" nillable="true" type="tns:TargetAddressType"/>
  <xs:simpleType name="AddressTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Element"/>
      <xs:enumeration value="MissionOperatorCode"/>
      <xs:enumeration value="MissionCode"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="AddressTypeEnum" nillable="true" type="tns:AddressTypeEnum"/>
  <xs:complexType name="TrainBaselineStatusTrainBaselineStatusDataList">
    <xs:annotation>
      <xs:appinfo>
        <GenericType Name="TrainBaselineStatus{0}List" Namespace="http://alstom.com/pacis/pis/schema/" xmlns="http://schemas.microsoft.com/2003/10/Serialization/">
          <GenericParameter Name="TrainBaselineStatusData" Namespace="http://alstom.com/pacis/pis/schema/"/>
        </GenericType>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="TrainBaselineStatusData" nillable="true" type="tns:TrainBaselineStatusData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="TrainBaselineStatusTrainBaselineStatusDataList" nillable="true" type="tns:TrainBaselineStatusTrainBaselineStatusDataList"/>
  <xs:complexType name="TrainBaselineStatusData">
    <xs:sequence>
      <xs:element minOccurs="0" name="CurrentBaselineVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureBaselineVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="OnlineStatus" type="xs:boolean"/>
      <xs:element minOccurs="0" name="PisOnBoardVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ProgressStatus" type="q2:BaselineProgressStatusEnum" xmlns:q2="http://alstom.com/pacis/pis/ground/core/data/"/>
      <xs:element minOccurs="0" name="RequestId" type="ser:guid"/>
      <xs:element minOccurs="0" name="TaskId" type="xs:int"/>
      <xs:element minOccurs="0" name="TrainId" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="TrainNumber" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="TrainBaselineStatusData" nillable="true" type="tns:TrainBaselineStatusData"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:endpoint>http://pis-ground-pc/Maintenance/MaintenanceService.svc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" name="GetSystemMessagesFiles" bindingOperationName="GetSystemMessagesFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="69fcdf15-4cf5-4266-80d9-b8be115eebdc"><con:settings/><con:call name="GetSystemMessagesFiles" outgoingWss="" incomingWss="" id="7e9f70f6-fdd4-4f17-8289-96922770193a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>?</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>?</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" name="GetVersionsFile" bindingOperationName="GetVersionsFile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="db8d9888-9db4-4975-afb2-03510b0a54d8"><con:settings/><con:call name="GetVersionsFile" outgoingWss="" incomingWss="" id="e79821f7-216a-4a4a-9e86-1c8cbccdd54a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>?</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>?</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetAvailableElementList" name="GetAvailableElementList" bindingOperationName="GetAvailableElementList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="e76234f0-f552-4f9d-8141-b26bec202804"><con:settings/><con:call name="GetAvailableElementList" outgoingWss="" incomingWss="" id="8ddf2f48-d6a2-49d1-b307-2c71baae0b16"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetAvailableElementList>
         <!--Optional:-->
         <main:sessionId>?</main:sessionId>
      </main:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/RetrieveElementList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetLogs" name="GetLogs" bindingOperationName="GetLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="9a7b213d-08e8-4501-81d3-885ccdf378c0"><con:settings/><con:call name="Request 1" id="639f12ac-4e68-411a-aff5-9ef6bc87f23b" outgoingWss="" incomingWss=""><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLogs>
         <!--Optional:-->
         <main:sessionId>?</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>?</data:CommandType>
         </main:commandList>
         <!--Optional:-->
         <main:startDateTime>?</main:startDateTime>
         <!--Optional:-->
         <main:endDateTime>?</main:endDateTime>
         <!--Optional:-->
         <main:language>?</main:language>
      </main:GetLogs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetLogs"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetOldestLogDateTime" name="GetOldestLogDateTime" bindingOperationName="GetOldestLogDateTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="98205c3e-29a0-470f-8224-7da3fdeb8259"><con:settings/><con:call name="Request 1" id="3567ad1e-c050-4d19-b60a-03caa8bf5dd3" outgoingWss="" incomingWss=""><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetOldestLogDateTime>
         <!--Optional:-->
         <main:sessionId>?</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>?</data:CommandType>
         </main:commandList>
      </main:GetOldestLogDateTime>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetOldestLogDateTime"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetLatestLogDateTime" name="GetLatestLogDateTime" bindingOperationName="GetLatestLogDateTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="bd376d6e-9a62-49e7-90f0-c588d31eeeaa"><con:settings/><con:call name="Request 1" id="baf371db-eef9-4551-bf71-2ff91a61014c" outgoingWss="" incomingWss=""><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLatestLogDateTime>
         <!--Optional:-->
         <main:sessionId>?</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>?</data:CommandType>
         </main:commandList>
      </main:GetLatestLogDateTime>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetLatestLogDateTime"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/CleanLog" name="CleanLog" bindingOperationName="CleanLog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d52177ee-ec20-4af7-a319-24e0ef510ddc"><con:settings/><con:call name="Request 1" id="224fccf9-b3b0-43de-a1d7-dfd35ca7d65e" outgoingWss="" incomingWss=""><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:CleanLog>
         <!--Optional:-->
         <main:sessionId>?</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>?</data:CommandType>
         </main:commandList>
      </main:CleanLog>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/CleanLog"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/StartService" name="StartService" bindingOperationName="StartService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="7b02fc41-9456-4907-8757-f0c3b84a4696"><con:settings/><con:call name="Request 1" id="6f69b0c7-55db-4c78-9aab-0d7fa7765144"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/StartService"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetTrainBaselineStatus" name="GetTrainBaselineStatus" bindingOperationName="GetTrainBaselineStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a2ec313a-ba77-4199-acfd-a18926f6d318"><con:settings/><con:call name="Request 1" id="f86b2c08-b775-4f29-b155-a47a7cf14298"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetTrainBaselineStatus>
         <!--Optional:-->
         <main:sessionId>?</main:sessionId>
      </main:GetTrainBaselineStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetTrainBaselineStatus"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="BasicHttpBinding_LiveVideoControl" type="wsdl" bindingName="{http://alstom.com/pacis/pis/ground/livevideocontrol/}BasicHttpBinding_LiveVideoControl" soapVersion="1_1" anonymous="optional" definition="http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc?wsdl" id="88f54051-b5b3-4ea4-baab-35fb132df0fd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc?wsdl"><con:part><con:url>http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="LiveVideoControlService" targetNamespace="http://alstom.com/pacis/pis/ground/livevideocontrol/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:tns="http://alstom.com/pacis/pis/ground/livevideocontrol/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex">
  <wsdl:types>
    <xsd:schema targetNamespace="http://alstom.com/pacis/pis/ground/livevideocontrol/Imports">
      <xsd:import schemaLocation="http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd0" namespace="http://alstom.com/pacis/pis/ground/livevideocontrol/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/schema/"/>
      <xsd:import schemaLocation="http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="LiveVideoControl_StartService_InputMessage">
    <wsdl:part name="parameters" element="tns:StartService"/>
  </wsdl:message>
  <wsdl:message name="LiveVideoControl_StartService_OutputMessage">
    <wsdl:part name="parameters" element="tns:StartServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="LiveVideoControl_GetAvailableElementList_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementList"/>
  </wsdl:message>
  <wsdl:message name="LiveVideoControl_GetAvailableElementList_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAvailableElementListResponse"/>
  </wsdl:message>
  <wsdl:message name="LiveVideoControl_StartVideoStreamingCommand_InputMessage">
    <wsdl:part name="parameters" element="tns:StartVideoStreamingCommand"/>
  </wsdl:message>
  <wsdl:message name="LiveVideoControl_StartVideoStreamingCommand_OutputMessage">
    <wsdl:part name="parameters" element="tns:StartVideoStreamingCommandResponse"/>
  </wsdl:message>
  <wsdl:message name="LiveVideoControl_StopVideoStreamingCommand_InputMessage">
    <wsdl:part name="parameters" element="tns:StopVideoStreamingCommand"/>
  </wsdl:message>
  <wsdl:message name="LiveVideoControl_StopVideoStreamingCommand_OutputMessage">
    <wsdl:part name="parameters" element="tns:StopVideoStreamingCommandResponse"/>
  </wsdl:message>
  <wsdl:portType name="LiveVideoControl">
    <wsdl:operation name="StartService">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartService" message="tns:LiveVideoControl_StartService_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartServiceResponse" message="tns:LiveVideoControl_StartService_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementList">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/GetAvailableElementList" message="tns:LiveVideoControl_GetAvailableElementList_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/GetAvailableElementListResponse" message="tns:LiveVideoControl_GetAvailableElementList_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="StartVideoStreamingCommand">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartVideoStreamingCommand" message="tns:LiveVideoControl_StartVideoStreamingCommand_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartVideoStreamingCommandResponse" message="tns:LiveVideoControl_StartVideoStreamingCommand_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="StopVideoStreamingCommand">
      <wsdl:input wsaw:Action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StopVideoStreamingCommand" message="tns:LiveVideoControl_StopVideoStreamingCommand_InputMessage"/>
      <wsdl:output wsaw:Action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StopVideoStreamingCommandResponse" message="tns:LiveVideoControl_StopVideoStreamingCommand_OutputMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_LiveVideoControl" type="tns:LiveVideoControl">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="StartService">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAvailableElementList">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/GetAvailableElementList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StartVideoStreamingCommand">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartVideoStreamingCommand" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StopVideoStreamingCommand">
      <soap:operation soapAction="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StopVideoStreamingCommand" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LiveVideoControlService">
    <wsdl:port name="BasicHttpBinding_LiveVideoControl" binding="tns:BasicHttpBinding_LiveVideoControl">
      <soap:address location="http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd0</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/livevideocontrol/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:import schemaLocation="http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
  <xs:import schemaLocation="http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd2" namespace="http://alstom.com/pacis/pis/schema/"/>
  <xs:element name="StartService">
    <xs:complexType>
      <xs:sequence/>
    </xs:complexType>
  </xs:element>
  <xs:element name="StartServiceResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="StartServiceResult" type="q1:LiveVideoControlErrorEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/livevideocontrol/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="LiveVideoControlErrorEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REQUEST_ACCEPTED"/>
      <xs:enumeration value="INVALID_SESSION_ID"/>
      <xs:enumeration value="UNKNOWN_ELEMENT_ID"/>
      <xs:enumeration value="UNKNOWN_MISSION_ID"/>
      <xs:enumeration value="ELEMENT_LIST_NOT_AVAILABLE"/>
      <xs:enumeration value="T2G_SERVER_OFFLINE"/>
      <xs:enumeration value="INVALID_REQUEST_ID"/>
      <xs:enumeration value="INTERNAL_ERROR"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="LiveVideoControlErrorEnum" nillable="true" type="q2:LiveVideoControlErrorEnum" xmlns:q2="http://alstom.com/pacis/pis/ground/livevideocontrol/"/>
  <xs:element name="GetAvailableElementList">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAvailableElementListResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetAvailableElementListResult" nillable="true" type="q3:LiveVideoControlElementListResult" xmlns:q3="http://alstom.com/pacis/pis/ground/livevideocontrol/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="LiveVideoControlElementListResult">
    <xs:sequence>
      <xs:element name="ElementList" nillable="true" type="q4:ElementAvailableElementDataList" xmlns:q4="http://alstom.com/pacis/pis/schema/"/>
      <xs:element name="ResultCode" type="q5:LiveVideoControlErrorEnum" xmlns:q5="http://alstom.com/pacis/pis/ground/livevideocontrol/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LiveVideoControlElementListResult" nillable="true" type="q6:LiveVideoControlElementListResult" xmlns:q6="http://alstom.com/pacis/pis/ground/livevideocontrol/"/>
  <xs:element name="StartVideoStreamingCommand">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q7:TargetAddressType" xmlns:q7="http://alstom.com/pacis/pis/schema/"/>
        <xs:element minOccurs="0" name="url" nillable="true" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="StartVideoStreamingCommandResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="StartVideoStreamingCommandResult" nillable="true" type="q8:LiveVideoControlResult" xmlns:q8="http://alstom.com/pacis/pis/ground/livevideocontrol/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="LiveVideoControlResult">
    <xs:sequence>
      <xs:element name="RequestId" type="ser:guid"/>
      <xs:element name="ResultCode" type="q9:LiveVideoControlErrorEnum" xmlns:q9="http://alstom.com/pacis/pis/ground/livevideocontrol/"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LiveVideoControlResult" nillable="true" type="q10:LiveVideoControlResult" xmlns:q10="http://alstom.com/pacis/pis/ground/livevideocontrol/"/>
  <xs:element name="StopVideoStreamingCommand">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="sessionId" type="ser:guid"/>
        <xs:element minOccurs="0" name="targetAddress" nillable="true" type="q11:TargetAddressType" xmlns:q11="http://alstom.com/pacis/pis/schema/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="StopVideoStreamingCommandResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="StopVideoStreamingCommandResult" nillable="true" type="q12:LiveVideoControlResult" xmlns:q12="http://alstom.com/pacis/pis/ground/livevideocontrol/"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd1</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/">
  <xs:element name="anyType" nillable="true" type="xs:anyType"/>
  <xs:element name="anyURI" nillable="true" type="xs:anyURI"/>
  <xs:element name="base64Binary" nillable="true" type="xs:base64Binary"/>
  <xs:element name="boolean" nillable="true" type="xs:boolean"/>
  <xs:element name="byte" nillable="true" type="xs:byte"/>
  <xs:element name="dateTime" nillable="true" type="xs:dateTime"/>
  <xs:element name="decimal" nillable="true" type="xs:decimal"/>
  <xs:element name="double" nillable="true" type="xs:double"/>
  <xs:element name="float" nillable="true" type="xs:float"/>
  <xs:element name="int" nillable="true" type="xs:int"/>
  <xs:element name="long" nillable="true" type="xs:long"/>
  <xs:element name="QName" nillable="true" type="xs:QName"/>
  <xs:element name="short" nillable="true" type="xs:short"/>
  <xs:element name="string" nillable="true" type="xs:string"/>
  <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte"/>
  <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt"/>
  <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong"/>
  <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort"/>
  <xs:element name="char" nillable="true" type="tns:char"/>
  <xs:simpleType name="char">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>
  <xs:element name="duration" nillable="true" type="tns:duration"/>
  <xs:simpleType name="duration">
    <xs:restriction base="xs:duration">
      <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"/>
      <xs:minInclusive value="-P10675199DT2H48M5.4775808S"/>
      <xs:maxInclusive value="P10675199DT2H48M5.4775807S"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="guid" nillable="true" type="tns:guid"/>
  <xs:simpleType name="guid">
    <xs:restriction base="xs:string">
      <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="FactoryType" type="xs:QName"/>
  <xs:attribute name="Id" type="xs:ID"/>
  <xs:attribute name="Ref" type="xs:IDREF"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd2</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/schema/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/schema/">
  <xs:import schemaLocation="http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd3" namespace="http://alstom.com/pacis/pis/ground/core/data/"/>
  <xs:complexType name="ElementAvailableElementDataList">
    <xs:annotation>
      <xs:appinfo>
        <GenericType Name="Element{0}List" Namespace="http://alstom.com/pacis/pis/schema/" xmlns="http://schemas.microsoft.com/2003/10/Serialization/">
          <GenericParameter Name="AvailableElementData" Namespace="http://alstom.com/pacis/pis/schema/"/>
        </GenericType>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ElementAvailableElementDataList" nillable="true" type="tns:ElementAvailableElementDataList"/>
  <xs:complexType name="AvailableElementData">
    <xs:sequence>
      <xs:element minOccurs="0" name="ElementNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="LmtPackageVersion" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionCommercialNumber" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionOperatorCode" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="MissionState" type="q1:MissionStateEnum" xmlns:q1="http://alstom.com/pacis/pis/ground/core/data/"/>
      <xs:element minOccurs="0" name="OnlineStatus" type="xs:boolean"/>
      <xs:element minOccurs="0" name="PisBaselineData" nillable="true" type="tns:PisBaseline"/>
      <xs:element minOccurs="0" name="PisBasicPackageVersion" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AvailableElementData" nillable="true" type="tns:AvailableElementData"/>
  <xs:complexType name="PisBaseline">
    <xs:sequence>
      <xs:element minOccurs="0" name="ArchivedValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="ArchivedVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentForcedOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="CurrentVersionPisMissionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureActivationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureExpirationDateOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureValidOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionLmtOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisBaseOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisInfotainmentOut" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="FutureVersionPisMissionOut" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PisBaseline" nillable="true" type="tns:PisBaseline"/>
  <xs:complexType name="TargetAddressType">
    <xs:sequence>
      <xs:element name="Id" nillable="true" type="xs:string"/>
      <xs:element name="Type" type="tns:AddressTypeEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="TargetAddressType" nillable="true" type="tns:TargetAddressType"/>
  <xs:simpleType name="AddressTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Element"/>
      <xs:enumeration value="MissionOperatorCode"/>
      <xs:enumeration value="MissionCode"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="AddressTypeEnum" nillable="true" type="tns:AddressTypeEnum"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://pis-ground-pc/LiveVideoControl/LiveVideoControlService.svc?xsd=xsd3</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://alstom.com/pacis/pis/ground/core/data/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://alstom.com/pacis/pis/ground/core/data/">
  <xs:simpleType name="MissionStateEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MI"/>
      <xs:enumeration value="ME"/>
      <xs:enumeration value="NI"/>
      <xs:enumeration value="MIE"/>
      <xs:enumeration value="DEG"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="MissionStateEnum" nillable="true" type="tns:MissionStateEnum"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/GetAvailableElementList" name="GetAvailableElementList" bindingOperationName="GetAvailableElementList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="5cfd6943-88dc-414e-b79f-709039a1f82b"><con:settings/><con:call name="Request 1" id="2b3282be-bc13-4ee4-b82c-62cf3f2daacd"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:liv="http://alstom.com/pacis/pis/ground/livevideocontrol/">
   <soapenv:Header/>
   <soapenv:Body>
      <liv:GetAvailableElementList>
         <!--Optional:-->
         <liv:sessionId>?</liv:sessionId>
      </liv:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/GetAvailableElementList"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartService" name="StartService" bindingOperationName="StartService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d5e4658e-a46c-45a9-bb4a-e4a7d082aebc"><con:settings/><con:call name="Request 1" id="03bf92b0-9d2c-4e71-adb0-eb2e599c99bf"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:liv="http://alstom.com/pacis/pis/ground/livevideocontrol/">
   <soapenv:Header/>
   <soapenv:Body>
      <liv:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartService"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartVideoStreamingCommand" name="StartVideoStreamingCommand" bindingOperationName="StartVideoStreamingCommand" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="787d3c83-189d-47c3-bb3d-9b36ee8c5c00"><con:settings/><con:call name="Request 1" id="4fba7a5d-261f-4977-b85e-52b36cf2e84f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:liv="http://alstom.com/pacis/pis/ground/livevideocontrol/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <liv:StartVideoStreamingCommand>
         <!--Optional:-->
         <liv:sessionId>?</liv:sessionId>
         <!--Optional:-->
         <liv:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </liv:targetAddress>
         <!--Optional:-->
         <liv:url>?</liv:url>
      </liv:StartVideoStreamingCommand>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartVideoStreamingCommand"/></con:call></con:operation><con:operation isOneWay="false" action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StopVideoStreamingCommand" name="StopVideoStreamingCommand" bindingOperationName="StopVideoStreamingCommand" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="088ed700-54c3-464f-af19-3a9b92692b56"><con:settings/><con:call name="Request 1" id="f953bcaa-1000-427d-89f3-bca509486f01"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:liv="http://alstom.com/pacis/pis/ground/livevideocontrol/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <liv:StopVideoStreamingCommand>
         <!--Optional:-->
         <liv:sessionId>?</liv:sessionId>
         <!--Optional:-->
         <liv:targetAddress>
            <sch:Id>?</sch:Id>
            <sch:Type>?</sch:Type>
         </liv:targetAddress>
      </liv:StopVideoStreamingCommand>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StopVideoStreamingCommand"/></con:call></con:operation></con:interface><con:testSuite name="Library" disabled="true" id="ddbed0f5-3a2c-4ecc-b30c-3c758ffa7ab6"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Utils" searchProperties="true" id="dc2a5bbe-b870-41a6-b19b-368a521d0bf1"><con:settings/><con:testStep type="groovy" name="Check" id="d2a45af0-7829-4617-a6da-1e37fa3457ba"><con:settings/><con:config><script><![CDATA[class Check
{
	def log
	def context
	def testRunner
	// Class constructor with same case as Class name
	def Check(logIn,contextIn,testRunnerIn)
	{
		this.log = logIn
		this.context = contextIn
		this.testRunner = testRunnerIn
	}

	def getNotificationInfo(mockResult)
	{
		if (mockResult != null) 
		{
			def request = mockResult.getMockRequest().getRequestContent()
			
			def gutils = new com.eviware.soapui.support.GroovyUtils( context );
			def holder = gutils.getXmlHolder(request);
			holder.namespaces["ns1"] = "http://alstom.com/pacis/pis/schema/appground/"
			
			//Get request values
			def notification = holder.getNodeValue("//ns1:SendNotification[1]/ns1:NotificationId[1]");
			def NotificationRequestID = holder.getNodeValue("//ns1:SendNotification[1]/ns1:RequestId[1]");
			
			log.info "Received " + notification + " Notification "
			
			return [notifId: notification, notifReqId: NotificationRequestID]
		}
		else
		{
			return null;
		}
	}

	
	def validReceivedNotifications(expectedNotifList, waitTimeInSec)
	{
		def expectedNotifListOptional = []
		for( i in 0..expectedNotifList.size()-1 )
		{
			def notif = expectedNotifList[i];
			def optional = notif.endsWith("Processing") || notif.endsWith("Transferring");
			expectedNotifListOptional.add([notif, optional]);
		}
		validReceivedNotificationsOptional(expectedNotifListOptional, waitTimeInSec);
	}
	
	def validReceivedNotificationsOptional(expectedNotifListOptional, waitTimeInSec)
	{
		def expectedNumberOfResponses = expectedNotifListOptional.size()
		def RequestID = context.expand('${#TestCase#RequestId}')
		def receivedNotifList = []

		def waitingForNotifications = true
		def retryCount = 0
		def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
		while( waitingForNotifications && testRunner.running )
		{
			Thread.sleep( 1000 )
			def index = 0
			receivedNotifList = []
			for( i in 1..mockService.mockRunner.getMockResultCount() )
			{
				def result = getNotificationInfo(mockService.mockRunner.mockResults.get(i-1))
				if (result != null && result.notifReqId == RequestID)
				{
					receivedNotifList.add(result.notifId)
					index++
				}
			}
			if (index == expectedNumberOfResponses)
			{
				waitingForNotifications = false;
			}
			if( retryCount < waitTimeInSec )
			{
				retryCount = retryCount + 1;
			}
			else
			{
				break;
			}
		}
		def assertionList = []
		def index = 0
		for( i in 0..receivedNotifList.size()-1 )
		{
			//Validate Notification
			def checkExpectation = true;
			while(checkExpectation)
			{
				checkExpectation = false;
				if( index >= expectedNotifListOptional.size() )
				{
					def errorMsg = "Assertion Failed! Unexpected notification: " + receivedNotifList[i] + "\n"
					log.info errorMsg
					assertionList.add(errorMsg)
				}
				else
				{
					def (expectedNotif, optionalNotif) = expectedNotifListOptional[index];
					if (expectedNotif == receivedNotifList[i])
					{
						log.info expectedNotif + " Assertion Pass\n"
						if(!optionalNotif)
						{
							index++
						}
					}
					else if(optionalNotif)
					{
						log.info "Did not receive optional notification: " + expectedNotif + "\n"
						index++
						checkExpectation = true;
					}
					else 
					{
						def errorMsg = "Assertion Failed! Expected " + expectedNotif + " got " + receivedNotifList[i] + "\n"
						log.info errorMsg
						assertionList.add(errorMsg)
					}
				}
			}
		}
		//validate result and throw exception to fail the test step (if response is invalid)
		assert assertionList.isEmpty() : assertionList.toString() + "\nExpected: " + expectedNotifListOptional.toString() + "\nGot: " + receivedNotifList.toString();
		assert expectedNumberOfResponses == index : "Incorrect number of notifications, expected " + expectedNumberOfResponses + " got " + index + "\nExpected: " + expectedNotifListOptional.toString() + "\nGot: " + receivedNotifList.toString();
	}

	def validReceivedNotificationsUnordered(expectedNotifMap, waitTimeInSec)
	{
		LinkedHashMap receivedNotifMap = new LinkedHashMap();
		def waitingForNotifications = true
		def RequestID = context.expand('${#TestCase#RequestId}')

		def retryCount = 0
		def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
		while( waitingForNotifications && testRunner.running )
		{
			Thread.sleep( 1000 )

			receivedNotifMap = new LinkedHashMap();
			for( i in 1..mockService.mockRunner.getMockResultCount() )
			{
				def result = getNotificationInfo(mockService.mockRunner.mockResults.get(i-1))
				if (result != null && result.notifReqId == RequestID)
				{
					if (receivedNotifMap.containsKey(result.notifId))
					{
						receivedNotifMap[result.notifId] = receivedNotifMap[result.notifId] + 1
					}
					else
					{
						receivedNotifMap[result.notifId] = 1
					}
				}
			}

			def receivedAllNotif = true
			expectedNotifMap.each{ k, v -> receivedAllNotif = receivedAllNotif && receivedNotifMap[k] == v }
			waitingForNotifications = !receivedAllNotif
			
			if( retryCount < waitTimeInSec )
			{
				retryCount = retryCount + 1;
			}
			else
			{
				log.info("timeout");
				break;
			}
		}

		expectedNotifMap.each{ k, v -> assert receivedNotifMap[k] == v : "Incorrect number of " + k + ", expected " + v + " got " + receivedNotifMap[k] }
		receivedNotifMap.each{ k, v -> assert expectedNotifMap.containsKey(k) : "Unexpected notification " + k + " received " + v + " times" }
	}
}

context.setProperty( "check", new Check( log, context, testRunner) )
log.info("Library Context:"+context)]]></script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite>
<con:testSuite name="StartMock" id="a83d1bcc-8ea3-4b93-83a2-02074c5ce20d"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StartMock" searchProperties="true" id="8557f7cc-e938-4918-9f53-a2dc3456ef2e"><con:settings/><con:testStep type="groovy" name="StartMockService" id="882ee817-10a0-432b-8dbc-3c5c541d3267"><con:settings/><con:config><script>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService != null)
{
	mockService.start()
}</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite>

<con:testSuite name="Login" id="3a5151e6-73b7-46ff-b5fe-c7a54a687441"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Login Sequence" searchProperties="true" id="eaaba47f-fc6a-43fa-a2bc-737c1e95b3b2"><con:settings/><con:testStep type="calltestcase" name="Login" id="72ed8e10-53ed-4bed-a5a1-784166c71313"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>81f7ff52-1f2a-4951-a4c7-6fc9bf9dc457</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SetNotification" id="9060cd39-6b82-4449-8e9e-f592cd45714b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>9c0038e7-6ed1-43a5-bf10-06633b5e3b84</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SessionValid" id="4b9e8e69-78c6-481c-9eef-2824ffc28ecb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>cd8617a4-20d0-4009-8e23-08f9a9d21766</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="request" name="Start Maintenance Service" id="0f4cb575-4f96-42ad-acf4-38e4e90ba8b7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>StartService</con:operation><con:request name="Start Maintenance Service"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8e3332c3-560d-4f72-b392-d3ac055d9565"/><con:assertion type="Schema Compliance" id="76e2b313-916a-4f9f-b008-d0c238521537"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="aea3d2be-8c68-4e37-b193-1e2f3d7efbb3"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Start InstantMessage Service" id="85630d0f-948d-4313-a9e7-4afe1d32b4ab"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>StartService</con:operation><con:request name="Start InstantMessage Service"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="91607f74-d3f0-4468-8022-ce6e4d588527"/><con:assertion type="Schema Compliance" id="90c66261-d19d-4558-9390-8c8973c87fc1"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="be09500d-3ecc-49d0-b02f-a604da69ddd0"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Start DataPackage Service" id="1a9ef1ab-47ea-4cf8-99e2-3da93a01e34b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>StartService</con:operation><con:request name="Start DataPackage Service"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f1a077ce-f673-4f1f-a6c6-4317fb67a67a"/><con:assertion type="Schema Compliance" id="7514bf11-80ed-4603-8d19-65a4ed137075"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="a8aaab6c-dc2c-44c9-9894-bc6f4bc4bffd"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Start Journaling Service" id="fdf22b6e-08b0-45af-94a4-6d4f548f66ab"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>StartService</con:operation><con:request name="Start Journaling Service"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="69f09123-5299-4428-ac1e-a287e3ea8724"/><con:assertion type="Schema Compliance" id="744ae916-70cb-4d8f-9d01-68d793e8aa0a"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="4107bcc2-82b5-4cf5-918d-9b39b16739f1"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Start Mission Service" id="d299493b-be0e-4e07-add7-b12585d549ae"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>StartService</con:operation><con:request name="Start Mission Service"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="cc8357ca-9ac1-4b7c-b5c5-71f42086c1af"/><con:assertion type="Schema Compliance" id="9d8a7c17-b464-4c9f-9af5-281cf0a34ef9"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="cf8b1386-6932-4779-b055-23e664940123"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Start LiveVideoControl Service" id="5c769508-040f-4f46-a8ed-0c8d1dbf0cbe" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_LiveVideoControl</con:interface><con:operation>StartService</con:operation><con:request name="Start LiveVideoControl Service"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:liv="http://alstom.com/pacis/pis/ground/livevideocontrol/">
   <soapenv:Header/>
   <soapenv:Body>
      <liv:StartService/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5fe5b64d-c5e6-424c-97c5-908d79f41078"/><con:assertion type="Schema Compliance" id="fc50a012-784e-418e-8065-d9b4ea58e5ee"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="517465f3-6d4e-4303-9bec-d1658f7ff6ca"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="TC_PIS_Sy_1430 - Common Services TestSuite" id="e1fe0659-ff02-4328-bac9-ec1e8fe87214" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1491-A1-1 -- T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="247af862-50bb-4d2e-8442-455c2b3e4bb6" disabled="true"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="0e8f4dec-7d46-496d-b7ff-81fa53bebdf3"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="3b600013-3878-4e5e-983e-1283ec30cbba"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["CommonT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>32a64ca1-4448-42e9-a28d-1896cb48d3f9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1491-A2-1 -- T2G Online TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0da1bee9-f9f7-4159-98a4-8a158fec580c" disabled="true"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Restart T2G Ground Server" id="56833b8e-0a85-4210-90d1-de449d5319fe"><con:description>Restart T2G Ground Server</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e8838cf3-ab8e-4edf-94d1-491178a5815c"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["CommonT2GServerOnline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>32a64ca1-4448-42e9-a28d-1896cb48d3f9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/></con:testSuite><con:testSuite name="TC_PIS_Sy_1470 - DataPackageService TestSuite" id="2a497286-f660-4791-92d1-1bbfb8310bed"><con:description>WEB SERVICE DATAPACKAGE

[RefSol_PIS2G_GroundApp_SyID_0083], [RefSol_PIS2G_GroundApp_SyID_0084], [RefSol_PIS2G_GroundApp_SyID_0085],
[RefSol_PIS2G_GroundApp_SyID_0223], [RefSol_PIS2G_GroundApp_SyID_0086], [RefSol_PIS2G_GroundApp_SyID_0087], 
[RefSol_PIS2G_GroundApp_SyID_0088], [RefSol_PIS2G_GroundApp_SyID_0089], [RefSol_PIS2G_GroundApp_SyID_0198],  
[RefSol_PIS2G_GroundApp_SyID_0199], [RefSol_PIS2G_GroundApp_SyID_0224], [RefSol_PIS2G_GroundApp_SyID_0200],  
[RefSol_PIS2G_GroundApp_SyID_0201], [RefSol_PIS2G_GroundApp_SyID_0202], [RefSol_PIS2G_GroundApp_SyID_0203],
[RefSol_PIS2G_GroundApp_SyID_0204], [RefSol_PIS2G_GroundApp_SyID_0090], [RefSol_PIS2G_GroundApp_SyID_0091],
[RefSol_PIS2G_GroundApp_SyID_0092], [RefSol_PIS2G_GroundApp_SyID_0093], [RefSol_PIS2G_GroundApp_SyID_0094],
[RefSol_PIS2G_GroundApp_SyID_0095], [RefSol_PIS2G_GroundApp_SyID_0096], [RefSol_PIS2G_GroundApp_SyID_0097], 
[RefSol_PIS2G_GroundApp_SyID_0098], [RefSol_PIS2G_GroundApp_SyID_0099], [RefSol_PIS2G_GroundApp_SyID_0100],
[RefSol_PIS2G_GroundApp_SyID_0101], [RefSol_PIS2G_GroundApp_SyID_0102], [RefSol_PIS2G_GroundApp_SyID_0103],
[RefSol_PIS2G_GroundApp_SyID_0205], [RefSol_PIS2G_GroundApp_SyID_0206], [RefSol_PIS2G_GroundApp_SyID_0077],  
[RefSol_PIS2G_GroundApp_SyID_0078], [RefSol_PIS2G_GroundApp_SyID_0104], [RefSol_PIS2G_GroundApp_SyID_0105],
[RefSol_PIS2G_GroundApp_SyID_0106], [RefSol_PIS2G_GroundApp_SyID_0107], [RefSol_PIS2G_GroundApp_SyID_0108],
[RefSol_PIS2G_GroundApp_SyID_0159], [RefSol_PIS2G_GroundApp_SyID_0160], [RefSol_PIS2G_GroundApp_SyID_0161],
[RefSol_PIS2G_GroundApp_SyID_0162], [RefSol_PIS2G_GroundApp_SyID_0163], [RefSol_PIS2G_GroundApp_SyID_0109], 
[RefSol_PIS2G_GroundApp_SyID_0110], [RefSol_PIS2G_GroundApp_SyID_0111], [RefSol_PIS2G_GroundApp_SyID_0112],
[RefSol_PIS2G_GroundApp_SyID_0113], [RefSol_PIS2G_GroundApp_SyID_0114], [RefSol_PIS2G_GroundApp_SyID_0115],
[RefSol_PIS2G_GroundApp_SyID_0116], [RefSol_PIS2G_GroundApp_SyID_0117], [RefSol_PIS2G_GroundApp_SyID_0118],
[RefSol_PIS2G_GroundApp_SyID_0119], [RefSol_PIS2G_GroundApp_SyID_0120], [RefSol_PIS2G_GroundApp_SyID_0121],  
[RefSol_PIS2G_GroundApp_SyID_0122], [RefSol_PIS2G_GroundApp_SyID_0123], [RefSol_PIS2G_GroundApp_SyID_0124], 
[RefSol_PIS2G_GroundApp_SyID_0207], [RefSol_PIS2G_GroundApp_SyID_0208], [RefSol_PIS2G_GroundApp_SyID_0125],
[RefSol_PIS2G_GroundApp_SyID_0126], [RefSol_PIS2G_GroundApp_SyID_0127], [RefSol_PIS2G_GroundApp_SyID_0128],
[RefSol_PIS2G_GroundApp_SyID_0129], [RefSol_PIS2G_GroundApp_SyID_0130], [RefSol_PIS2G_GroundApp_SyID_0131],
[RefSol_PIS2G_GroundApp_SyID_0132], [RefSol_PIS2G_GroundApp_SyID_0133], [RefSol_PIS2G_GroundApp_SyID_0134],
[RefSol_PIS2G_GroundApp_SyID_0135], [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137], 
[RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139], [RefSol_PIS2G_GroundApp_SyID_0140], 
[RefSol_PIS2G_GroundApp_SyID_0141], [RefSol_PIS2G_GroundApp_SyID_0142], [RefSol_PIS2G_GroundApp_SyID_0143], 
[RefSol_PIS2G_GroundApp_SyID_0144], [RefSol_PIS2G_GroundApp_SyID_0145],  [RefSol_PIS2G_GroundApp_SyID_0146]
</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A1-1 -- GetAvailableElementDataList TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="080fe04e-21d1-4ce8-aed9-fa0c73b9d2ec"><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of available elements. 
This list includes also missions that are running for each element.

The request is sent with a valid session ID.

Expected result : The ground PIS shall reply with the list of available elements
                           For each element in the elements list shall include the version number of the PIS Basic data package (which includes IM templates definition) 
                           the version of the  LMT data package (which contains the stations list) and the id of the current running mission (both the Mission Commercial Number and the Mission Operator Code).
                           If the element is not in a mission, the mission Id parameter shall be omitted.


Requirements:
[RefSol_PIS2G_GroundApp_SyID_0011], [RefSol_PIS2G_GroundApp_SyID_0012],
[RefSol_PIS2G_GroundApp_SyID_0013], [RefSol_PIS2G_GroundApp_SyID_0014], 
[RefSol_PIS2G_GroundApp_SyID_0015], [RefSol_PIS2G_GroundApp_SyID_0016]</con:description><con:settings/><con:testStep type="request" name="GetAvailableElementDataList" id="a02df703-c1d7-411d-a23e-26443e7ff3a4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>GetAvailableElementDataList</con:operation><con:request name="GetAvailableElementDataList"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:GetAvailableElementDataList>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
      </dat:GetAvailableElementDataList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f326af37-18fa-4cda-b7c9-46d19cf1fbf3"/><con:assertion type="SOAP Response" name="SOAP Response" id="2bd26d02-2c51-45c9-9a82-37e457b767ad"/><con:assertion type="XPath Match" name="Match content of [error_code]" id="3080109e-891b-48b4-adbe-4d5f82977c9b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:GetAvailableElementDataListResponse[1]/ns1:GetAvailableElementDataListResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="46e7f0f9-2144-4be0-8521-77647d5bf764"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//ns1:GetAvailableElementDataListResponse[1]/ns1:pElementDataList[1]/a:AvailableElementData[1]/a:OnlineStatus[1]/text()</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/GetAvailableElementDataList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A1-2 -- GetAvailableElementDataList Error management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7aab60d6-230e-451f-866e-2e4f7d7a2968"><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of available elements. 
This list includes also missions that are running for each element.

The request is sent with a bad session ID. 

Expected result : PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0273]</con:description><con:settings/><con:testStep type="request" name="GetAvailableElementDataList Bad Session ID" id="0565def4-42a1-4af9-b58f-a28a2a2f10c6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>GetAvailableElementDataList</con:operation><con:request name="GetAvailableElementDataList Bad Session ID"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:GetAvailableElementDataList>
         <!--Optional:-->
         <dat:pSessionId>00000000-0000-0000-0000-000000000000</dat:pSessionId>
      </dat:GetAvailableElementDataList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e50d5b13-7e10-4bf6-b9f2-19101c91a60e"/><con:assertion type="SOAP Response" name="SOAP Response" id="8293458e-23c0-4355-9372-0f80e8da10bf"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="7a2da889-3095-4ea9-9a61-acac29b3f3f9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="05b62050-86f6-47a3-8f34-eccdafc22fba"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:GetAvailableElementDataListResponse[1]/ns1:GetAvailableElementDataListResult[1]/ns1:error_code[1]/text()</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/GetAvailableElementDataList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A1-1 -- uploadDataPackages TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f75d5a61-0302-45f6-a33d-dfd18fa48409"><con:description>Test the  function that allows the GroundApp to request from the ground PIS to get one or more data packages by providing the locations of the files to be transferred.

The request is sent with valid informations &amp; datapackages.

Expected result : PIS shall return request ID and connect to each of the files locations specified by the GroundApp and get the data packages files.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0083], [RefSol_PIS2G_GroundApp_SyID_0084], 
[RefSol_PIS2G_GroundApp_SyID_0085], [RefSol_PIS2G_GroundApp_SyID_0223]

Requirements Update package upload status :
[RefSol_PIS2G_GroundApp_SyID_0086], [RefSol_PIS2G_GroundApp_SyID_0087], 
[RefSol_PIS2G_GroundApp_SyID_0088], [RefSol_PIS2G_GroundApp_SyID_0089]</con:description><con:settings/><con:testStep type="request" name="uploadDataPackages" id="a5093d38-feac-43dc-b864-78d0cdd42964"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>uploadDataPackages</con:operation><con:request name="uploadDataPackages"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:uploadDataPackages>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pFilesURLs>
            <!--Zero or more repetitions:-->
            <arr:string>${#Project#DATAPACKAGE-PisBaseFileURL}</arr:string>
            <arr:string>${#Project#DATAPACKAGE-PisMission-FileURL}</arr:string>
            <arr:string>${#Project#DATAPACKAGE-PisInfotainementFileURL}</arr:string>
            <arr:string>${#Project#DATAPACKAGE-LmtFileURL}</arr:string>
         </dat:pFilesURLs>
      </dat:uploadDataPackages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="be141522-904f-45ac-a3f2-07cfcaf63f12"/><con:assertion type="SOAP Response" name="SOAP Response" id="f70e7a96-d1db-4c21-9a3a-968b73910885"/><con:assertion type="Simple NotContains" name="Not Contains" id="13f91b1a-f791-47d8-b71f-a4967ae6fabe"><con:configuration><token>INVALID_SESSION_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="dd83eb95-a74e-4d3e-8438-7a4e93fdd3d5"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:uploadDataPackagesResponse[1]/ns1:uploadDataPackagesResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="b86e62b6-e236-45a4-80dc-e3102d683c0b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>uploadDataPackages</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:uploadDataPackagesResult/ns1:reqId</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="66f5ad79-a679-4ced-acee-d85c7e8455e5"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be 2  notifications received:
- UpdatePackageUploadStatusProcessing
- UpdatePackageUploadStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="63be9689-9c96-4093-9ac6-1a872744924f"><con:settings/><con:config><script>

//List of notification expected
def MapNotifications = [DataPackageUploadProcessing: 4, DataPackageUploadCompleted: 4]

def check = context.check
check.validReceivedNotificationsUnordered(MapNotifications, 600)

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A1-2 -- upload Corrupted or Invalid DataPackages TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fb9cf26e-4054-4121-a4d7-ceea0f948fc8"><con:description>Test the  function that allows the GroundApp to request from the ground PIS to get one or more data packages by providing the locations of the files to be transferred.

The request is sent with valid URL but corrupted or invalid  datapackages.

Expected result : PIS shall return request ID,send "processing" status, drop the request and send "failed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0083],  [RefSol_PIS2G_GroundApp_SyID_0084], 
[RefSol_PIS2G_GroundApp_SyID_0085], [RefSol_PIS2G_GroundApp_SyID_0223]

Requirements Update package upload status :
[RefSol_PIS2G_GroundApp_SyID_0086],  [RefSol_PIS2G_GroundApp_SyID_0087], 
[RefSol_PIS2G_GroundApp_SyID_0088], [RefSol_PIS2G_GroundApp_SyID_0089]

</con:description><con:settings/><con:testStep type="request" name="uploadDataPackages Corrupted or Invalid Package" id="25ed735b-a6ff-4367-aa0c-2da860de9f76"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>uploadDataPackages</con:operation><con:request name="uploadDataPackages Corrupted or Invalid Package"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:uploadDataPackages>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pFilesURLs>
            <!--Zero or more repetitions:-->
            <arr:string>${#Project#DEGRADED-DATAPACKAGE-CorruptedFileURL}</arr:string>
         </dat:pFilesURLs>
      </dat:uploadDataPackages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="1572aa91-4863-4ca6-bac8-79d9a5ca1d84"/><con:assertion type="SOAP Response" name="SOAP Response" id="2d6cfb34-26a8-4330-999a-e3055b302ef4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="822aa4a6-f552-4150-ac0f-b13d4b1b8401"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains" id="d423268a-ddc6-4e34-8f5c-5589f64046ac"><con:configuration><token>INVALID_SESSION_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="e48cc123-4c27-46ab-8450-bba081d1cd54"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:uploadDataPackagesResponse[1]/ns1:uploadDataPackagesResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="9e1c6a83-ef19-4b04-9d0d-0fd5e66cb427"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>uploadDataPackages Corrupted or Invalid Package</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:uploadDataPackagesResult/ns1:reqId</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="5ed00561-1079-4211-867b-a522ed33aabe"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdatePackageUploadStatusProcessing
- UpdatePackageUploadStatusFailed
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="c5f9590f-05b2-4a30-96c0-b42e993253a0"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageUploadProcessing",
					  "DataPackageUploadFailed"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>2ccd57a1-b8b7-426e-a398-c7a873b106a8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A1-3 -- upload Already Existing DataPackages TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6635fff0-03ed-4252-a987-a7afe208ab01"><con:description>Test the  function that allows the GroundApp to request from the ground PIS to get one or more data packages by providing the locations of the files to be transferred.

The  data package version to upload already exists in the ground PIS data store .

Expected result : PIS shall return request ID,send "processing" status, drop the request and send "already exists" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0083],  [RefSol_PIS2G_GroundApp_SyID_0084], 
[RefSol_PIS2G_GroundApp_SyID_0085], [RefSol_PIS2G_GroundApp_SyID_0223]

Requirements Update package upload status :
[RefSol_PIS2G_GroundApp_SyID_0086],  [RefSol_PIS2G_GroundApp_SyID_0087], 
[RefSol_PIS2G_GroundApp_SyID_0088], [RefSol_PIS2G_GroundApp_SyID_0089]

</con:description><con:settings/><con:testStep type="request" name="uploadDataPackages Already Exists" id="d0992191-4514-4af8-8908-4b05a9213cff"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>uploadDataPackages</con:operation><con:request name="uploadDataPackages Already Exists"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:uploadDataPackages>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pFilesURLs>
            <!--Zero or more repetitions:-->
            <arr:string>${#Project#DATAPACKAGE-PisBaseFileURL}</arr:string>
         </dat:pFilesURLs>
      </dat:uploadDataPackages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="408a9552-81b6-45e6-9f6c-f1364ba87c2d"/><con:assertion type="SOAP Response" name="SOAP Response" id="28b1862c-6afe-4afc-b346-23dd4e0b06a5"/><con:assertion type="Simple NotContains" name="Not Contains" id="a14fc022-f1c8-4afc-9f8b-e1ce46a22af3"><con:configuration><token>INVALID_SESSION_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="42d9c13f-2790-4b17-a509-794120e3751e"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:uploadDataPackagesResponse[1]/ns1:uploadDataPackagesResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="c9ece772-cf21-466e-a9f3-211b4d1f56fc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>uploadDataPackages Already Exists</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://schemas.datacontract.org/2004/07/PIS.Ground.Core.Data';
declare namespace ns2='http://alstom.com/pacis/pis/ground/datapackage/';
declare namespace ns3='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns4='http://schemas.microsoft.com/2003/10/Serialization/Arrays';
declare namespace ns5='http://alstom.com/pacis/pis/schema/';
//ns2:uploadDataPackagesResult/ns2:reqId</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="bf27c110-7bf1-4f05-97a9-1efb266e950e"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdatePackageUploadStatusProcessing
- UpdatePackageUploadStatusAlreadyExists
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="cf23be60-3266-46da-a1fb-e17a739dbc47"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageUploadProcessing",
					  "DataPackageUploadAlreadyExist"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>cf9fde3d-bb13-46fd-bc56-146815eb6426</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A1-4 -- uploadDataPackages Error management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="05d8a7f5-bd1d-42b6-8ae3-69f4f8fc316e"><con:description>Test the  function that allows the GroundApp to request from the ground PIS to get one or more data packages by providing the locations of the files to be transferred.

The request is sent with invalid informations. PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0301]
</con:description><con:settings/><con:testStep type="request" name="uploadDataPackages Bad Session ID" id="50889ec8-202c-42a9-b4f5-a0e12af646ad"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>uploadDataPackages</con:operation><con:request name="uploadDataPackages Bad Session ID"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:uploadDataPackages>
         <!--Optional:-->
         <dat:pSessionId>${#Project#DEGRADED-GEN-BadSessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pFilesURLs>
            <!--Zero or more repetitions:-->
            <arr:string>${#Project#DataPackageFileURL}</arr:string>
         </dat:pFilesURLs>
      </dat:uploadDataPackages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d870088c-46df-4796-96ba-0b08699d49a8"/><con:assertion type="SOAP Response" name="SOAP Response" id="6f3d03df-1745-4faf-abdb-00dd0ac92e9d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="25dbb522-1bc3-4675-8d17-27a4c64c73fe"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9f3272fc-5b4d-45d2-8c10-2d4b359b239a"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:uploadDataPackagesResult/ns1:error_code[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="c311b8ad-b620-4dd1-a72b-482c37b75177"><con:configuration/></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="uploadDataPackages Invalid File Location" id="328ba719-be43-45e8-8571-d0f7a774006b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>uploadDataPackages</con:operation><con:request name="uploadDataPackages Invalid File Location"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:uploadDataPackages>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pFilesURLs>
            <!--Zero or more repetitions:-->
            <arr:string>${#Project#DEGRADED-DATAPACKAGE-InvalidFileURL}</arr:string>
         </dat:pFilesURLs>
      </dat:uploadDataPackages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f70742fe-5ed5-4b09-a445-1e9e6bcf693e"/><con:assertion type="SOAP Response" name="SOAP Response" id="805c6441-d98b-4f07-ae73-b63e77836b18"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="faa3dd99-d23c-4cad-bc7a-bfc92928c96d"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="7a8243f6-611b-4b48-8a23-fdfd1dded28f"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:uploadDataPackagesResponse[1]/ns1:uploadDataPackagesResult[1]/ns1:error_code[1]/text()</path><content>FILE_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="uploadDataPackages Invalid Path Structure" id="443ea20c-ef65-43a1-ae55-4610b764b209"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>uploadDataPackages</con:operation><con:request name="uploadDataPackages Invalid Path Structure"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:uploadDataPackages>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pFilesURLs>
            <!--Zero or more repetitions:-->
            <arr:string>${#Project#DEGRADED-DATAPACKAGE-InvalidPathStructure}</arr:string>
         </dat:pFilesURLs>
      </dat:uploadDataPackages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f70742fe-5ed5-4b09-a445-1e9e6bcf693e"/><con:assertion type="SOAP Response" name="SOAP Response" id="805c6441-d98b-4f07-ae73-b63e77836b18"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="faa3dd99-d23c-4cad-bc7a-bfc92928c96d"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="7a8243f6-611b-4b48-8a23-fdfd1dded28f"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:uploadDataPackagesResponse[1]/ns1:uploadDataPackagesResult[1]/ns1:error_code[1]/text()</path><content>INVALID_PATH</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Stop RemoteDataStoreService 1" id="ea71b6f9-c434-48a3-9a34-9187c3915c6a"><con:settings/><con:config><script>//def command = """executable arg1 arg2 arg3"""// Create the String
//def proc = command.execute()                 // Call *execute* on the string
//proc.waitFor()                               // Wait for the command to finish
//
// Obtain status and output
//println "return code: ${ proc.exitValue()}"</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop RemoteDataStoreService" id="683b5f59-ac47-4ad9-97de-1da22818d161" disabled="true"><con:description>Stop RemoteDataStoreService on PIS Ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="uploadDataPackages Remote DataStore Not Accessible" id="0887dcbe-c55f-46c8-9cde-5a960d4fa9ae"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>uploadDataPackages</con:operation><con:request name="uploadDataPackages Remote DataStore Not Accessible"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:uploadDataPackages>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pFilesURLs>
            <!--Zero or more repetitions:-->
            <arr:string>${#Project#DATAPACKAGE-PisBaseFileURL}</arr:string>
         </dat:pFilesURLs>
      </dat:uploadDataPackages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f70742fe-5ed5-4b09-a445-1e9e6bcf693e"/><con:assertion type="SOAP Response" name="SOAP Response" id="805c6441-d98b-4f07-ae73-b63e77836b18"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="faa3dd99-d23c-4cad-bc7a-bfc92928c96d"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="7a8243f6-611b-4b48-8a23-fdfd1dded28f"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:uploadDataPackagesResponse[1]/ns1:uploadDataPackagesResult[1]/ns1:error_code[1]/text()</path><content>REMOTEDATASTORE_NOT_ACCESSIBLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/uploadDataPackages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Restart remoteDataStore service" id="e20ffeb6-0599-4a40-85ff-7283268738ec" disabled="true"><con:description>Restart remoteDataStore service</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A6-1 -- defineNewBaseline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="53319ec6-f08a-43ca-87a2-b034641a66f9"><con:description>Test the function that allows the GroundApp to request from the PIS to define a new data packages baseline

A new valid baseline definition request is sent.

Expected result : The PIS shall return request ID, send "processing" then "completed" status.


Requirements:
[RefSol_PIS2G_GroundApp_SyID_0090],  [RefSol_PIS2G_GroundApp_SyID_0091],
[RefSol_PIS2G_GroundApp_SyID_0092], 


Requirements Update baseline definition status
[RefSol_PIS2G_GroundApp_SyID_0095],  [RefSol_PIS2G_GroundApp_SyID_0096], 
[RefSol_PIS2G_GroundApp_SyID_0097], [RefSol_PIS2G_GroundApp_SyID_0098]</con:description><con:settings/><con:testStep type="request" name="defineNewBaseline" id="7303e299-8708-4841-a7b9-7a66264d2db4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>defineNewBaseline</con:operation><con:request name="defineNewBaseline"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>${#Project#DATAPACKAGE-BaselineCreationDate}</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>${#Project#DATAPACKAGE-BaselineDescription}</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>${#Project#DATAPACKAGE-LMTVersion}</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>${#Project#DATAPACKAGE-PISBaseVersion}</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>${#Project#DATAPACKAGE-PisInfotainmentVersion}</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>${#Project#DATAPACKAGE-PISMissionVersion}</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a8d03bc5-cd40-4769-badf-2bf4d331753a"/><con:assertion type="SOAP Response" name="SOAP Response" id="bdffa1e7-8681-4635-ba1d-1528a770fbf5"/><con:assertion type="XPath Match" name="Match content of [error_code]" id="6cc79c05-802b-4812-9c4e-e67957e1c099"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="0e1111a8-d149-4ce4-bafa-a90f69cd2dce"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>defineNewBaseline</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:reqId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="eee05a51-2ef7-437d-b928-f00882fee3f9"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineDefinitionStatusProcessing
- UpdateBaselineDefinitionStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e6d28a6a-9ba1-4b1a-b042-5cf7bc62eb7d"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageBaselineDefinitionProcessing", true],
						  ["DataPackageBaselineDefinitionCompleted", false]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>be7d2a13-1954-4cb6-9554-eaa35e10d7d3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A6-2 -- defineNewBaseline with missing package TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b5f16a57-bf88-4552-85a7-e7399547370a"><con:description>Test the function that allows the GroundApp to request from the PIS to define a new data packages baseline.

The request is sent with one or more data package not existing in the ground PIS data store.

Expexted result : The PIS shall return request ID, send "processing" then "completed" status.
                             The ground PIS shall notify the GroundApp by providing the list of missing data packages.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0090], [RefSol_PIS2G_GroundApp_SyID_0091],
[RefSol_PIS2G_GroundApp_SyID_0092], [RefSol_PIS2G_GroundApp_SyID_0094]

Requirements Update baseline definition status
[RefSol_PIS2G_GroundApp_SyID_0095],  [RefSol_PIS2G_GroundApp_SyID_0096], 
[RefSol_PIS2G_GroundApp_SyID_0097], [RefSol_PIS2G_GroundApp_SyID_0098]

Requirements Missing data package notification
[RefSol_PIS2G_GroundApp_SyID_0099], [RefSol_PIS2G_GroundApp_SyID_0100]</con:description><con:settings/><con:testStep type="request" name="defineNewBaseline with Missing DataPackage" id="9e93bdc7-f711-45f9-bcd9-ddb4ea90ef17"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>defineNewBaseline</con:operation><con:request name="defineNewBaseline with Missing DataPackage"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>${#Project#DATAPACKAGE-BaselineCreationDate}</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>${#Project#DATAPACKAGE-BaselineDescription}</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>${#Project#DEGRADED-DATAPACKAGE-IncompleteBaselineVersion}</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>${#Project#DATAPACKAGE-LMTVersion}</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>${#Project#DEGRADED-DATAPACKAGE-MissingPISBaseVersion}</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>${#Project#DATAPACKAGE-PisInfotainmentVersion}</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>${#Project#DATAPACKAGE-PISMissionVersion}</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="6c371911-f7bd-492c-a13d-99171d1a6a85"/><con:assertion type="SOAP Response" name="SOAP Response" id="1e05352f-800a-41df-be90-8a5bb2a07d8b"/><con:assertion type="XPath Match" name="Match content of [error_code]" id="c39cabf7-7c4e-4a33-a0fe-61b78e3cbfcb"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="31cf5168-fb18-49e4-a267-852cce941861"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>defineNewBaseline with Missing DataPackage</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:reqId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="3c115a93-cadb-42f1-8f97-b227d8694dd1"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineDefinitionStatusProcessing
- DatapackageMissing
- UpdateBaselineDefinitionStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="51c4ed70-71d7-43f9-af3f-12a23748e080"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageBaselineDefinitionProcessing", true],
							["DataPackageBaselineDefinitionFailed", false],
							["DataPackageMissing", false]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>61aeb9af-8776-4388-a59f-df2121a3b3cc</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A6-3 -- define Already existing Baseline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="9ba335fe-2e4d-4953-8b02-b682d68fbd59"><con:description>Test the function that allows the GroundApp to request from the PIS to define a new data packages baseline.

A request for an existing baseline definition is sent.

Expected result : The PIS shall return request ID, send "processing" then "failed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0090], [RefSol_PIS2G_GroundApp_SyID_0091], 
[RefSol_PIS2G_GroundApp_SyID_0092], [RefSol_PIS2G_GroundApp_SyID_0093]

Requirements Update baseline definition status
[RefSol_PIS2G_GroundApp_SyID_0095],  [RefSol_PIS2G_GroundApp_SyID_0096], 
[RefSol_PIS2G_GroundApp_SyID_0097], [RefSol_PIS2G_GroundApp_SyID_0098]</con:description><con:settings/><con:testStep type="request" name="defineNewBaseline Baseline Already Exists" id="0473367b-ea73-42a3-ad34-210a4feada00"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>defineNewBaseline</con:operation><con:request name="defineNewBaseline Baseline Already Exists"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>${#Project#DATAPACKAGE-BaselineCreationDate}</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>${#Project#DATAPACKAGE-BaselineDescription}</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>${#Project#DATAPACKAGE-LMTVersion}</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>${#Project#DATAPACKAGE-PISBaseVersion}</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>${#Project#DATAPACKAGE-PisInfotainmentVersion}</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>${#Project#DATAPACKAGE-PISMissionVersion}</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5cb8e889-2ec8-4d9c-bf25-b6c5768cfa8e"/><con:assertion type="SOAP Response" name="SOAP Response" id="f3ddb803-7cce-46ae-b819-83f057fd9597"/><con:assertion type="XPath Match" name="XPath Match" id="1d8b99ef-8d1d-46db-adca-b912302c8159"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="8556a5a5-9f89-4b05-a790-7ed5ec7a8a48"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>defineNewBaseline Baseline Already Exists</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="d2daf98d-618c-4f27-bd50-6579de0eadf5"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineDefinitionStatusProcessing
- UpdateBaselineDefinitionStatusFailed
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="584c8f76-87f3-4dad-9a07-1490e593982b"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageBaselineDefinitionProcessing", true],
							["DataPackageBaselineDefinitionFailed", false]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>54d83be9-97f2-4985-ba97-b88abe423689</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A6-4 -- defineNewBaseline Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="31f84627-ba04-43c2-a11c-24df30c0f908"><con:description>Test the function that allows the GroundApp to request from the PIS to define a new data packages baseline

The request is sent with invalid informations.

Expected result : PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0307]</con:description><con:settings/><con:testStep type="request" name="defineNewBaseline Bad Session ID" id="ca27216e-6223-4350-9b03-ca16eb85bcf4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>defineNewBaseline</con:operation><con:request name="defineNewBaseline Bad Session ID"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#DEGRADED-GEN-BadSessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>${#Project#DATAPACKAGE-BaselineCreationDate}</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>${#Project#DATAPACKAGE-BaselineDescription}</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>${#Project#DATAPACKAGE-LMTVersion}</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>${#Project#DATAPACKAGE-PISBaseVersion}</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>${#Project#DATAPACKAGE-PisInfotainmentVersion}</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>${#Project#DATAPACKAGE-PISMissionVersion}</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c6e5df86-c7e1-4898-8af2-ba69b1d12c73"/><con:assertion type="SOAP Response" name="SOAP Response" id="e9107a25-eed8-4dcc-93ee-0e1cdc433d27"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="0a7434d1-b157-48e9-a421-2ec077b7e650"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="fd21ee5d-d5cb-4f54-81c0-635a929dbdd4"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="defineNewBaseline Invalid Baseline Version" id="d9337d54-b798-4932-a291-5b8e908fa977"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>defineNewBaseline</con:operation><con:request name="defineNewBaseline Invalid Baseline Version"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>${#Project#DATAPACKAGE-BaselineCreationDate}</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>${#Project#DATAPACKAGE-BaselineDescription}</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>${#Project#DEGRADED-DATAPACKAGE-InvalidBaselineVersion}</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>${#Project#DATAPACKAGE-LMTVersion}</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>${#Project#DATAPACKAGE-PISBaseVersion}</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>${#Project#DATAPACKAGE-PisInfotainmentVersion}</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>${#Project#DATAPACKAGE-PISMissionVersion}</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="52513823-2a4c-47b2-babf-4e875bc4c017"/><con:assertion type="SOAP Response" name="SOAP Response" id="79b43927-f2c7-4a8d-b377-c96dc32ac807"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c609f2d2-8684-47d8-a2b3-a99e53ab06f2"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="3591cae5-f9b3-4d5c-a751-5673c01a2eb7"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_BASELINE_VERSION</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="defineNewBaseline Invalid PIS Base Version" id="78227b8c-2076-4e17-8375-c586cd3be78a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>defineNewBaseline</con:operation><con:request name="defineNewBaseline Invalid PIS Base Version"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>${#Project#DATAPACKAGE-BaselineCreationDate}</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>${#Project#DATAPACKAGE-BaselineDescription}</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>${#Project#DATAPACKAGE-LMTVersion}</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>${#Project#DEGRADED-DATAPACKAGE-InvalidPISBaseVersion}</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>${#Project#DATAPACKAGE-PisInfotainmentVersion}</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>${#Project#DATAPACKAGE-PISMissionVersion}</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="99716584-3fb3-4329-9baa-52b768ec0c18"/><con:assertion type="SOAP Response" name="SOAP Response" id="1e00c478-165f-4470-80ec-27e330b8c8b5"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="47091785-ee0e-4cfa-a8c2-e327d161d084"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="3e6520ec-aa88-4904-b31b-eca71e0f7b83"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_PIS_BASE_DATA_PACKAGE_VERSION</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="defineNewBaseline Invalid PIS Mission Version" id="9de184b3-49cd-4c12-b0a7-1feb572870c2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>defineNewBaseline</con:operation><con:request name="defineNewBaseline Invalid PIS Mission Version"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>${#Project#DATAPACKAGE-BaselineCreationDate}</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>${#Project#DATAPACKAGE-BaselineDescription}</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>${#Project#DATAPACKAGE-LMTVersion}</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>${#Project#DATAPACKAGE-PISBaseVersion}</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>${#Project#DATAPACKAGE-PisInfotainmentVersion}</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>${#Project#DEGRADED-DATAPACKAGE-InvalidPISMissionVersion}</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="067a6ca8-52cc-4067-82bc-c59e0589a2be"/><con:assertion type="SOAP Response" name="SOAP Response" id="76d6c676-f883-4501-a950-bba75756ae2c"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="485570b6-0652-431d-b1de-6068870c0d65"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="938611b6-fb4b-433d-8377-1155eaedb1f0"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_PIS_MISSION_DATA_PACKAGE_VERSION</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="defineNewBaseline Invalid LMT Version" id="84f5d11e-f7fe-47e6-a264-3264b906c6b7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>defineNewBaseline</con:operation><con:request name="defineNewBaseline Invalid LMT Version"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>${#Project#DATAPACKAGE-BaselineCreationDate}</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>${#Project#DATAPACKAGE-BaselineDescription}</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>${#Project#DEGRADED-DATAPACKAGE-InvalidLMTVersion}</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>${#Project#DATAPACKAGE-PISBaseVersion}</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>${#Project#DATAPACKAGE-PisInfotainmentVersion}</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>${#Project#DATAPACKAGE-PISMissionVersion}</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d2e57acb-49b8-4920-a083-6892dcbf98cc"/><con:assertion type="SOAP Response" name="SOAP Response" id="8e278ab5-01ee-4a9d-b363-beb7596dd7ff"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b453b937-ecef-4b71-bc3b-1883b2897065"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="11a504fb-08eb-4753-b2a4-6a1d651c2269"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_LMT_DATA_PACKAGE_VERSION</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="defineNewBaseline Invalid Infotainment Version" id="076d89a2-c5db-4421-80fc-2f65de196e98"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>defineNewBaseline</con:operation><con:request name="defineNewBaseline Invalid Infotainment Version"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>${#Project#DATAPACKAGE-BaselineCreationDate}</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>${#Project#DATAPACKAGE-BaselineDescription}</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>${#Project#DATAPACKAGE-LMTVersion}</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>${#Project#DATAPACKAGE-PISBaseVersion}</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>${#Project#DEGRADED-DATAPACKAGE-InvalidInfotainmentVersion}</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>${#Project#DATAPACKAGE-PISMissionVersion}</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="206384ea-c78c-4e9b-b621-a15c5f244965"/><con:assertion type="SOAP Response" name="SOAP Response" id="2f797d92-0a06-4d32-8337-1eb88f1d63ac"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="142a8e37-4f39-4203-9944-ee71d2de91dd"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="041fab4a-fb4b-4100-9049-9da249f6050f"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_PIS_INFOTAINMENT_DATA_PACKAGE_VERSION</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop RemoteDataStoreService" id="8428c68d-a2ea-40c8-bdcd-e56c8de5032a" disabled="true"><con:description>Stop RemoteDatastore service on PIS Ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="defineNewBaseline RemoteDataStoreNotAccessible" id="e6ace127-8d1d-4e59-9f3c-8b0b533f08b0" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>defineNewBaseline</con:operation><con:request name="defineNewBaseline RemoteDataStoreNotAccessible"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:defineNewBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pBLDef>
            <!--Optional:-->
            <dat:BaselineCreationDate>${#Project#DATAPACKAGE-BaselineCreationDate}</dat:BaselineCreationDate>
            <!--Optional:-->
            <dat:BaselineDescription>${#Project#DATAPACKAGE-BaselineDescription}</dat:BaselineDescription>
            <!--Optional:-->
            <dat:BaselineVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:BaselineVersion>
            <!--Optional:-->
            <dat:LMTDataPackageVersion>${#Project#DATAPACKAGE-LMTVersion}</dat:LMTDataPackageVersion>
            <!--Optional:-->
            <dat:PISBaseDataPackageVersion>${#Project#DATAPACKAGE-PISBaseVersion}</dat:PISBaseDataPackageVersion>
            <!--Optional:-->
            <dat:PISInfotainmentDataPackageVersion>${#Project#DATAPACKAGE-PisInfotainmentVersion}</dat:PISInfotainmentDataPackageVersion>
            <!--Optional:-->
            <dat:PISMissionDataPackageVersion>${#Project#DATAPACKAGE-PISMissionVersion}</dat:PISMissionDataPackageVersion>
         </dat:pBLDef>
      </dat:defineNewBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c6e5df86-c7e1-4898-8af2-ba69b1d12c73"/><con:assertion type="SOAP Response" name="SOAP Response" id="e9107a25-eed8-4dcc-93ee-0e1cdc433d27"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="0a7434d1-b157-48e9-a421-2ec077b7e650"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="fd21ee5d-d5cb-4f54-81c0-635a929dbdd4"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:defineNewBaselineResponse[1]/ns1:defineNewBaselineResult[1]/ns1:error_code[1]/text()</path><content>REMOTEDATASTORE_NOT_ACCESSIBLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/defineNewBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Restart remoteDataStore service" id="d3aeec34-2d00-45b5-90ca-442dae42f4d0" disabled="true"><con:description>Restart remoteDataStore service</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties><con:property><con:name>RequestId</con:name><con:value>b30e08da-bc6c-422d-aa4e-dea40d25e368</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A9-1 -- getBaselinesList TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2965ee35-9489-4a86-8399-6ed6c6d21547"><con:description>Test the function that allows the GroundApp to request from the ground PIS to get the list of predefined baselines. 
The predefined baselines list is maintained by the ground PIS and stored in the ground PIS data store.

The request is sent with valid informations.

Expected result : PIS shall return the baseline list.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0101],  [RefSol_PIS2G_GroundApp_SyID_0102], [RefSol_PIS2G_GroundApp_SyID_0103]</con:description><con:settings/><con:testStep type="request" name="getBaselinesList" id="3d9382f6-eec1-42f4-af45-8447ca34d543"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>getBaselinesList</con:operation><con:request name="getBaselinesList"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getBaselinesList>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pListType>${#Project#DATAPACKAGE-BaselinesListType}</dat:pListType>
      </dat:getBaselinesList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="8c2576d0-0f29-4864-8bec-3280c6f9ed50"/><con:assertion type="SOAP Response" name="SOAP Response" id="403524e4-e9e4-4da2-847d-0eb5eb800e6b"/><con:assertion type="XPath Match" name="Match content of [a:error_code]" id="4e319464-7524-4b73-b1ca-24880532a3c0"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
declare namespace a='http://alstom.com/pacis/pis/ground/datapackage';
//ns1:getBaselinesListResponse[1]/ns1:getBaselinesListResult[1]/a:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="25fd32d5-16f3-4fd7-925c-323bdb71e91e"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/datapackage';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//ns1:getBaselinesListResponse[1]/ns1:getBaselinesListResult[1]/a:baselineDef[1]/ns1:BaselineDefinition[1]/ns1:BaselineVersion[1]/text()</path><content>2.1.1.63</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getBaselinesList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A9-2 -- getBaselinesList Error management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6f63770c-6fa3-4812-b8af-34515b2bce52"><con:description>Test the function that allows the GroundApp to request from the ground PIS to get the list of predefined baselines. 
The predefined baselines list is maintained by the ground PIS and stored in the ground PIS data store.

The request is sent with a bad session ID.

Expected result : PIS shall return an error.</con:description><con:settings/><con:testStep type="request" name="getBaselinesList Bad Session ID" id="bbabffa9-85a2-42ab-804f-837abafcf4f8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>getBaselinesList</con:operation><con:request name="getBaselinesList Bad Session ID"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getBaselinesList>
         <!--Optional:-->
         <dat:pSessionId>${#Project#DEGRADED-GEN-BadSessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pListType>${#Project#DATAPACKAGE-BaselinesListType}</dat:pListType>
      </dat:getBaselinesList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="4e4c7528-bfd4-4d03-abd7-461cca0d8dd3"/><con:assertion type="SOAP Response" name="SOAP Response" id="f827576f-0ac9-44eb-9c49-f5b711b611ab"/><con:assertion type="XPath Match" name="Match content of [a:error_code]" id="88ea1841-a063-4f2a-b3e8-47b737647781"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
declare namespace a='http://alstom.com/pacis/pis/ground/datapackage';
//ns1:getBaselinesListResponse[1]/ns1:getBaselinesListResult[1]/a:error_code[1]/text()</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getBaselinesList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A13-2 -- assignCurrentBaselineToElement with missing package in Baseline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1d95c615-44c2-4dcd-b5f6-493a40705671"><con:description>Test the function that allows the GroundApp to request from the ground PIS to assign a baseline to an element as the current baseline.
 The selected baseline will be assigned as a current baseline.

The request is sent for a baseline with one or more data packages  not existing in the ground PIS data store.

Expected result : PIS shall return Request ID, send "processing" and "completed" status.
                            PIS shall notify the GroundApp by providing the list of missing data packages

Requirements : 
[RefSol_PIS2G_GroundApp_SyID_0159], [RefSol_PIS2G_GroundApp_SyID_0160],
[RefSol_PIS2G_GroundApp_SyID_0161], [RefSol_PIS2G_GroundApp_SyID_0163]

Requirements update baseline assignment status :
[RefSol_PIS2G_GroundApp_SyID_0109], [RefSol_PIS2G_GroundApp_SyID_0110], 
[RefSol_PIS2G_GroundApp_SyID_0111], [RefSol_PIS2G_GroundApp_SyID_0112]

Requirements Missing data package notification
[RefSol_PIS2G_GroundApp_SyID_0099], [RefSol_PIS2G_GroundApp_SyID_0100]
</con:description><con:settings/><con:testStep type="request" name="assignCurrentBaselineToElement Missing Package(s) in Baseline" id="c770cc1c-3bf7-47d3-9e50-42da6302c7de"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignCurrentBaselineToElement</con:operation><con:request name="assignCurrentBaselineToElement Missing Package(s) in Baseline"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignCurrentBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DEGRADED-DATAPACKAGE-IncompleteBaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignCurrentBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="67f03adb-b5e3-4fac-bf58-8dd36f26a6fc"/><con:assertion type="SOAP Response" name="SOAP Response" id="284acc25-982f-44e4-b1e1-f25fc56d3288"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="fa1188bb-22c2-40c1-9829-c6468e23a313"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="60ce1c50-76db-4f32-a82b-8b52f8f59f71"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>assignCurrentBaselineToElement Missing Package(s) in Baseline</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignCurrentBaselineToElementResponse[1]/ns1:assignCurrentBaselineToElementResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="0cc3fada-587c-45d8-9af6-e382859cadcb"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineAssignmentStatusProcessing
- MissingDataPackage
- UpdateBaselineAssignmentStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="984337e5-c3ce-4f7e-9805-9cb73fa2a012"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineAssignmentProcessing",
					  "DataPackageMissing",
					  "DataPackageBaselineAssignmentCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>06d186ef-9f22-48c0-afac-0abccc463a45</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A13-3 -- assignCurrentBaselineToElement when baseline is missing TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f66c33a9-9d61-4d0f-8b5f-e5a8a7a1b28c"><con:description>Test the function that allows the GroundApp to request from the ground PIS to assign a baseline to an element as the current baseline.
 The selected baseline will be assigned as a current baseline.

The request is sent for a baseline not in the ground PIS data store.

Expected result : PIS shall return Request ID, send "processing" and "failed" status.

Requirements : 
[RefSol_PIS2G_GroundApp_SyID_0159], [RefSol_PIS2G_GroundApp_SyID_0160], 
[RefSol_PIS2G_GroundApp_SyID_0161], [RefSol_PIS2G_GroundApp_SyID_0162]

Requirements update baseline assignment status :
[RefSol_PIS2G_GroundApp_SyID_0109], [RefSol_PIS2G_GroundApp_SyID_0110], 
[RefSol_PIS2G_GroundApp_SyID_0111], [RefSol_PIS2G_GroundApp_SyID_0112]
</con:description><con:settings/><con:testStep type="request" name="assignCurrentBaselineToElement Missing Baseline" id="26481205-f80d-4f65-8bf3-4081f0a938a3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignCurrentBaselineToElement</con:operation><con:request name="assignCurrentBaselineToElement Missing Baseline"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignCurrentBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DEGRADED-DATAPACKAGE-MissingBaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignCurrentBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="87c96eac-cb9c-43a9-a6ca-7d3977de292c"/><con:assertion type="SOAP Response" name="SOAP Response" id="b9c498ff-44a7-4653-bf10-7658d7b0458a"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="1330d2ff-ef7a-4355-8318-6620d5985bfa"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="3f43799d-d99c-40ba-be47-e8177d1af882"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>assignCurrentBaselineToElement Missing Baseline</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignCurrentBaselineToElementResponse[1]/ns1:assignCurrentBaselineToElementResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="8a470aa9-f662-4c5a-b624-8b471c0bf6b0"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineAssignmentStatusProcessing
- UpdateBaselineAssignmentStatusFailed
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="01abe380-ed2c-419f-a9af-199c084e81a4"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineAssignmentProcessing",
					  "DataPackageBaselineAssignmentFailed"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>1f88f14b-1698-4d43-a393-ff386fa81683</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A13-4 -- assignCurrentBaselineToElement Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="204f6478-1dcf-4053-8be0-b1379b3b1542"><con:description>Test the function that allows the GroundApp to request from the ground PIS to assign a baseline to an element as the current baseline.
 The selected baseline will be assigned as a current baseline.

The request is sent with invalid informations.

Expected result : PIS shall return an error

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0316]
</con:description><con:settings/><con:testStep type="request" name="assignCurrentBaselineToElement BadSessionID" id="e47a8829-f020-4a78-94bc-6cbc8d097ba2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignCurrentBaselineToElement</con:operation><con:request name="assignCurrentBaselineToElement BadSessionID"><con:description>Invalid session ID is sent. Expected Result : Baseline shall return "Bad Session ID" error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignCurrentBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#DEGRADED-GEN-BadSessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignCurrentBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ac8b9eac-2b2b-44c1-9700-06f0c9809f7b"/><con:assertion type="SOAP Response" name="SOAP Response" id="5670c849-5738-4a2e-935d-0d50f01fb54e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ee48209c-25e2-4884-b42a-96e7c96066e6"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="assignCurrentBaselineToElement Unknown Element Number" id="e8fd7539-e928-43e1-8875-1e3fbb0f05ba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignCurrentBaselineToElement</con:operation><con:request name="assignCurrentBaselineToElement Unknown Element Number"><con:description> Element alpha number is invalid. Expected Result : PIS shall return unknown element number error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignCurrentBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#DEGRADED-GEN-UnknownElementNumber}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignCurrentBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a58a26b1-791b-487f-956d-eda3c239102e"/><con:assertion type="SOAP Response" name="SOAP Response" id="25c79216-a771-4c5a-a5f0-18f5e5d622c3"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="05af57ab-8a05-4102-a035-190b5d9418de"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="assignCurrentBaselineToElement Invalid Baseline Version" id="cc24998b-51c8-42d5-bc84-4caa8385bbfa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignCurrentBaselineToElement</con:operation><con:request name="assignCurrentBaselineToElement Invalid Baseline Version"><con:description>Baseline version is invalid. Expected Result : PIS shall return invalid baseline version error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignCurrentBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DEGRADED-DATAPACKAGE-InvalidBaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignCurrentBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2781c7d8-9460-41aa-9d05-e72164346bb1"/><con:assertion type="SOAP Response" name="SOAP Response" id="52d91802-e808-45b6-9043-80c4cbabcad2"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="3dcd7908-51d4-4576-be0f-f06baba3142b"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="assignCurrentBaselineToElement Invalid Expiration Date &amp; Time" id="4b9a46e2-95ad-4b8d-8d0c-373e606e4021"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignCurrentBaselineToElement</con:operation><con:request name="assignCurrentBaselineToElement Invalid Expiration Date &amp; Time"><con:description>Expiration Date &amp; Time is invalid. Expected Result : PIS shall return invalid Expiration Date &amp; Time error [RefSol_PIS2G_GroundApp_SyID_0161]</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignCurrentBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DEGRADED-DATAPACKAGE-InvalidExpirationDateTime}</dat:pExpDate>
      </dat:assignCurrentBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="2465d9b3-1e5a-41f0-8584-86adaee8c78e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="6e3249ce-803e-4143-bb79-3623f156018a"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault" id="4539650d-4107-417d-afae-02921e99e7b3"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="assignCurrentBaselineToElement Incoherent Expiration Date &amp; Time" id="4035ba75-8983-4404-a2cd-da281fb41271"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignCurrentBaselineToElement</con:operation><con:request name="assignCurrentBaselineToElement Incoherent Expiration Date &amp; Time"><con:description>Expiration Date &amp; Time is incoherent. Expected Result : PIS shall return Incoherent Expiration Date &amp; Time error [RefSol_PIS2G_GroundApp_SyID_0161]</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignCurrentBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DEGRADED-DATAPACKAGE-IncoherentExpirationDateTime}</dat:pExpDate>
      </dat:assignCurrentBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a74d2328-8edd-4b9d-b1f9-440b55346f00"/><con:assertion type="SOAP Response" name="SOAP Response" id="bb7931a2-8663-4824-8906-71767255e543"/><con:assertion type="XPath Match" name="Match content of [error_code]" id="3a1e1241-581a-4e02-ad90-6c54c6911de3"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignCurrentBaselineToElementResponse[1]/ns1:assignCurrentBaselineToElementResult[1]/ns1:error_code[1]/text()</path><content>INVALID_EXPIRATION_DATEANDTIME</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>RequestId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A13-1 -- assignCurrentBaselineToElement TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f382ef59-304d-4c03-a59b-695ecc7e7f15"><con:description>Test the function that allows the GroundApp to request from the ground PIS to assign a baseline to an element as the current baseline.
 The selected baseline will be assigned as a current baseline

The request is sent for an existing and complete baseline.

Expected result : PIS shall return Request ID, send "processing" and "completed" status.

Requirements : 
[RefSol_PIS2G_GroundApp_SyID_0159],  [RefSol_PIS2G_GroundApp_SyID_0160],
[RefSol_PIS2G_GroundApp_SyID_0161], 

Requirements update baseline assignment status :
[RefSol_PIS2G_GroundApp_SyID_0109], [RefSol_PIS2G_GroundApp_SyID_0110], 
[RefSol_PIS2G_GroundApp_SyID_0111], [RefSol_PIS2G_GroundApp_SyID_0112]</con:description><con:settings/><con:testStep type="request" name="assignCurrentBaselineToElement Baseline Exist &amp; Complete" id="4eac00c6-015e-415c-8029-b74cc5239205"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignCurrentBaselineToElement</con:operation><con:request name="assignCurrentBaselineToElement Baseline Exist &amp; Complete"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignCurrentBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignCurrentBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="6c61fbf3-1a51-4563-8b78-bae6205b9088"/><con:assertion type="SOAP Response" name="SOAP Response" id="edaa574e-2411-4472-9a3b-758d24050225"/><con:assertion type="XPath Match" name="Match content of [error_code]" id="0972df27-0242-4dbf-a515-3d0bf13798e0"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignCurrentBaselineToElementResponse[1]/ns1:assignCurrentBaselineToElementResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignCurrentBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="d0bbe992-f6d0-4c47-a27e-26c662c670d9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>assignCurrentBaselineToElement Baseline Exist &amp; Complete</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignCurrentBaselineToElementResponse[1]/ns1:assignCurrentBaselineToElementResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="e09f5c00-946f-44c9-a150-57fe06f09c3a"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineAssignmentStatusProcessing
- UpdateBaselineAssignmentStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e4d3cd53-eee7-4aa9-bb99-15a8728de1c4"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineAssignmentProcessing",
					  "DataPackageBaselineAssignmentCompleted"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>ef10a112-6bee-4609-b5e4-c32b06f001c9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A12-2 -- assignFutureBaselineToElement with missing package in Baseline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1bb54e01-7ff1-4ec6-93ee-434c55e8ce0c"><con:description>Tests the function thatallows the GroundApp to request from the ground PIS to assign a baseline to an element as the future baseline.
 The selected baseline will be assigned as a future baseline.

The request is sent for a baseline with one or more data packages  not existing in the ground PIS data store.

Expected result : PIS shall return Request ID, send "processing" and "completed" status.
                            PIS shall notify the GroundApp by providing the list of missing data packages

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0104], [RefSol_PIS2G_GroundApp_SyID_0105],
[RefSol_PIS2G_GroundApp_SyID_0106], [RefSol_PIS2G_GroundApp_SyID_0108]

Requirements update baseline assignment status :
[RefSol_PIS2G_GroundApp_SyID_0109], [RefSol_PIS2G_GroundApp_SyID_0110], 
[RefSol_PIS2G_GroundApp_SyID_0111], [RefSol_PIS2G_GroundApp_SyID_0112]

Requirements Missing data package notification
[RefSol_PIS2G_GroundApp_SyID_0099], [RefSol_PIS2G_GroundApp_SyID_0100]</con:description><con:settings/><con:testStep type="request" name="assignFutureBaselineToElement Missing Package(s) in Baseline" id="b4c84e8e-19e6-4353-a391-f83511220df5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Missing Package(s) in Baseline"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DEGRADED-DATAPACKAGE-IncompleteBaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DATAPACKAGE-ActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="87c4da40-caca-4c0a-9b96-f636035a099d"/><con:assertion type="SOAP Response" name="SOAP Response" id="2d91ac5c-b576-4cc1-822b-cdb0b01d3e26"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="307209bb-ab7f-4ac9-9db0-6083e4a0c05a"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="adba4c2c-c8ed-4220-818f-ba693c3045a5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>assignFutureBaselineToElement Missing Package(s) in Baseline</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="c890b404-e597-40c7-9711-168141e0aeae"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineAssignmentStatusProcessing
- MissingDataPackage
- UpdateBaselineAssignmentStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e88f5100-c0ea-44ee-a524-0090c655adec"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineAssignmentProcessing",
					  "DataPackageMissing",
					  "DataPackageBaselineAssignmentCompleted"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>7ec98b25-0666-4b9e-b16b-a2ec279d8d61</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A12-3 -- assignFutureBaselineToElement when Baseline is missing TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fe9c0b6c-3431-4db2-a952-0bee52803da7"><con:description>Tests the function thatallows the GroundApp to request from the ground PIS to assign a baseline to an element as the future baseline.
 The selected baseline will be assigned as a future baseline.

The request is sent for a baseline not in the ground PIS data store.

Expected result : PIS shall return Request ID, send "processing" and "failed" status.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0104], [RefSol_PIS2G_GroundApp_SyID_0105], 
[RefSol_PIS2G_GroundApp_SyID_0106], [RefSol_PIS2G_GroundApp_SyID_0107]

Requirements update baseline assignment status :
[RefSol_PIS2G_GroundApp_SyID_0109], [RefSol_PIS2G_GroundApp_SyID_0110], 
[RefSol_PIS2G_GroundApp_SyID_0111], [RefSol_PIS2G_GroundApp_SyID_0112]</con:description><con:settings/><con:testStep type="request" name="assignFutureBaselineToElement Missing Baseline" id="b6407ca6-0321-4ad9-a99a-9cc291ec3505"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Missing Baseline"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DEGRADED-DATAPACKAGE-MissingBaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DATAPACKAGE-ActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f7d1df78-e608-45cc-84aa-54d30a78e2d7"/><con:assertion type="SOAP Response" name="SOAP Response" id="95233764-49bb-457e-bec5-acbc2732da38"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="be57c17d-91ec-4187-bc62-8cbf89cfc8ec"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="fde9612a-f33b-4dd3-842d-e6a036ebfa2a"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="c902f671-558f-4c45-8e22-8e04c56f1bb5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>assignFutureBaselineToElement Missing Baseline</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="e7fc4f32-e63e-41ed-9aef-96e9606c632d"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineAssignmentStatusProcessing
- UpdateBaselineAssignmentStatusFailed
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="2ec12030-e90a-4a24-ae42-6270f27f4a34"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineAssignmentProcessing",
					  "DataPackageBaselineAssignmentFailed"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>c5d6ec69-94ad-4915-b91e-5e7586689e8c</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A12-4 -- assignFutureBaselineToElement Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f512f0ee-fff4-4675-baa9-779c42b95571"><con:description>Tests the function that allows the GroundApp to request from the ground PIS to assign a baseline to an element as the future baseline.
 The selected baseline will be assigned as a future baseline.

The request is sent with invalid informations.

Expected result : PIS shall return an error

Requirements ;
[RefSol_PIS2G_GroundApp_SyID_0315]</con:description><con:settings/><con:testStep type="request" name="assignFutureBaselineToElement Bad Session ID" id="d4a593d2-9a5a-454f-b7f5-a53cd7d76392"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Bad Session ID"><con:description>Invalid session ID is sent. Expected Result : Baseline shall return "Bad Session ID" error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#DEGRADED-GEN-BadSessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DATAPACKAGE-ActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b34e76eb-5127-444a-8985-1419f124f47b"/><con:assertion type="SOAP Response" name="SOAP Response" id="177caac4-b846-472b-a398-a4c2e5d2ad58"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="1c890acf-5cf9-4fae-bac6-2bcdd8ae2d19"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="8e141d06-e777-4414-8a03-e5ecfd7da23c"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:error_code[1]/text()</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="assignFutureBaselineToElement Unknown Element Number" id="5fa4a1ed-e093-42fd-aefe-1ada193b1d37"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Unknown Element Number"><con:description> Element alpha number is invalid. Expected Result : PIS shall return unknown element number error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#DEGRADED-GEN-UnknownElementNumber}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DATAPACKAGE-ActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="55b81b32-4295-487d-8084-7812dd233769"/><con:assertion type="SOAP Response" name="SOAP Response" id="73a12d1e-ee03-45e4-b404-87f32b221ceb"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="63628bd0-1312-46da-9c4a-ef4e62b9a5a3"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="1eb1ace3-cdb2-4aed-bd27-41370b43ef3a"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:error_code[1]/text()</path><content>ELEMENT_ID_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="assignFutureBaselineToElement Invalid Baseline Version" id="bf330a4c-71b5-4e6c-86f7-0ded09e1ba83"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Invalid Baseline Version"><con:description>Baseline version is invalid. Expected Result : PIS shall return invalid baseline version error [RefSol_PIS2G_GroundApp_SyID_0106]</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DEGRADED-DATAPACKAGE-InvalidBaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DATAPACKAGE-ActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="366fc5f0-8e7b-41eb-9617-e497d8b89e80"/><con:assertion type="SOAP Response" name="SOAP Response" id="73a906c9-7a0c-428f-9259-53220d5f5786"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="94fff4a1-7386-42dc-8add-e80aa8f0626e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="0313fd1b-dbed-42d8-bf52-2a4c7c5e004d"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:error_code[1]/text()</path><content>INVALID_BASELINE_VERSION</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="assignFutureBaselineToElement Invalid Activation Date &amp; Time" id="1dd8ab13-28fa-4871-86a6-e2251b01ae70"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Invalid Activation Date &amp; Time"><con:description>Activation Date &amp; Time is invalid. Expected Result : PIS shall return invalid Activation Date &amp; Time error [RefSol_PIS2G_GroundApp_SyID_0106]</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DEGRADED-DATAPACKAGE-InvalidActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="3ffc1cf3-af4e-4691-b1e8-97ed76d15866"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="421887f5-ed3a-4286-83ef-74d5eadee9cd"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault" id="0e736bb6-4219-436f-afee-864016668dea"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="assignFutureBaselineToElement Invalid Expiration Date &amp; Time" id="78292dd1-aee7-4ee6-8205-3208a9c50d8b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Invalid Expiration Date &amp; Time"><con:description>Expiration Date &amp; Time is invalid. Expected Result : PIS shall return invalid Expiration Date &amp; Time error [RefSol_PIS2G_GroundApp_SyID_0106]</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DATAPACKAGE-ActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DEGRADED-DATAPACKAGE-InvalidExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="f6381f83-3bf7-45b2-870d-cac6751a0bd8"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="8d2b1e75-8ac9-4581-b6c8-14cc7324ac25"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault" id="95b00f5b-c424-4441-99a7-f619f1e3ede4"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="assignFutureBaselineToElement Incoherent Expiration Date &amp; Time" id="f01a1809-162a-4afe-a18a-d472b9e64a91"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Incoherent Expiration Date &amp; Time"><con:description>Expiration Date &amp; Time is incoherent. Expected Result : PIS shall return Incoherent Expiration Date &amp; Time error [RefSol_PIS2G_GroundApp_SyID_0106]</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DATAPACKAGE-ActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DEGRADED-DATAPACKAGE-IncoherentExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="3618b971-12d8-40c7-99ba-79937a3888ea"/><con:assertion type="SOAP Response" name="SOAP Response" id="9e3a8dfd-c047-48e9-ba98-c5b6ab06e32f"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4e8037bb-871f-4129-9aa3-fa17bba72c1f"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="573867a4-e3cc-4866-af54-c9d069254c12"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:error_code[1]/text()</path><content>INVALID_EXPIRATION_DATEANDTIME</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>RequestId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A12-1 -- assignFutureBaselineToElement TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f0c3f04c-6997-4a84-bc64-c1e6b85b3b71"><con:description>Tests the function thatallows the GroundApp to request from the ground PIS to assign a baseline to an element as the future baseline.
 The selected baseline will be assigned as a future baseline.

The request is sent for an existing and complete baseline.

Expected result : PIS shall return Request ID, send "processing" and "completed" status.


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0104], [RefSol_PIS2G_GroundApp_SyID_0105],
[RefSol_PIS2G_GroundApp_SyID_0106], 

Requirements update baseline assignment status :
[RefSol_PIS2G_GroundApp_SyID_0109], [RefSol_PIS2G_GroundApp_SyID_0110], 
[RefSol_PIS2G_GroundApp_SyID_0111], [RefSol_PIS2G_GroundApp_SyID_0112]</con:description><con:settings/><con:testStep type="request" name="assignFutureBaselineToElement Baseline Exist &amp; Complete" id="0e721180-5fb4-45a8-8d1e-92809f59d925"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Baseline Exist &amp; Complete"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement><!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DATAPACKAGE-ActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="202a41f3-0d01-492a-8727-d53f91292943"/><con:assertion type="SOAP Response" name="SOAP Response" id="deebfd95-08af-4d86-a451-01df234723a5"/><con:assertion type="XPath Match" name="Match content of [error_code]" id="4358b506-03d4-4974-8d14-44cbae02001d"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="57baf22a-80f8-4602-998c-98bc5e78d9fd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>assignFutureBaselineToElement Baseline Exist &amp; Complete</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="836202e7-a62e-4b0c-a4bd-fc48ea442413"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineAssignmentStatusProcessing
- UpdateBaselineAssignmentStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="0c5913ba-0fe5-4a8d-8d65-80cac79e89c6"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineAssignmentProcessing",
					  "DataPackageBaselineAssignmentCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>dfa3f1ff-0442-4e12-bb44-50c8584daf0e</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A11-1 -- getAddresseesDataPackagesBaselines for Element Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4d600375-704c-4047-a847-803b3e0e2b7e"><con:description>Test the function that allows the GroundApp to request from the PIS to provide the data packages baselines of an addressee.

The request is sent to an Element Alpha Number.

Expected result : PIS shal return the datapackage set of the element.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0077],  [RefSol_PIS2G_GroundApp_SyID_0078]</con:description><con:settings/><con:testStep type="request" name="getAddresseesDataPackagesBaselines Element Number" id="cfe82761-ab5d-4106-a2a1-f91ebaf190aa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>getAddresseesDataPackagesBaselines</con:operation><con:request name="getAddresseesDataPackagesBaselines Element Number"><con:description>Addressee is identified by Element alpha number. Expected Result :The PIS shall send the list of elements data packages baseline set</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getAddresseesDataPackagesBaselines><!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
      </dat:getAddresseesDataPackagesBaselines>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0faf4dd5-f6c8-45e1-a449-db7dbf0e5f51"/><con:assertion type="SOAP Response" name="SOAP Response" id="840adfff-c66c-4210-b9f6-8535b0e09db6"/><con:assertion type="XPath Match" name="Match content of [error_code]" id="aeec5987-27ae-47b1-9ebd-148552eb997d"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:getAddresseesDataPackagesBaselinesResponse[1]/ns1:getAddresseesDataPackagesBaselinesResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ElementID]" id="d0b48527-6ffe-4cfa-9075-3f9ab2bd8cad"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:getAddresseesDataPackagesBaselinesResponse[1]/ns1:getAddresseesDataPackagesBaselinesResult[1]/ns1:ElementDesc[1]/ns1:ElementDescription[1]/ns1:ElementID[1]/text()</path><content>${#Project#-GEN-AddresseeElementNb}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselines" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response" id="43934192-57e7-4382-85c1-f5726531d884" disabled="true"><con:description>Check Baseline List in response </con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A11-2 -- getAddresseesDataPackagesBaselines for Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ff8c9bb8-0442-4020-8407-1731d752ba7c" disabled="true"><con:description>Test the function that allows the GroundApp to request from the PIS to provide the data packages baselines of an addressee.


The request is sent to Mission Commercial Number.

Expected result : PIS shal return the datapackage sets of each element running the mission.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0077],  [RefSol_PIS2G_GroundApp_SyID_0078]</con:description><con:settings/><con:testStep type="request" name="getAddresseesDataPackagesBaselines Mission Commercial Number" id="25ebcc54-eb0a-467a-b5a5-f79d3f8ac8e8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>getAddresseesDataPackagesBaselines</con:operation><con:request name="getAddresseesDataPackagesBaselines Mission Commercial Number"><con:description>Addressee is identified by mission commercial number. Expected Result :The PIS shall send the list of elements data packages baseline set</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getAddresseesDataPackagesBaselines>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </dat:pTargetAddress>
      </dat:getAddresseesDataPackagesBaselines>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a379458e-5054-48d9-9d77-21631b26769d"/><con:assertion type="SOAP Response" name="SOAP Response" id="c69d3654-d7af-47cf-b0c7-5c25a0fee7c1"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a3e487ab-a27f-428b-a53f-d58a8e9ef1c3"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="21143dac-5e24-42c9-94ce-9a2fe31fb874"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:getAddresseesDataPackagesBaselinesResponse[1]/ns1:getAddresseesDataPackagesBaselinesResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselines" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response" id="6e28bad3-927a-4cef-952d-dd5aaa56bdc0"><con:description>Check Baseline List in response </con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A11-3 -- getAddresseesDataPackagesBaselines for Mission Operator Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2ffa9907-4337-4316-85cd-b7a30eef8b47" disabled="true"><con:description>Test the function that allows the GroundApp to request from the PIS to provide the data packages baselines of an addressee.

The request is sent to Mission Operator Code.

Expected result : PIS shal return the datapackage sets of each element running the mission.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0077],  [RefSol_PIS2G_GroundApp_SyID_0078]</con:description><con:settings/><con:testStep type="request" name="getAddresseesDataPackagesBaselines Mission Operator Code" id="28570bbe-814b-4f1c-9cf8-023b414ab771"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>getAddresseesDataPackagesBaselines</con:operation><con:request name="getAddresseesDataPackagesBaselines Mission Operator Code"><con:description>Addressee is identified by mission operator code. Expected Result :The PIS shall send the list of elements data packages baseline set</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getAddresseesDataPackagesBaselines>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </dat:pTargetAddress>
      </dat:getAddresseesDataPackagesBaselines>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c1432db4-43a8-4a77-8768-827e871d4206"/><con:assertion type="SOAP Response" name="SOAP Response" id="86a1a67f-215a-47a6-a50e-16cefb6160e4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ea9c8197-9c41-4857-8b64-ed826b9a8937"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="61d6cced-a6a7-4159-9f1d-abcb32b0e881"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:getAddresseesDataPackagesBaselinesResponse[1]/ns1:getAddresseesDataPackagesBaselinesResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselines" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response" id="5961512d-5361-47a4-8e1c-b0b55cf0e547"><con:description>Check Baseline List in response </con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A11-4 -- getAddresseesDataPackagesBaselines Error management  TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="80a70719-3b19-4f72-bcdf-b86428582253"><con:description>Test the function that allows the GroundApp to request from the PIS to provide the data packages baselines of an addressee.

The request is sent with invalid informations.

Expected result : PIS shall return an error

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0314]

</con:description><con:settings/><con:testStep type="request" name="getAddresseesDataPackagesBaselines Bad Session ID" id="5effab66-d0d9-452c-8b01-2257ee7c3259"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>getAddresseesDataPackagesBaselines</con:operation><con:request name="getAddresseesDataPackagesBaselines Bad Session ID"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getAddresseesDataPackagesBaselines>
         <!--Optional:-->
         <dat:pSessionId>${#Project#DEGRADED-GEN-BadSessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
      </dat:getAddresseesDataPackagesBaselines>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="fcff0544-0ca9-4617-888f-22a05b660b58"/><con:assertion type="SOAP Response" name="SOAP Response" id="0097e600-78f3-41f5-bc01-cb5bb672e076"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="eb82ac38-f3d8-43a3-ae98-acf1aeefc0a0"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="939d2c6a-693a-47e6-8f58-7cbf4164c1e1"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:getAddresseesDataPackagesBaselinesResponse[1]/ns1:getAddresseesDataPackagesBaselinesResult[1]/ns1:error_code[1]/text()</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselines" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getAddresseesDataPackagesBaselines Unknown  Element ID" id="42f78c4a-a669-44d8-a29a-0a5aff035675"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>getAddresseesDataPackagesBaselines</con:operation><con:request name="getAddresseesDataPackagesBaselines Unknown  Element ID"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getAddresseesDataPackagesBaselines>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
      </dat:getAddresseesDataPackagesBaselines>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9382651c-068e-4199-b342-a8cfb0e4e74f"/><con:assertion type="SOAP Response" name="SOAP Response" id="3bc120f1-e539-4380-900e-edd5d576e678"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="5d3c38c0-65eb-4582-a725-7f817fdfeee4"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="d368125b-0c16-4455-8df8-86c3a5bf0635"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:getAddresseesDataPackagesBaselinesResponse[1]/ns1:getAddresseesDataPackagesBaselinesResult[1]/ns1:error_code[1]/text()</path><content>ELEMENT_ID_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselines" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getAddresseesDataPackagesBaselines Unknown Mission ID" id="a72a2eca-1580-4bd7-9b3b-8a6a251f02bf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>getAddresseesDataPackagesBaselines</con:operation><con:request name="getAddresseesDataPackagesBaselines Unknown Mission ID"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:getAddresseesDataPackagesBaselines>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownMissionID}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </dat:pTargetAddress>
      </dat:getAddresseesDataPackagesBaselines>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="34d53a31-ac6e-454f-874a-867aa6a7ac8f"/><con:assertion type="SOAP Response" name="SOAP Response" id="a6cae394-dfb7-44ee-b4b4-c05cb54f742e"/><con:assertion type="XPath Match" name="XPath Match" id="0beb79e4-078a-447c-932b-f50d5cc7bec7"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:getAddresseesDataPackagesBaselinesResponse[1]/ns1:getAddresseesDataPackagesBaselinesResult[1]/ns1:error_code[1]/text()</path><content>INVALID_MISSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/getAddresseesDataPackagesBaselines" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-2 -- distributeBaseline to Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c3db0bcd-f966-4f70-be37-e1703233d518" disabled="true"><con:description>Test the functionthat allows the GroundApp to request from the ground PIS to distribute the future baseline to an addressee. 
It is assumed that a future baseline was assigned to that element.

The request is sent to a Mission Commercial Number.

Expected Result :The PIS shall return the Request ID, send future baseline definition and status "processing", "transferring" then "transfer completed"

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0113], [RefSol_PIS2G_GroundApp_SyID_0114], 
[RefSol_PIS2G_GroundApp_SyID_0115], [RefSol_PIS2G_GroundApp_SyID_0116]

Requirements future baseline definition notification :
[RefSol_PIS2G_GroundApp_SyID_0119], [RefSol_PIS2G_GroundApp_SyID_0120]

Requirements update package distribution status :
[RefSol_PIS2G_GroundApp_SyID_0121],  [RefSol_PIS2G_GroundApp_SyID_0122], 
[RefSol_PIS2G_GroundApp_SyID_0123], [RefSol_PIS2G_GroundApp_SyID_0124]</con:description><con:settings/><con:testStep type="request" name="distributeBaseline Mission Commercial Number" id="934e64bc-585f-4cf4-89d5-3a70a71d1216"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Mission Commercial Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d3255b30-a336-4bf0-b165-b63c894efaeb"/><con:assertion type="SOAP Response" name="SOAP Response" id="837fcbdd-6b17-4c38-81e6-1e2c0ed11b1b"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="73d2158e-bb07-40c1-bdb1-f81a0903b68c"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="7a1d727f-9881-4f6d-b95e-40c8eeda61af"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="b4e9b33a-6d9e-4a8b-a39f-8cc884d845b5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Mission Commercial Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="2b5e67de-6e3b-45ac-8083-d3f0b6c40f2e"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be those notifications received:
"DataPackageDistributionProcessing",
"DataPackageFutureBaselineDefinition",
"DataPackageDistributionWaitingToTransfer",
"DataPackageDistributionTransferring",  
"DataPackageDistributionTransferred",
"DataPackageDistributionTransferred"
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="baf8e5c8-9ecb-42b3-a1f9-9f6cd795fcc7" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageDistributionProcessing", false],
                          ["DataPackageFutureBaselineDefinition", false],
                          ["DataPackageDistributionWaitingToTransfer", true],
                          ["DataPackageDistributionTransferring", true],
                          ["DataPackageDistributionTransferred", false],
                          ["DataPackageDistributionTransferred", true]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 600)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	//mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>9457cae1-c412-455e-bafe-82876596bf9c</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-3 -- distributeBaseline to Mission Code Operator TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a6ac1604-d98b-40cb-8562-03d8e753657c" disabled="true"><con:description>Test the functionthat allows the GroundApp to request from the ground PIS to distribute the future baseline to an addressee. 
It is assumed that a future baseline was assigned to that element.

The request is sent to  a Mission Operator Code.

Expected Result :The PIS shall return the Request ID, send future baseline definition and status "processing", "transferring" then "transfer completed"

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0113], [RefSol_PIS2G_GroundApp_SyID_0114], 
[RefSol_PIS2G_GroundApp_SyID_0115], [RefSol_PIS2G_GroundApp_SyID_0116]

Requirements future baseline definition notification :
[RefSol_PIS2G_GroundApp_SyID_0119], [RefSol_PIS2G_GroundApp_SyID_0120]

Requirements update package distribution status :
[RefSol_PIS2G_GroundApp_SyID_0121],  [RefSol_PIS2G_GroundApp_SyID_0122], 
[RefSol_PIS2G_GroundApp_SyID_0123], [RefSol_PIS2G_GroundApp_SyID_0124]</con:description><con:settings/><con:testStep type="request" name="distributeBaseline Mission Operator Code" id="0abbabbd-b8b5-493f-a697-ac2f1e8068c5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Mission Operator Code"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="180b1a03-d015-42e1-9668-5f5ffd7025b8"/><con:assertion type="SOAP Response" name="SOAP Response" id="deab6a5e-243a-48a6-9443-0de2b338f447"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="fe3255ff-f74d-493c-a69e-32efa5d34fbe"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="ece908d7-1ea4-4c18-8657-f05971131316"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="f9b3f9fa-8ce1-477f-a7b5-2bf15dda06c2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Mission Operator Code</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="4eae7d24-321a-4ab4-9ee2-00bed645bb2b"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be those notifications received:
"DataPackageDistributionProcessing",
"DataPackageFutureBaselineDefinition",
"DataPackageDistributionWaitingToTransfer",
"DataPackageDistributionTransferring",  
"DataPackageDistributionTransferred",
"DataPackageDistributionTransferred"
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="3b19bd5f-71fe-4dc6-baf0-26a419d5d9a9" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageDistributionProcessing", false],
                          ["DataPackageFutureBaselineDefinition", false],
                          ["DataPackageDistributionWaitingToTransfer", true],
                          ["DataPackageDistributionTransferring", true],
                          ["DataPackageDistributionTransferred", false],
                          ["DataPackageDistributionTransferred", true]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 600)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	//mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>c52d96c4-b11b-46e6-b8d5-d0bc1908bda5</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-4 -- distributeBaseline to Offline Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="bc305a06-9e4e-4bd3-9172-23574c9dd91b"><con:description>Test the functionthat allows the GroundApp to request from the ground PIS to distribute the future baseline to an addressee. 
It is assumed that a future baseline was assigned to that element.

The request is sent to an offline Element Alpha Number.

Expected Result :The PIS shall return the Request ID, send future baseline definition and status "processing" then "timed out"

Requirements ;
[RefSol_PIS2G_GroundApp_SyID_0113], [RefSol_PIS2G_GroundApp_SyID_0114], 
[RefSol_PIS2G_GroundApp_SyID_0115], [RefSol_PIS2G_GroundApp_SyID_0116], 
[RefSol_PIS2G_GroundApp_SyID_0118]

Requirements future baseline definition notification :
[RefSol_PIS2G_GroundApp_SyID_0119], [RefSol_PIS2G_GroundApp_SyID_0120]

Requirements update package distribution status :
[RefSol_PIS2G_GroundApp_SyID_0121], [RefSol_PIS2G_GroundApp_SyID_0122], 
[RefSol_PIS2G_GroundApp_SyID_0123], [RefSol_PIS2G_GroundApp_SyID_0124]
</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="e590a292-e96b-40b1-b9c0-e65c0bb92398"><con:description>Disconnect the train from the ground station and set the transfert expiration date in a near future</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="distributeBaseline Offline Element Number" id="add95e9a-0509-4992-a526-51b7ffac5cf0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Offline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="71f2c8a7-9e45-46b4-af40-4c9810d51bdb"/><con:assertion type="SOAP Response" name="SOAP Response" id="a64e2c16-0946-462b-9dde-51561eda94df"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="58387eea-71d4-400d-a092-762307ab3d42"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a9d57922-ca3c-40ec-9908-64869173ed1c"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="d1b7599a-49ff-476a-8119-af995483c214"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Offline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="d3327ae0-4abe-4d60-9895-3d8ffbccc13e"><con:description>Examine received notifications in NotificationAppGroundMockService
And wait for transfert expiration date</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdatePackageDistributionStatusProcessing
- FutureBaselineDefinition
- UpdatePackageDistributionStatusWaitingToTransfer
- UpdatePackageDistributionStatusTimedOut

</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="6de09ca7-f69c-4747-908e-ca459d24227e" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageDistributionProcessing", false],
                          ["DataPackageFutureBaselineDefinition", false],
                          ["DataPackageDistributionWaitingToTransfer", true],
                          ["DataPackageDistributionTimedOut", false]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 600)


</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
//	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>ef1a33e8-fb24-4551-8bd1-a8888954fcb2</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-5 -- distributeBaseline with No future baseline assigned TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="43b62cbc-3ff1-4693-bf05-6fccf83cd0a9"><con:description>Test the functionthat allows the GroundApp to request from the ground PIS to distribute the future baseline to an addressee. 
It is assumed that a future baseline was assigned to that element.

The request is sent to a Mission Commercial Number with no baseline assigned.

Expected Result :The PIS shall return the Request ID, send status "processing" then "failed"

Requirements ;
[RefSol_PIS2G_GroundApp_SyID_0113], [RefSol_PIS2G_GroundApp_SyID_0114],
 [RefSol_PIS2G_GroundApp_SyID_0115], [RefSol_PIS2G_GroundApp_SyID_0117]

Requirements update package distribution status :
[RefSol_PIS2G_GroundApp_SyID_0121], [RefSol_PIS2G_GroundApp_SyID_0122],
[RefSol_PIS2G_GroundApp_SyID_0123], [RefSol_PIS2G_GroundApp_SyID_0124]</con:description><con:settings/><con:testStep type="request" name="distributeBaseline Element No Future Baseline Assigned" id="59253b19-e99d-4b25-ad58-ca5b9a76ed3c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Element No Future Baseline Assigned"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="991b6a25-0a6b-48dc-824e-74476cdb2c5a"/><con:assertion type="SOAP Response" name="SOAP Response" id="50eb86e8-5963-4295-97ff-9ad46fa62999"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="765a1975-aec0-485c-be9b-bb4e7f0b4350"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="51a0c8f5-ecc9-48b4-b197-46ca0714bfc2"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_BASELINE_VERSION</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="888c228c-0a87-48ac-bd4e-78954ede919d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Element No Future Baseline Assigned</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="e67ec46b-2cb0-4e61-bc6a-3e8157764a46"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineDistributionStatusProcessing
- UpdateBaselineDistributionStatusFailed

</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="513fc54a-fa54-447c-bac0-939ed649b59f"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageDistributionFailedNoAssignedFutureBaseline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	//mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-6 -- distributeBaseline with missing package TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="879bf994-18ad-4be8-96eb-f6b2cf3c1e4a"><con:description>Test the functionthat allows the GroundApp to request from the ground PIS to distribute the future baseline to an addressee. 
It is assumed that a future baseline was assigned to that element.

The request is sent to an element and at least one data package requested by the baseline is missing

Expected results : PIS shall return request ID, send missing datapackage notification and status "processing" then "failed".


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0113], [RefSol_PIS2G_GroundApp_SyID_0114]

Requirements update package distribution status :
[RefSol_PIS2G_GroundApp_SyID_0121],  [RefSol_PIS2G_GroundApp_SyID_0122], 
[RefSol_PIS2G_GroundApp_SyID_0123], [RefSol_PIS2G_GroundApp_SyID_0124]

Requirements Missing data package notification
[RefSol_PIS2G_GroundApp_SyID_0099], [RefSol_PIS2G_GroundApp_SyID_0100]</con:description><con:settings/><con:testStep type="request" name="assignFutureBaselineToElement Missing Package(s) in Baseline" id="2b971496-00db-45fa-861f-6abe54f8e8bf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Missing Package(s) in Baseline"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DEGRADED-DATAPACKAGE-IncompleteBaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DATAPACKAGE-ActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="87c4da40-caca-4c0a-9b96-f636035a099d"/><con:assertion type="SOAP Response" name="SOAP Response" id="2d91ac5c-b576-4cc1-822b-cdb0b01d3e26"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="307209bb-ab7f-4ac9-9db0-6083e4a0c05a"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="Delay" id="f56c9173-c0cb-44c4-98d2-45b25496c018"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="Start Mock" id="ba1a6d87-76cc-4c2b-ba11-9e6972e9ff28"><con:settings/><con:config><script>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
</script></con:config></con:testStep><con:testStep type="request" name="distributeBaseline Element Number Missing Package" id="e41cdbf0-afc8-4990-b7c4-b4ea282e441f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Element Number Missing Package"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2d3692a6-8acf-4691-8390-cf17181a4652"/><con:assertion type="SOAP Response" name="SOAP Response" id="3c6a5bbe-2ace-418d-93d3-a5584ec41abb"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c2d1189f-723a-4407-8612-2f3bf9282d24"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="3b9d31aa-3ce8-44f0-9899-a3d71337efe4"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="dbe0729c-4cb2-4c05-9191-70cdbf888678"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Element Number Missing Package</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="35f7994f-5e6a-4c99-b077-56459c010f62"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageDistributionProcessing",
                          "DataPackageDistributionFailedMissingDataPackage"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript/><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>547e2e51-a62b-4082-9f7e-4e0f4168d7cb</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-7 -- distributeBaseline to Offline then Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1cbb43a2-2832-44fb-ab2d-443748ce6352"><con:description>Test the functionthat allows the GroundApp to request from the ground PIS to distribute the future baseline to an addressee. 
It is assumed that a future baseline was assigned to that element.

The request is sent to an offline Element Alpha Number that becomes online before timeout.

Expected Result :The PIS shall return the Request ID, send future baseline definition and status "processing",  "waiting for transfer", "transfering" then "transfer completed".



Requirements ;
[RefSol_PIS2G_GroundApp_SyID_0113], [RefSol_PIS2G_GroundApp_SyID_0114], 
[RefSol_PIS2G_GroundApp_SyID_0115], [RefSol_PIS2G_GroundApp_SyID_0116]

Requirements future baseline definition notification :
[RefSol_PIS2G_GroundApp_SyID_0119], [RefSol_PIS2G_GroundApp_SyID_0120]

Requirements update package distribution status :
[RefSol_PIS2G_GroundApp_SyID_0121],  [RefSol_PIS2G_GroundApp_SyID_0122], 
[RefSol_PIS2G_GroundApp_SyID_0123], [RefSol_PIS2G_GroundApp_SyID_0124]
</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="be7cb7fe-0d8f-4ebb-83f2-23150f054d7e"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="distributeBaseline Offline then Online Element Number" id="41dd1af4-0816-4e81-a086-667e811f288f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Offline then Online Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ed479165-2700-4fa4-b5f8-799383577a77"/><con:assertion type="SOAP Response" name="SOAP Response" id="9a308d0b-200b-4f70-be44-25a0ac154a77"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="317c0b8e-1b18-48d8-9d94-bedb8c4b71f5"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2ebf8069-1174-4d4b-ba39-7b43602ce17d"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="4505bd9e-8801-4810-9cd8-8769438101c9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Offline then Online Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="b785e1bc-f250-4cc1-88b4-7301218d7e0c"><con:description>Put adressee element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is now online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="1046735a-52a1-4414-8a8a-9d51353b8cfa"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be those notifications received:
"DataPackageDistributionProcessing",
"DataPackageFutureBaselineDefinition",
"DataPackageDistributionWaitingToTransfer",
"DataPackageDistributionTransferring",  
"DataPackageDistributionTransferred",
"DataPackageDistributionTransferred"
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="46e8b821-b368-432c-84a9-71fce337011c" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageDistributionProcessing", false],
                          ["DataPackageFutureBaselineDefinition", false],
                          ["DataPackageDistributionWaitingToTransfer", true],
                          ["DataPackageDistributionTransferring", true],
                          ["DataPackageDistributionTransferred", false]
                          ["DataPackageDistributionTransferred", true]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 600)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	// mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>397dc9ec-4a6f-47a3-82ad-261e1f2586ea</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-8 -- distributeBaseline Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="60b653e3-c91d-4595-9c98-54b650029760"><con:description>Test the functionthat allows the GroundApp to request from the ground PIS to distribute the future baseline to an addressee. 
It is assumed that a future baseline was assigned to that element.

The request is sent with invalid informations.

Expected result : PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0319]
</con:description><con:settings/><con:testStep type="request" name="distributeBaseline Element Number Bad Session ID" id="9946c699-1e72-4d24-b34a-f1f769fda53e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Element Number Bad Session ID"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#DEGRADED-GEN-BadSessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2c48ac23-acf5-4de3-a429-0b68291f5446"/><con:assertion type="SOAP Response" name="SOAP Response" id="ca0aec4a-8a14-4c92-8c1d-1cd71f823a81"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ff5125fe-7324-4249-8850-c3823da5a3c2"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="43af9d92-8819-4655-9e72-55b978b58e29"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="distributeBaseline Unknown Element Number" id="2e7ad62e-ffbe-41bc-a9c8-0e23e041224b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Unknown Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2fa52e10-27e3-42c2-81a2-bc3ed5223fc2"/><con:assertion type="SOAP Response" name="SOAP Response" id="5fdf8b10-4da1-4f75-8420-bde55ef19f42"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b9ecd8ef-b415-4789-9ba9-3ed881655cbb"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="0b56a8dd-35de-48de-9b9b-e0d785bbed4b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>ELEMENT_ID_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="distributeBaseline Unknown Mission ID" id="8ee9c81a-4519-4b63-842e-5557c26596d0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Unknown Mission ID"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownMissionID}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d91e3e60-8303-4815-9f93-98225f3a2cc1"/><con:assertion type="SOAP Response" name="SOAP Response" id="a1e888df-5560-46de-a22e-aa809131bca7"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="d5a160d9-275d-49c3-b623-d45aa6655bbe"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="4eb3921c-a6ce-4f89-8af7-ddd41e5e47d1"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_MISSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="distributeBaseline Invalid Request Timeout" id="84145b6e-95d8-4d86-a696-eaa403ec1e94" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Invalid Request Timeout"><con:description>Addressee is identified by mision operator code. Expected Result :The PIS shall send the Request ID, Future baseline definition and status "transferring" then "transfer completed"</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="73d538f1-4fbf-4b10-a383-8bbb1976325e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="75f9c9e9-a873-47c4-824b-e13369d22c3f"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault" id="35bf7541-d0f2-43dd-869e-aeb080d14560"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="distributeBaseline Invalid Transfer Mode" id="d12371d1-f360-4998-89da-5eabdd5c9459"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Invalid Transfer Mode"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DEGRADED-DATAPACKAGE-InvalidTransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e09166f6-49dd-4643-99ac-3a4ec8dd997d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="3478d905-24e7-432d-972e-4b06c91d889f"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault" id="f17e89d7-6d74-4a18-ac02-8e1e2adcd4d4"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="distributeBaseline Invalid File Compression Parameter" id="2b3d63ae-b1fc-4408-b950-ce877c0592cf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Invalid File Compression Parameter"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DEGRADED-DATAPACKAGE-InvalidFileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4b96f864-345a-4140-b784-4ddec46bfbc0"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ec615452-3f1f-494c-8231-28acdffbc341"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault" id="641cad09-4b22-491a-8816-de01a8f25d18"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="distributeBaseline Invalid Transfer Date" id="e7c16712-1ccf-4bf2-a4c8-74f9c4e38408"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Invalid Transfer Date"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DEGRADED-DATAPACKAGE-InvalidTransferDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e037fa9f-a520-4760-ad17-29e29a868c16"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="0e734a53-25d9-4b44-98c7-5735fd0f74c9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault" id="4abebb55-e07a-4bec-8cb8-a1d5447775ee"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>RequestId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-9 -- distributeBaseline to Element (Future Transfert Date)TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="03bbacd3-e127-4a19-b6ee-dde145a5f33a"><con:description>Test the functionthat allows the GroundApp to request from the ground PIS to distribute the future baseline to an addressee. 
It is assumed that a future baseline was assigned to that element.

The request is sent to an Element Alpha Number.

Expected Result :The PIS shall return the Request ID, send future baseline definition and status "processing", "transferring" then "transfer completed"

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0113], [RefSol_PIS2G_GroundApp_SyID_0114], 
[RefSol_PIS2G_GroundApp_SyID_0115], [RefSol_PIS2G_GroundApp_SyID_0116]

Requirements future baseline definition notification :
[RefSol_PIS2G_GroundApp_SyID_0119], [RefSol_PIS2G_GroundApp_SyID_0120]

Requirements update package distribution status :
[RefSol_PIS2G_GroundApp_SyID_0121],  [RefSol_PIS2G_GroundApp_SyID_0122],
[RefSol_PIS2G_GroundApp_SyID_0123], [RefSol_PIS2G_GroundApp_SyID_0124]</con:description><con:settings/><con:testStep type="manualTestStep" name="Manual TestStep" id="95bb87d8-2654-42f0-adc0-664427c8a1aa"><con:description>Define A Future transfert date </con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="distributeBaseline Element Number" id="b73f8e30-7af9-43df-8f85-476d3e7640aa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@skip_soap_action">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline><!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5ed1620c-4bbc-496a-b426-3ec1368fe075"/><con:assertion type="SOAP Response" name="SOAP Response" id="0cca7a29-ed06-4ebb-86c8-ccaf04311593"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="8100f550-fe46-4776-b6a1-d97e24fd570e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f6e7d516-02fb-42b4-8fe0-2b1b178c537b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="6acc8eed-6399-4e31-ae7b-df67415ce63a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check transfer date" id="02b307d2-7824-4ee3-80ca-4839e93ca84b"><con:description>Check that transfer is initiated at the configured date</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="91876be4-b685-4dad-9d7b-d14bb2d7f2e5"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdatePackageDistributionStatusProcessing
- FutureBaselineDefinition
- UpdatePackageDistributionStatusWaitingToTransfer
- UpdatePackageDistributionStatusTransfering
- UpdatePackageDistributionStatusTransferCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="83ba4e09-32be-4063-816b-e88813f45cc2"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageDistributionProcessing", false],
                          ["DataPackageFutureBaselineDefinition", false],
                          ["DataPackageDistributionWaitingToTransfer", true],
                          ["DataPackageDistributionTransferring", true],
                          ["DataPackageDistributionTransferred", false]
                          ["DataPackageDistributionTransferred", true]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 600)

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>98482383-9f65-431d-b9f6-cb8d171e5176</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-10 -- distributeBaseline to Element NumberTestCase (Incremental)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="67c1d1dd-f34a-49bc-bd2e-99fd74c523a5"><con:description>Test the functionthat allows the GroundApp to request from the ground PIS to distribute the future baseline to an addressee. 
It is assumed that a future baseline was assigned to that element.

The request is sent to an Element Alpha Number.

Expected Result :The PIS shall return the Request ID, send future baseline definition and status "processing", "transferring" then "transfer completed"

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0113], [RefSol_PIS2G_GroundApp_SyID_0114], 
[RefSol_PIS2G_GroundApp_SyID_0115], [RefSol_PIS2G_GroundApp_SyID_0116]

Requirements future baseline definition notification :
[RefSol_PIS2G_GroundApp_SyID_0119], [RefSol_PIS2G_GroundApp_SyID_0120]

Requirements update package distribution status :
[RefSol_PIS2G_GroundApp_SyID_0121],  [RefSol_PIS2G_GroundApp_SyID_0122],
[RefSol_PIS2G_GroundApp_SyID_0123], [RefSol_PIS2G_GroundApp_SyID_0124]</con:description><con:settings/><con:testStep type="request" name="distributeBaseline Element Number" id="9799c3db-9d76-4490-bb5b-eee01e483d05"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@skip_soap_action">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline><!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>true</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5ed1620c-4bbc-496a-b426-3ec1368fe075"/><con:assertion type="SOAP Response" name="SOAP Response" id="0cca7a29-ed06-4ebb-86c8-ccaf04311593"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="8100f550-fe46-4776-b6a1-d97e24fd570e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f6e7d516-02fb-42b4-8fe0-2b1b178c537b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="e339b0ef-b8cf-405f-af3f-e924a25b937e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="7d070009-16d7-4184-8a14-cede9218bae4"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdatePackageDistributionStatusProcessing
- FutureBaselineDefinition
- UpdatePackageDistributionStatusWaitingToTransfer
- UpdatePackageDistributionStatusTransfering
- UpdatePackageDistributionStatusTransferCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="71d07ada-5506-4527-8032-431f674a2717"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageDistributionProcessing", false],
                          ["DataPackageFutureBaselineDefinition", false],
                          ["DataPackageDistributionWaitingToTransfer", true],
                          ["DataPackageDistributionTransferring", true],
                          ["DataPackageDistributionTransferred", false]
                          ["DataPackageDistributionTransferred", true]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 600)

</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Manual TestStep" id="0ae03a12-6cb7-4b24-8766-c5f9b3f78ac2"><con:description>Check that only modified files are transfered.</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult/></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>98482383-9f65-431d-b9f6-cb8d171e5176</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-11 -- distributeBaseline to Element (Transfert Expiration Date Reached)TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="427c4c2b-03fc-479b-9e4c-46f05b1e3a29"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Manual TestStep" id="3a7f810c-bb76-486f-9d7d-d4e0db48ab46"><con:description>Define a passed transfert expiration  date in properties</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="distributeBaseline Element Number" id="12d960bd-23fd-4d31-93b0-d80e6e06dded"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@skip_soap_action">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline><!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5ed1620c-4bbc-496a-b426-3ec1368fe075"/><con:assertion type="SOAP Response" name="SOAP Response" id="0cca7a29-ed06-4ebb-86c8-ccaf04311593"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="8100f550-fe46-4776-b6a1-d97e24fd570e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f6e7d516-02fb-42b4-8fe0-2b1b178c537b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="edab14c8-7636-4270-bad5-62aabdaddaa5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check transfer date" id="54a6323c-015c-4389-9848-222ce4626179"><con:description>Check that transfer is initiated at the configured date</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="13c1bb94-77fa-42f2-ac03-917ca1874562"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdatePackageDistributionStatusProcessing
- FutureBaselineDefinition
- UpdatePackageDistributionStatusWaitingToTransfer
- UpdatePackageDistributionStatusTransfering
- UpdatePackageDistributionStatusTransferCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e4fde2af-b271-4c63-8dcb-dd38bcc82cd6"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageDistributionProcessing", false],
                          ["DataPackageFutureBaselineDefinition", false],
                          ["DataPackageDistributionWaitingToTransfer", true],
                          ["DataPackageDistributionTransferring", true],
                          ["DataPackageDistributionTransferred", false]
                          ["DataPackageDistributionTransferred", true]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 600)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>98482383-9f65-431d-b9f6-cb8d171e5176</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A19-1 -- forceAddresseesFutureBaseline to Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d6c45476-3e40-4ffc-ace5-214fbf6a80ae"><con:description>Test the function that  allows the GroundApp to force an addressee to use the future baseline already installed on the element’s data store. 

The request is sent to an Element Alpha Number.

Expected result : PIS shall return RequestID, send "processing", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0125], [RefSol_PIS2G_GroundApp_SyID_0126],
[RefSol_PIS2G_GroundApp_SyID_0127], 

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:testStep type="request" name="forceAddresseesFutureBaseline Element Number" id="a2300116-665d-4327-bca0-5576eb139aa8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesFutureBaseline</con:operation><con:request name="forceAddresseesFutureBaseline Element Number"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesFutureBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesFutureBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2ad26916-f83b-4d99-b644-07bf2697a452"/><con:assertion type="SOAP Response" name="SOAP Response" id="50406077-d8b4-4231-831c-347c62d3bc9a"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="978f4e11-6283-4cd6-ac09-c3d41d663dbb"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="82d4ecf3-24f2-4727-b88b-d11d01e68ab7"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="89b2459b-7208-4693-b721-a235b5f05502"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesFutureBaseline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="a4842462-2bbb-4549-9034-7b87dbf44eee"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageBaselineForcingWaitingToSend",
					  "DataPackageBaselineForcingSent",
					  "DataPackageBaselineForcingCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestId</con:name><con:value>d79adb19-06ee-4d88-9a61-ac452fea6db4</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A19-2 -- forceAddresseesFutureBaseline to Mission Commercial Number TestCase -- DEPRECATED" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8f94bb3a-3483-4b09-82ab-54cc6daff37a" disabled="true"><con:description>Test the function that  allows the GroundApp to force an addressee to use the future baseline already installed on the element’s data store. 

The request is sent to a Mission Commercial Number.

Expected result : PIS shall return RequestID, send "processing", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0125], [RefSol_PIS2G_GroundApp_SyID_0126],
[RefSol_PIS2G_GroundApp_SyID_0127], 

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>9fcf8683-2650-4f8b-a51a-33b33813143e</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A19-3 -- forceAddresseesFutureBaseline to Mission Operator Code TestCase -- DEPRECATED" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="83ccd317-7b16-44e6-9e08-aa16bb558be0" disabled="true"><con:description>Test the function that  allows the GroundApp to force an addressee to use the future baseline already installed on the element’s data store. 

The request is sent to a Mission Operator Code.

Expected result : PIS shall return RequestID, send "processing", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0125], [RefSol_PIS2G_GroundApp_SyID_0126],
[RefSol_PIS2G_GroundApp_SyID_0127], 

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>2a7c5875-de2e-4f5c-b4a0-37f5577e962f</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A19-4 -- forceAddresseesFutureBaseline to Offline Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e6972683-5c95-44bc-a8a2-7174efb072b0"><con:description>Test the function that  allows the GroundApp to force an addressee to use the future baseline already installed on the element’s data store. 

The request is sent to an offline Element Alpha Number.

Expected result : PIS shall return RequestID, send "processing", "waiting to send" then "timed out" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0125], [RefSol_PIS2G_GroundApp_SyID_0126],
[RefSol_PIS2G_GroundApp_SyID_0127], 

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="9aa1e929-48f9-4630-871b-479567f1ffd2"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="forceAddresseesFutureBaseline Offline Element Number" id="08c3b677-52b2-4dca-af4d-29bb94350052"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesFutureBaseline</con:operation><con:request name="forceAddresseesFutureBaseline Offline Element Number"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesFutureBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesFutureBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="944ea0ab-4d37-4a87-82b0-dc2a05d4b068"/><con:assertion type="SOAP Response" name="SOAP Response" id="8d942412-bde9-4aa5-8c70-c19f97a2bf1d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="20c1a44d-9dbd-4aa2-b454-effc45bcbbc1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="da10f18b-af74-4776-9977-b4035e55e976"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="876e73cb-54dd-4dd8-b104-6b65a605f5fe"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesFutureBaseline Offline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="76fc02d0-d111-46b1-8e03-71383cd8293c"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineForcingStatusProcessing
- UpdateBaselineForcingStatusWaitingToSend
- UpdateBaselineForcingStatusTimedOut
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="a49a6f51-4602-4040-b356-b81dfa92d696"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageBaselineForcingWaitingToSend",
					  "DataPackageBaselineForcingTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>9466aa2f-75e0-4ef5-8787-a942b2914c6f</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A19-5 -- forceAddresseesFutureBaseline to Offline then Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f7d0d47f-139b-4c4c-937c-b52c2a0af10a"><con:description>Test the function that  allows the GroundApp to force an addressee to use the future baseline already installed on the element’s data store. 

The request is sent to an offline Element Alpha Number that becomes online before timeout.

Expected result : PIS shall return RequestID, send "processing", "waiting to send", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0125], [RefSol_PIS2G_GroundApp_SyID_0126],
[RefSol_PIS2G_GroundApp_SyID_0127], 

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="73186d7c-7889-4b28-96f0-b40afdecd40b"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="forceAddresseesFutureBaseline Offline then Online Element Number" id="b6027f92-40fb-4b32-bd00-9c4bf637173e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesFutureBaseline</con:operation><con:request name="forceAddresseesFutureBaseline Offline then Online Element Number"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesFutureBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesFutureBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="3cbbb907-90e7-471e-a3c6-7d52f2d8c27b"/><con:assertion type="SOAP Response" name="SOAP Response" id="61256416-a498-4e40-b2da-116d14d61871"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="10ef7eaf-4a7c-4d19-8aa3-5c16e7a7edbf"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2a3ea308-419c-48d5-9277-f570f328c8cb"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="81b6f53d-f14c-4697-963e-9116734e5512"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesFutureBaseline Offline then Online Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="ecb30995-2c70-4010-bb49-93da8b03e271"><con:description>Put element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is now Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="086ef3ca-d651-484a-ba78-a3efa09a117f"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineForcingStatusProcessing
- UpdateBaselineForcingStatusWaitingToSend
- UpdateBaselineForcingStatusSent
- UpdateBaselineForcingStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="d146d516-8b12-4cb1-b7df-04f196648bd6"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageBaselineForcingWaitingToSend",
					  "DataPackageBaselineForcingSent",
					  "DataPackageBaselineForcingCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>37549b0c-03fd-4ae8-9f2b-0beb3567d103</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A19-6 -- forceAddresseesFutureBaseline when baseline is not installed TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="aff1ce60-b878-49ae-9cb9-bd5edd9d869a"><con:description>Test the function that  allows the GroundApp to force an addressee to use the future baseline already installed on the element’s data store. 

The request is sent to a  Mission Commercial Number that has not the baseline installed

Expected result : PIS shall return RequestID, send "processing", "sent" then "failed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0125], [RefSol_PIS2G_GroundApp_SyID_0126], 
[RefSol_PIS2G_GroundApp_SyID_0127], [RefSol_PIS2G_GroundApp_SyID_0128]

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:testStep type="request" name="forceAddresseesFutureBaseline Baseline Not Installed" id="3e0cecd3-0a01-4b7e-9c46-ed4f470e19c9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesFutureBaseline</con:operation><con:request name="forceAddresseesFutureBaseline Baseline Not Installed"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesFutureBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesFutureBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d48a4018-85d5-4ace-bcdf-adbe0c43b9bb"/><con:assertion type="SOAP Response" name="SOAP Response" id="1a25ec08-1046-4f1c-a592-ec56ca650ac4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ebc85d9c-e1ed-4200-a0ed-dc07f9ce50bc"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a68db2a8-972c-465d-a5ce-e525c6b36dcb"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="7196ef39-8904-4f51-b21c-fd285b554682"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesFutureBaseline Baseline Not Installed</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="c54e3d1b-f3e5-4e29-b409-acbb393b8a36"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineForcingStatusProcessing
- UpdateBaselineForcingStatusSent
- UpdateBaselineForcingStatusFailed
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="75d7e251-c03b-4559-b2e8-dd8bba73a475"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageBaselineForcingWaitingToSend",
					  "DataPackageBaselineForcingSent",
					  "DataPackageBaselineForcingFailed"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>936eb8b0-99cb-41b2-ad18-14d0f429b4f3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A19-7 -- forceAddresseesFutureBaseline with missing datapackage TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c58a279e-2c5d-4f5c-be81-30b0b5ec1786" disabled="true"><con:description>Test the function that  allows the GroundApp to force an addressee to use the future baseline already installed on the element’s data store. 

The request is sent to a  Mission Commercial Number that has a baseline with missing or corrupted datapackage

Expected result : PIS shall return RequestID, send "processing", "sent" then "failed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0125], [RefSol_PIS2G_GroundApp_SyID_0126], 
[RefSol_PIS2G_GroundApp_SyID_0127], [RefSol_PIS2G_GroundApp_SyID_0129]

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:testStep type="request" name="forceAddresseesFutureBaseline Missing Data Package" id="0a6bbbdf-7508-45c8-9df7-98ab452925f8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesFutureBaseline</con:operation><con:request name="forceAddresseesFutureBaseline Missing Data Package"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesFutureBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-MissionCommercialNumber}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesFutureBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="1b004ec8-b251-40c8-94b9-b16b9bc44005"/><con:assertion type="SOAP Response" name="SOAP Response" id="aed5dc0c-8c8f-4d1d-953a-4fa3998fa503"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="cc3ec379-9a82-4e2a-b13f-de3c47e051a0"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="6590666d-df70-4e91-b7e5-5b048d710f9f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesFutureBaseline Missing Data Package</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="672a91a9-fb13-4719-8ccf-7e4c563fd48a"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineForcingStatusProcessing
- UpdateBaselineForcingStatusSent
- UpdateBaselineForcingStatusFailed
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="b4eb2e9b-5cf3-4040-8fc5-c6b789656859"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageBaselineForcingWaitingToSend",
					  "DataPackageBaselineForcingSent",
					  "DataPackageBaselineForcingFailed"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A19-8 -- forceAddresseesFutureBaseline Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b4184fe5-bed4-49cd-ae06-a7cfcc495023"><con:description>Test the function that  allows the GroundApp to force an addressee to use the future baseline already installed on the element’s data store. 

The request is sent with invalid informations.

Expected result : PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0325]
</con:description><con:settings/><con:testStep type="request" name="forceAddresseesFutureBaseline Bad Session ID" id="43ba2ea5-af97-4661-ac2e-2b1de42145b7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesFutureBaseline</con:operation><con:request name="forceAddresseesFutureBaseline Bad Session ID"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesFutureBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#DEGRADED-GEN-BadSessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesFutureBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0e1435b4-c522-4103-83c7-ff7f76821a67"/><con:assertion type="SOAP Response" name="SOAP Response" id="e4a3403e-8232-4713-8430-cd6c38f4b863"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="79605733-7f95-46e3-b5b4-882c72abd8f7"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="cb2e7217-99a3-4e18-a9dd-8a1f7ecde4c5"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="forceAddresseesFutureBaseline Unknown Element Number" id="243dcb2c-c255-41b0-846e-71503d3be8d6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesFutureBaseline</con:operation><con:request name="forceAddresseesFutureBaseline Unknown Element Number"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesFutureBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#DEGRADED-GEN-UnknownElementNumber}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesFutureBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="1ab3137c-d65d-4dfc-8377-03afce100dbe"/><con:assertion type="SOAP Response" name="SOAP Response" id="25bbf592-9ac7-47ed-a6d5-9b7524c8d385"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="f54c5583-bf01-4775-9b3c-b28513957265"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="3d62fe7c-e9f2-49f1-a223-37e44ed034ec"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:error_code[1]/text()</path><content>ELEMENT_ID_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="forceAddresseesFutureBaseline Invalid Request Timeout" id="4e593bdc-f066-414b-87d9-16a6fc7e95d3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesFutureBaseline</con:operation><con:request name="forceAddresseesFutureBaseline Invalid Request Timeout"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesFutureBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-MissionOperatorCode}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesFutureBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="6d5e9ea1-c3ad-478b-81ce-867565942c07"/><con:assertion type="SOAP Response" name="SOAP Response" id="4b2f019f-b6ee-4394-b7d0-b5ec90a1fe93"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="d26c1f2f-6508-42ee-a0e7-8b881790675c"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="232405d8-8dfd-405e-abf4-abd5f8218b9a"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>RequestId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A20-1 -- forceAddresseesArchivedBaseline to Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="bfe15f12-34fe-464e-ad2b-315303f7d2aa"><con:description>Test the function that allows the GroundApp to force an addressee to roll back to the archived baseline already installed on the element’s data store


The request is sent to an Element Alpha Number.

Expected result : PIS shall return RequestID, send "processing", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0130], [RefSol_PIS2G_GroundApp_SyID_0131],
[RefSol_PIS2G_GroundApp_SyID_0132], 

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:testStep type="request" name="forceAddresseesArchivedBaseline Element Number" id="f796a0cf-5367-4aa8-a111-607463f21a19"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesArchivedBaseline</con:operation><con:request name="forceAddresseesArchivedBaseline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesArchivedBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesArchivedBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="057687f1-64d3-48a1-9957-bca7f4731038"/><con:assertion type="SOAP Response" name="SOAP Response" id="fde426ec-71a8-4351-bafe-4d1b12abcef2"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="0869582b-eaaa-405a-b806-9865c8b709ae"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="0ed903d4-4c08-4249-8501-07e3f6efd737"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="c556c78d-112e-46fb-8a0e-547ae0de2af8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesArchivedBaseline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="edad7208-5e3c-4071-9f2e-2604a3c08357"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineForcingStatusProcessing
- UpdateBaselineForcingStatusSent
- UpdateBaselineForcingStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="8e92f692-0b20-45bb-81f5-40daf3621d9a"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageBaselineForcingWaitingToSend",
					  "DataPackageBaselineForcingSent",
					  "DataPackageBaselineForcingCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>9f22ec76-c1a9-4a01-8a73-9e387fc64b74</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A20-2 -- forceAddresseesArchivedBaseline to Mission Commercial Number TestCase -- DEPRECATED" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a65b5339-57bf-4528-b8e2-78e03200bf48" disabled="true"><con:description>Test the function that allows the GroundApp to force an addressee to roll back to the archived baseline already installed on the element’s data store


The request is sent to a Mission Commercial Number.

Expected result : PIS shall return RequestID, send "processing", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0130], [RefSol_PIS2G_GroundApp_SyID_0131],
[RefSol_PIS2G_GroundApp_SyID_0132], 

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>3b08341f-e799-40fb-95ac-4e146b63a2c6</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A20-3 -- forceAddresseesArchivedBaseline to Mission Operator Code TestCase -- DEPRECATED" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fb13047d-3b6d-4924-b50b-5b5b596ca2b0" disabled="true"><con:description>Test the function that allows the GroundApp to force an addressee to roll back to the archived baseline already installed on the element’s data store

The request is sent to a Mission Operator Code.

Expected result : PIS shall return RequestID, send "processing", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0130], [RefSol_PIS2G_GroundApp_SyID_0131], 
[RefSol_PIS2G_GroundApp_SyID_0132], 


Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>3c598003-5cfd-4404-898e-527ac6213d60</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A20-4 -- forceAddresseesArchivedBaseline to Offline Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5c150448-ca89-46e6-a9b2-32b392272a84"><con:description>Test the function that allows the GroundApp to force an addressee to roll back to the archived baseline already installed on the element’s data store

The request is sent to an offline Element Alpha Number.

Expected result : PIS shall return RequestID, send "processing", "waiting to send" then "timed out" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0130], [RefSol_PIS2G_GroundApp_SyID_0131], 
[RefSol_PIS2G_GroundApp_SyID_0132], 


Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="0d1260c6-d1f4-4406-8b16-d3f18d4400eb"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="forceAddresseesArchivedBaseline Offline Element Number" id="31c320ec-64c6-4ac9-a558-3f2ceba94bdc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesArchivedBaseline</con:operation><con:request name="forceAddresseesArchivedBaseline Offline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesArchivedBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesArchivedBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="69a1c4d4-5419-4055-9335-e3b77ef89eeb"/><con:assertion type="SOAP Response" name="SOAP Response" id="119f377c-7584-4264-b680-c854ee5a8198"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="052b4984-a710-4f9f-be4c-479429d0d855"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="5e38b572-5955-4a94-90e2-b19b6aed1527"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="0cefac9e-d73f-4f51-8271-f069371cff99"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesArchivedBaseline Offline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="aca5a31b-d658-4be8-8685-34457bc1dc3a"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineForcingStatusProcessing
- UpdateBaselineForcingStatusWaitingToSend
- UpdateBaselineForcingStatusTimedOut
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="1d44b787-202a-43fe-a405-448566227c49"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageBaselineForcingWaitingToSend",
					  "DataPackageBaselineForcingTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>2c48f36b-4331-43e8-8967-ffd37874c68f</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A20-5 -- forceAddresseesArchivedBaseline to Offline then Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0f7c9729-e46a-494a-a4f0-2358ed32852e"><con:description>Test the function that allows the GroundApp to force an addressee to roll back to the archived baseline already installed on the element’s data store

The request is sent to an offline Element Alpha Number that becomes online before timeout.

Expected result : PIS shall return RequestID, send "processing", "waiting to send", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0130], [RefSol_PIS2G_GroundApp_SyID_0131], 
[RefSol_PIS2G_GroundApp_SyID_0132], 

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="53683a0a-b3e3-47ee-a98b-3bfbc990c945"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="forceAddresseesArchivedBaseline Offline then Online  Element Number" id="cb409a72-1c50-4794-beef-000cdc27a8f0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesArchivedBaseline</con:operation><con:request name="forceAddresseesArchivedBaseline Offline then Online  Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesArchivedBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesArchivedBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5db7a330-1f08-48fb-81ec-09aee98d25be"/><con:assertion type="SOAP Response" name="SOAP Response" id="c48ad39b-9386-43db-85eb-a3602ebe8b6f"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="9bcb38df-9873-4e66-9f5b-a8e1be0cfaf1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9e6d08af-9839-46fc-8335-759b8b273165"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="44e5a63f-c559-4aad-b4c1-6b8295d5c14e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesArchivedBaseline Offline then Online  Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="7a275bd1-0fee-4b27-b9b1-bd9f8853d072"><con:description>Put element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is now Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="95702b96-ff55-4d4b-a666-ca52a053c364"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineForcingStatusProcessing
- UpdateBaselineForcingStatusWaitingToSend
- UpdateBaselineForcingStatusSent
- UpdateBaselineForcingStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="daa92dc6-3a3f-4522-ad08-99e17149ab73"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageBaselineForcingWaitingToSend",
					  "DataPackageBaselineForcingSent",
					  "DataPackageBaselineForcingCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestId</con:name><con:value>acb48dc7-6c55-4e32-bebb-c70bc7b17e3f</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A20-6 -- forceAddresseesArchivedBaseline with missing datapackage TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="cdb387dd-f912-48ee-aa03-731fd1ed9678" disabled="true"><con:description>Test the function that allows the GroundApp to force an addressee to roll back to the archived baseline already installed on the element’s data store

The request is sent to a  Mission Commercial Number that has a baseline with missing or corrupted datapackage

Expected result : PIS shall return RequestID, send "processing", "sent" then "failed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0130], [RefSol_PIS2G_GroundApp_SyID_0131], 
[RefSol_PIS2G_GroundApp_SyID_0132], [RefSol_PIS2G_GroundApp_SyID_0134]

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:testStep type="request" name="forceAddresseesArchivedBaseline Missing Data Package" id="0055f303-d511-4043-89b2-cae5ff07297b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesArchivedBaseline</con:operation><con:request name="forceAddresseesArchivedBaseline Missing Data Package"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesArchivedBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-MissionCommercialNumber}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesArchivedBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="dd9716dd-3f6a-496c-af46-98fe1a266577"/><con:assertion type="SOAP Response" name="SOAP Response" id="f15fefd4-1b14-4d06-b8ed-cb10a9fade3e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a04bc13f-ce22-46d1-a8d1-b2f6b4236c9d"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="9f66a601-414c-445b-8004-b852571aa37f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesArchivedBaseline Missing Data Package</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="02ca8a5d-14d6-4c0a-85d8-672269bfe580"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineForcingStatusProcessing
- UpdateBaselineForcingStatusSent
- UpdateBaselineForcingStatusFailed
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="9121efc3-907b-4072-974f-997726bb44f0"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageBaselineForcingWaitingToSend",
					  "DataPackageBaselineForcingSent",
					  "DataPackageBaselineForcingFailed"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A20-7 -- forceAddresseesArchivedBaseline when baseline is not installed TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a36cc11c-839a-4577-a8b7-10520dd60a39"><con:description>Test the function that allows the GroundApp to force an addressee to roll back to the archived baseline already installed on the element’s data store

The request is sent to a  Mission Commercial Number that has not the baseline installed

Expected result : PIS shall return RequestID, send "processing", "sent" then "failed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0130], [RefSol_PIS2G_GroundApp_SyID_0131], 
[RefSol_PIS2G_GroundApp_SyID_0132], [RefSol_PIS2G_GroundApp_SyID_0133]

Requirements update baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0135],  [RefSol_PIS2G_GroundApp_SyID_0136], [RefSol_PIS2G_GroundApp_SyID_0137],
 [RefSol_PIS2G_GroundApp_SyID_0138], [RefSol_PIS2G_GroundApp_SyID_0139]</con:description><con:settings/><con:testStep type="manualTestStep" name="Manual TestStep" id="a851e811-2b08-4c44-b5fe-832e8a3e7f3c"><con:description>Remove Archived baseline</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="forceAddresseesArchivedBaseline Baseline Not Installed" id="b2f15c71-f2b0-4db0-9a39-ad1e7864d6c1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesArchivedBaseline</con:operation><con:request name="forceAddresseesArchivedBaseline Baseline Not Installed"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesArchivedBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesArchivedBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="8cb40e80-ec43-4a90-a1c7-18d23003bf0b"/><con:assertion type="SOAP Response" name="SOAP Response" id="8d577281-c991-4cab-906e-4b35a92db598"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="2329c008-2ef6-416f-ab65-29707233bfa8"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f2146e62-fbb7-4995-812f-7fc0822da2e7"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="c1ff4bab-c7bc-46ab-a7d7-22c52d125dd0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesArchivedBaseline Baseline Not Installed</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="40c8ce03-1614-4ae5-8816-0c4e42a17386"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineForcingStatusProcessing
- UpdateBaselineForcingStatusSent
- UpdateBaselineForcingStatusFailed
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="89d75d16-459d-42f0-907a-1f1d5a11779d"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageBaselineForcingWaitingToSend",
					  "DataPackageBaselineForcingSent",
					  "DataPackageBaselineForcingFailed"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>bca4b78d-5c96-4411-9d98-ad2d9efa31b0</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A20-8 -- forceAddresseesArchivedBaseline Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c3a0d0dd-2135-4b85-80fd-b8a513a5df8d"><con:description>Test the function that allows the GroundApp to force an addressee to roll back to the archived baseline already installed on the element’s data store

The request is sent with invalid informations.

Expected result : PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0326]
</con:description><con:settings/><con:testStep type="request" name="forceAddresseesArchivedBaseline Bad Session ID" id="eac3b480-f27f-4c94-8ff2-ae98ee6260a5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesArchivedBaseline</con:operation><con:request name="forceAddresseesArchivedBaseline Bad Session ID"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesArchivedBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#DEGRADED-GEN-BadSessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesArchivedBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="00280bd3-35d5-4abb-91df-f853de7988bd"/><con:assertion type="SOAP Response" name="SOAP Response" id="6cddf320-9cf0-4df8-9a74-8dbe286572f2"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ce147b48-cbee-4d03-94ee-e827692948fa"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="8127f9d9-44f9-4297-b954-ce6cce5cf96c"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="forceAddresseesArchivedBaseline Unknown Element Number" id="00304171-d0fa-4422-944b-cbf4d6cc39e3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesArchivedBaseline</con:operation><con:request name="forceAddresseesArchivedBaseline Unknown Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesArchivedBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#DEGRADED-GEN-UnknownElementNumber}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesArchivedBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e2d30fc5-f00a-4d17-9716-8fca16357fe3"/><con:assertion type="SOAP Response" name="SOAP Response" id="f1ca6d43-5db3-4309-894a-c0470fd9f10d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="96a25a46-8987-40c8-a79b-ee2d44fb0df9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="474f255b-486d-4b22-93f8-f8fa263acbce"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:error_code[1]/text()</path><content>ELEMENT_ID_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="forceAddresseesArchivedBaseline Invalid Request Timeout" id="44b53479-dd42-437a-9b96-6983bf0c61ca"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesArchivedBaseline</con:operation><con:request name="forceAddresseesArchivedBaseline Invalid Request Timeout"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesArchivedBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-MissionCommercialNumber}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesArchivedBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="833db08f-5acb-4a1b-a91e-696c19654746"/><con:assertion type="SOAP Response" name="SOAP Response" id="ddd7f350-43ad-44d2-aa8b-8dd2ff12eabe"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="91aafdbc-6aff-4ea0-b551-2e11459068c3"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="886eb9f5-6051-43cb-9bae-b414c2d73ca4"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:error_code[1]/text()</path><content>INVALID_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>RequestId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A22-1 -- clearAddreeseesForcingStatus for Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ece61c81-14b4-46ea-be34-861a75f46338"><con:description>Test the function that allows the GroundApp to clear the baseline forcing status of an addressee.
 This action sets this status to false allowing an automatic transition from a future baseline to current baseline.

The request is sent to an Element Alpha Number.

Expected result : PIS shall return RequestID, send "processing", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0140], [RefSol_PIS2G_GroundApp_SyID_0141], [RefSol_PIS2G_GroundApp_SyID_0142]

Requirements update clear baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0143],  [RefSol_PIS2G_GroundApp_SyID_0144], [RefSol_PIS2G_GroundApp_SyID_0145],
[RefSol_PIS2G_GroundApp_SyID_0146]</con:description><con:settings/><con:testStep type="request" name="clearAddreeseesForcingStatus Element Number" id="cfb9c75a-53c2-40e1-85d8-bbb3d7b7d3a6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>clearAddreeseesForcingStatus</con:operation><con:request name="clearAddreeseesForcingStatus Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:clearAddreeseesForcingStatus>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:clearAddreeseesForcingStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="52778183-1385-42dc-b7dd-e7066c96f6c1"/><con:assertion type="SOAP Response" name="SOAP Response" id="18327258-dcfb-4d75-828e-e0d90d41f43e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="cceb1900-bd2d-49e1-9d46-b9b50ccb3b78"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="221a6687-5f54-4623-9a85-75eb1aff7721"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="b95df2b9-b4ba-48b8-814c-00e009ef5326"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>clearAddreeseesForcingStatus Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="a909ac2a-39ed-4fff-a26f-8a546cc89f09"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateClearBaselineForcingStatusProcessing
- UpdateClearBaselineForcingStatusSent
- UpdateClearBaselineForcingStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="b7a46b6c-9f6b-4ef5-836a-df58c4ff4eba"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["DataPackageBaselineClearForcingProcessing",
					  "DataPackageBaselineClearForcingWaitingToSend",
					  "DataPackageBaselineClearForcingSent",
					  "DataPackageBaselineClearForcingCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>5e54f0e2-ca50-4cfe-9175-6ef72e7a76fc</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A22-2 -- clearAddreeseesForcingStatus for Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="bc696391-e2e9-4934-adc7-8c7ba510386a" disabled="true"><con:description>Test the function that allows the GroundApp to clear the baseline forcing status of an addressee.
 This action sets this status to false allowing an automatic transition from a future baseline to current baseline.


The request is sent to a Mission Commercial Number.

Expected result : PIS shall return RequestID, send "processing", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0140], [RefSol_PIS2G_GroundApp_SyID_0141], [RefSol_PIS2G_GroundApp_SyID_0142]

Requirements update clear baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0143],  [RefSol_PIS2G_GroundApp_SyID_0144], [RefSol_PIS2G_GroundApp_SyID_0145],
[RefSol_PIS2G_GroundApp_SyID_0146]</con:description><con:settings/><con:testStep type="request" name="clearAddreeseesForcingStatus Mission Commercial  Number" id="2bc8364e-2a95-4991-8a1d-6de8ee167116"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>clearAddreeseesForcingStatus</con:operation><con:request name="clearAddreeseesForcingStatus Mission Commercial  Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:clearAddreeseesForcingStatus>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-MissionCommercialNumber}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:clearAddreeseesForcingStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9a9c596c-a296-4e2d-bf34-8e3799e04bad"/><con:assertion type="SOAP Response" name="SOAP Response" id="505918cc-64ee-48df-af0b-8057e6fb9c12"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4b4ea8f7-1b21-4965-ab3a-3b99d4222593"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="e646243c-6ea8-4bfd-a030-929a282e05ba"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="4a861f64-8da7-4be9-a8bb-e5403ba1df01"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>clearAddreeseesForcingStatus Mission Commercial  Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="97cb0218-4c82-44ff-9858-2ca39751ec55"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateClearBaselineForcingStatusProcessing
- UpdateClearBaselineForcingStatusSent
- UpdateClearBaselineForcingStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="38a47099-c6e4-4220-9c3c-e446f8677257"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["DataPackageBaselineClearForcingProcessing",
					  "DataPackageBaselineClearForcingWaitingToSend",
					  "DataPackageBaselineClearForcingSent",
					  "DataPackageBaselineClearForcingCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>96b41db1-8295-4d59-b012-ec3060e11d3b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A22-3 -- clearAddreeseesForcingStatus for Mission Operator Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a1563eb8-8324-42e2-817c-d60c47041a78" disabled="true"><con:description>Test the function that allows the GroundApp to clear the baseline forcing status of an addressee.
 This action sets this status to false allowing an automatic transition from a future baseline to current baseline.

The request is sent to a Mission Operator Code.

Expected result : PIS shall return RequestID, send "processing", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0140], [RefSol_PIS2G_GroundApp_SyID_0141], [RefSol_PIS2G_GroundApp_SyID_0142]

Requirements update clear baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0143],  [RefSol_PIS2G_GroundApp_SyID_0144], [RefSol_PIS2G_GroundApp_SyID_0145],
[RefSol_PIS2G_GroundApp_SyID_0146]</con:description><con:settings/><con:testStep type="request" name="clearAddreeseesForcingStatus Mission Operation Code" id="3aeeb79a-3292-44e4-8701-81f490702d77"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>clearAddreeseesForcingStatus</con:operation><con:request name="clearAddreeseesForcingStatus Mission Operation Code"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:clearAddreeseesForcingStatus>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-MissionOperatorCode}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:clearAddreeseesForcingStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="03623eb2-5c5d-4c8a-8271-6784e14ca320"/><con:assertion type="SOAP Response" name="SOAP Response" id="ad0377c4-53bf-43ff-8088-7db50002c9c7"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ab0b9609-b0c4-468b-b159-b5f202ec4bb0"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="0773df7f-f95f-438c-9b7e-a0a58a83db58"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="9cd65e02-639e-472e-acb4-52396cbaa84a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>clearAddreeseesForcingStatus Mission Operation Code</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="8b59f4c3-2590-4180-8af6-5d3188080809"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateClearBaselineForcingStatusProcessing
- UpdateClearBaselineForcingStatusSent
- UpdateClearBaselineForcingStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="594e7727-5ee0-4e96-9780-64dc35be72f3"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["DataPackageBaselineClearForcingProcessing",
					  "DataPackageBaselineClearForcingWaitingToSend",
					  "DataPackageBaselineClearForcingSent",
					  "DataPackageBaselineClearForcingCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>0f6c2483-5244-4da0-8d55-da0cba804785</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A22-4 -- clearAddreeseesForcingStatus for Offline Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7a30c242-ba3e-4f9f-a043-5d7797a6ceef"><con:description>Test the function that allows the GroundApp to clear the baseline forcing status of an addressee.
 This action sets this status to false allowing an automatic transition from a future baseline to current baseline.

The request is sent to an offline Element Alpha Number.

Expected result : PIS shall return RequestID, send "processing", "waiting to send" then "timed out" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0140], [RefSol_PIS2G_GroundApp_SyID_0141], [RefSol_PIS2G_GroundApp_SyID_0142]

Requirements update clear baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0143],  [RefSol_PIS2G_GroundApp_SyID_0144], [RefSol_PIS2G_GroundApp_SyID_0145],
[RefSol_PIS2G_GroundApp_SyID_0146]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="32484ad6-6f4b-4bc5-a783-13abeb46f7ff"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="clearAddreeseesForcingStatus Offline Element Number" id="59e2c5fe-d983-4058-826f-5fccfc6d4c5f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>clearAddreeseesForcingStatus</con:operation><con:request name="clearAddreeseesForcingStatus Offline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:clearAddreeseesForcingStatus>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:clearAddreeseesForcingStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="8759b171-77ee-4e54-8f4a-ee22aff1b880"/><con:assertion type="SOAP Response" name="SOAP Response" id="475f1faf-fa19-46af-af1b-4b97655881a6"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="d228b124-2363-4b38-af09-209d84857b00"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6b4b332a-dccb-4779-be93-7926e537fbc1"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="aa2315e6-9483-4719-9bc7-3ac3db57dea8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>clearAddreeseesForcingStatus Offline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="af5fce2e-18a5-47ec-b26d-6d25353c5550"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateClearBaselineForcingStatusProcessing
- UpdateClearBaselineForcingStatusWaitingToSend
- UpdateClearBaselineForcingStatusTimedOut
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="2ea637af-aee9-4dfc-a6cc-748facbbd6ff"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["DataPackageBaselineClearForcingProcessing",
					  "DataPackageBaselineClearForcingWaitingToSend",
					  "DataPackageBaselineClearForcingTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>3125e380-898c-44a5-8c1a-4247c74391e8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A22-5 -- clearAddreeseesForcingStatus for Offline then Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f192a913-8315-489b-8839-9ed2e4643d1f"><con:description>Test the function that allows the GroundApp to clear the baseline forcing status of an addressee.
 This action sets this status to false allowing an automatic transition from a future baseline to current baseline.

The request is sent to an offline Element Alpha Number that becomes online before timeout.

Expected result : PIS shall return RequestID, send "processing", "waiting to send", "sent" then "completed" status.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0140], [RefSol_PIS2G_GroundApp_SyID_0141], [RefSol_PIS2G_GroundApp_SyID_0142]

Requirements update clear baseline forcing status :
[RefSol_PIS2G_GroundApp_SyID_0143],  [RefSol_PIS2G_GroundApp_SyID_0144], [RefSol_PIS2G_GroundApp_SyID_0145],
[RefSol_PIS2G_GroundApp_SyID_0146]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="5dccf6cf-01c9-4a67-8996-3ab861ef9599"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="clearAddreeseesForcingStatus Offline then Online  Element Number" id="f957cd87-7346-472b-9e1e-cbb52e2069a3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>clearAddreeseesForcingStatus</con:operation><con:request name="clearAddreeseesForcingStatus Offline then Online  Element Number"><con:description>Offline Addressee is identified by Element alpha number. Expected Result :The PIS shall send the Request ID and status "waiting to send"</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:clearAddreeseesForcingStatus>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:clearAddreeseesForcingStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f6dcea44-88e5-47cb-b8ce-d341d848a22c"/><con:assertion type="SOAP Response" name="SOAP Response" id="ce718c64-97de-44b9-b8f1-a94c7ed97db8"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a37bbafc-edcf-411d-9061-d1226d9b6e65"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="cf9247fa-29f2-4c4e-9a17-5daccd740bf1"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="0ccef7dd-91d4-45ee-93de-7fc1e8a9f7d2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>clearAddreeseesForcingStatus Offline then Online  Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="7d6d4c9c-1906-4b5a-a20d-a5d05d2a7d88"><con:description>Put element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is now Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="873f04d2-48e0-461a-b994-107a8f2bdf97"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateClearBaselineForcingStatusProcessing
- UpdateClearBaselineForcingStatusWaitingToSend
- UpdateClearBaselineForcingStatusSent
- UpdateClearBaselineForcingStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="d1012cee-d729-4f25-99c8-fbd89de854f8"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["DataPackageBaselineClearForcingProcessing",
					  "DataPackageBaselineClearForcingWaitingToSend",
					  "DataPackageBaselineClearForcingSent",
					  "DataPackageBaselineClearForcingCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>ee40f319-f7eb-43dd-92f6-6e91961c8a0e</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A22-6 -- clearAddreeseesForcingStatus Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b48fc0ad-ab89-4e65-b809-8516b05b29f8"><con:description>Test the function that allows the GroundApp to clear the baseline forcing status of an addressee.
 This action sets this status to false allowing an automatic transition from a future baseline to current baseline.

The request is sent with invalid informations.

Expected result : PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0329]
</con:description><con:settings/><con:testStep type="request" name="clearAddreeseesForcingStatus Unknown Element Number" id="b46354ad-e6f5-4105-898d-f44435459738"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>clearAddreeseesForcingStatus</con:operation><con:request name="clearAddreeseesForcingStatus Unknown Element Number"><con:description> Element alpha number is invalid. Expected Result : PIS shall return unknown element number error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:clearAddreeseesForcingStatus>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#DEGRADED-GEN-UnknownElementNumber}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:clearAddreeseesForcingStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="12475daf-31bf-40d0-befe-8e23092d07b1"/><con:assertion type="SOAP Response" name="SOAP Response" id="8eb985b3-8d2a-4aab-b2bb-dc0ba5f1c37b"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c07cf08a-fe48-481e-a86e-7f4d5ca95b74"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="df5dafad-4051-45ef-b69e-fb651ff70851"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:error_code[1]/text()</path><content>ELEMENT_ID_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="clearAddreeseesForcingStatus Unknown Mission ID" id="de17ba52-aa7e-4bb8-8905-0595298a0062"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>clearAddreeseesForcingStatus</con:operation><con:request name="clearAddreeseesForcingStatus Unknown Mission ID"><con:description>Mission number is invalid. Expected Result : PIS shall return unknown mission ID error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:clearAddreeseesForcingStatus>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#DEGRADED-GEN-UnknownMissionID}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:clearAddreeseesForcingStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="fe35078e-3681-4a72-810d-d382c14f66af"/><con:assertion type="SOAP Response" name="SOAP Response" id="39790e10-9ebe-43d1-808b-4faa956a7ee9"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="404d4aa0-9620-4691-a6c3-a580b4a00d34"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a07b87e9-7e49-4f50-a938-afedfeaac5f0"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:error_code[1]/text()</path><content>UNKNOWN_MISSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="clearAddreeseesForcingStatus Invalid Request Timeout" id="ccff5a85-f595-4a45-a035-f1ad58b10f0b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>clearAddreeseesForcingStatus</con:operation><con:request name="clearAddreeseesForcingStatus Invalid Request Timeout"><con:description>Request timeout is invalid. Expected Result : PIS shall return invalid request timeout error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:clearAddreeseesForcingStatus>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-MissionOperatorCode}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</dat:pReqTimeout>
      </dat:clearAddreeseesForcingStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="85797879-5066-41d2-a10d-7a108a82b37c"/><con:assertion type="SOAP Response" name="SOAP Response" id="3ed1af46-c94f-40eb-9a31-2929e4049e7c"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="d7bb3925-167c-44f1-be94-b2517a7d4326"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="c04e9553-1d9b-421f-b429-3b849f88e7ee"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:error_code[1]/text()</path><content>INVALID_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>RequestId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A24-1 -- distributeBaseline to Unknown  Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1c23f845-f236-4f42-b186-149ee16914fe"><con:description/><con:settings/><con:testStep type="request" name="distributeBaseline Element Number" id="0a5f05da-aedc-4754-9433-3bd21cfc02b3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@skip_soap_action">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline><!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>UNKNOWN_ELEMENT</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5ed1620c-4bbc-496a-b426-3ec1368fe075"/><con:assertion type="SOAP Response" name="SOAP Response" id="0cca7a29-ed06-4ebb-86c8-ccaf04311593"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="8100f550-fe46-4776-b6a1-d97e24fd570e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f6e7d516-02fb-42b4-8fe0-2b1b178c537b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>ELEMENT_ID_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="326b32fc-45a6-4032-8ffc-9249acc3eebf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="ea4ad2a9-423a-4886-bb5b-bb8f3a4a5beb"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be those notifications received:
"DataPackageDistributionProcessing",
"DataPackageFutureBaselineDefinition",
"DataPackageDistributionWaitingToTransfer",
"DataPackageDistributionTransferring",  
"DataPackageDistributionTransferred",
"DataPackageDistributionTransferred"
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="4c8fdce1-9291-4678-9769-4033e7a0598b"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageDistributionProcessing",
                          "DataPackageDistributionUnknowElementId"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
//	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A25-1 -- distributeBaseline T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7fc76136-4d64-4ba1-a858-163c891779be"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="a68f4d94-4619-4b2f-90d4-d348f742ceca"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="distributeBaseline Element Number" id="ff251953-480b-4cb3-a9b6-b659ddabdf4c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@skip_soap_action">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline><!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5ed1620c-4bbc-496a-b426-3ec1368fe075"/><con:assertion type="SOAP Response" name="SOAP Response" id="0cca7a29-ed06-4ebb-86c8-ccaf04311593"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="8100f550-fe46-4776-b6a1-d97e24fd570e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f6e7d516-02fb-42b4-8fe0-2b1b178c537b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>T2G_SERVER_OFFLINE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="aaeb4f09-b5fb-418d-b98a-97e7f3a82a48"><con:configuration/></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="acb38fee-686b-49ec-b92d-ea4aafe2e3d9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="984ceb79-fabb-4070-b30b-a694b058f33c"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageDistributionProcessing",
                          "DataPackageFutureBaselineDefinition",
                          "DataPackageT2GServerOffline"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
//	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A25-2 -- forceAddresseesFutureBaseline T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7282c8ef-5cb4-4352-a7df-bcb9cf8b7227"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="9f80e489-7add-4ef9-a359-6edad4da5727"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="forceAddresseesFutureBaseline Element Number" id="686c1935-4344-4d42-96a0-dd505f943aee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesFutureBaseline</con:operation><con:request name="forceAddresseesFutureBaseline Element Number"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesFutureBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesFutureBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2ad26916-f83b-4d99-b644-07bf2697a452"/><con:assertion type="SOAP Response" name="SOAP Response" id="50406077-d8b4-4231-831c-347c62d3bc9a"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="978f4e11-6283-4cd6-ac09-c3d41d663dbb"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [error_code]" id="82d4ecf3-24f2-4727-b88b-d11d01e68ab7"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:error_code[1]/text()</path><content>T2G_SERVER_OFFLINE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesFutureBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="f6005953-5562-47ca-b9e3-ef04bd18d026"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesFutureBaseline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesFutureBaselineResponse[1]/ns1:forceAddresseesFutureBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="c1a78ac3-c215-415f-8299-5e2f4b7b250d"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestId</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A25-3 -- forceAddresseesArchivedBaseline T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="81947934-2e21-462f-8eaf-3b0fe85cae49"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="c1676681-d508-49e9-854d-76012f31fbde"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="forceAddresseesArchivedBaseline Element Number" id="52e174f6-296a-4454-ade3-17fb2e1f0916"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>forceAddresseesArchivedBaseline</con:operation><con:request name="forceAddresseesArchivedBaseline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:forceAddresseesArchivedBaseline>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:forceAddresseesArchivedBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="057687f1-64d3-48a1-9957-bca7f4731038"/><con:assertion type="SOAP Response" name="SOAP Response" id="fde426ec-71a8-4351-bafe-4d1b12abcef2"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="0869582b-eaaa-405a-b806-9865c8b709ae"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="0ed903d4-4c08-4249-8501-07e3f6efd737"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:error_code[1]/text()</path><content>T2G_SERVER_OFFLINE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/forceAddresseesArchivedBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="6867c1d8-e26f-4ead-a503-b0f86ed8ce8b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>forceAddresseesArchivedBaseline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:forceAddresseesArchivedBaselineResponse[1]/ns1:forceAddresseesArchivedBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="f861bdb9-40af-4139-9a43-5b7aa7dba747"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineForcingStatusProcessing
- UpdateBaselineForcingStatusSent
- UpdateBaselineForcingStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="7ddc6bc2-f403-4593-b779-d642117d6310"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineForcingProcessing",
					  "DataPackageT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A25-4 -- clearAddreeseesForcingStatus T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3ac2e380-3db6-469e-a2f6-50500c13f861"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="d843f4d9-6443-48a8-90cb-c159f4578f91"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="clearAddreeseesForcingStatus Element Number" id="58db1394-bdb9-4e9f-9c2e-3bf02aca4799"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>clearAddreeseesForcingStatus</con:operation><con:request name="clearAddreeseesForcingStatus Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:clearAddreeseesForcingStatus>
         <!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pReqTimeout>${#Project#-GEN-RequestTimeout}</dat:pReqTimeout>
      </dat:clearAddreeseesForcingStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="52778183-1385-42dc-b7dd-e7066c96f6c1"/><con:assertion type="SOAP Response" name="SOAP Response" id="18327258-dcfb-4d75-828e-e0d90d41f43e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="cceb1900-bd2d-49e1-9d46-b9b50ccb3b78"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="221a6687-5f54-4623-9a85-75eb1aff7721"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:error_code[1]/text()</path><content>T2G_SERVER_OFFLINE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/clearAddreeseesForcingStatus" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="bbd9b423-af44-49ab-a98c-e6ecaa266dcc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>clearAddreeseesForcingStatus Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';

//ns1:clearAddreeseesForcingStatusResponse[1]/ns1:clearAddreeseesForcingStatusResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="eca2483a-86c1-4356-adc3-1b98fadbcb74"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateClearBaselineForcingStatusProcessing
- UpdateClearBaselineForcingStatusSent
- UpdateClearBaselineForcingStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="52a1767e-a0ac-4fc6-904b-41a8eedb24f1"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["DataPackageBaselineClearForcingProcessing",
					  "DataPackageT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A12-1 -- assignFutureBaselineToElement TestCase -- before distribution" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Tests the function thatallows the GroundApp to request from the ground PIS to assign a baseline to an element as the future baseline.
 The selected baseline will be assigned as a future baseline.

The request is sent for an existing and complete baseline.

Expected result : PIS shall return Request ID, send "processing" and "completed" status.


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0104], [RefSol_PIS2G_GroundApp_SyID_0105],
[RefSol_PIS2G_GroundApp_SyID_0106], 

Requirements update baseline assignment status :
[RefSol_PIS2G_GroundApp_SyID_0109], [RefSol_PIS2G_GroundApp_SyID_0110], 
[RefSol_PIS2G_GroundApp_SyID_0111], [RefSol_PIS2G_GroundApp_SyID_0112]</con:description><con:settings/><con:testStep type="request" name="assignFutureBaselineToElement Baseline Exist &amp; Complete"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>assignFutureBaselineToElement</con:operation><con:request name="assignFutureBaselineToElement Baseline Exist &amp; Complete"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:assignFutureBaselineToElement><!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pElementId>${#Project#-GEN-AddresseeElementNb}</dat:pElementId>
         <!--Optional:-->
         <dat:pBLVersion>${#Project#DATAPACKAGE-BaselineVersion}</dat:pBLVersion>
         <!--Optional:-->
         <dat:pActDate>${#Project#DATAPACKAGE-ActivationDateTime}</dat:pActDate>
         <!--Optional:-->
         <dat:pExpDate>${#Project#DATAPACKAGE-ExpirationDateTime}</dat:pExpDate>
      </dat:assignFutureBaselineToElement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="202a41f3-0d01-492a-8727-d53f91292943"/><con:assertion type="SOAP Response" name="SOAP Response" id="deebfd95-08af-4d86-a451-01df234723a5"/><con:assertion type="XPath Match" name="Match content of [error_code]" id="4358b506-03d4-4974-8d14-44cbae02001d"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/assignFutureBaselineToElement" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>assignFutureBaselineToElement Baseline Exist &amp; Complete</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:assignFutureBaselineToElementResponse[1]/ns1:assignFutureBaselineToElementResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateBaselineAssignmentStatusProcessing
- UpdateBaselineAssignmentStatusCompleted
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["DataPackageBaselineAssignmentProcessing",
					  "DataPackageBaselineAssignmentCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>dfa3f1ff-0442-4e12-bb44-50c8584daf0e</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1470-A15-1 -- distributeBaseline to Element NumberTestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="52c3c94f-bf62-49b4-8172-d13c74ad70ca"><con:description>Test the functionthat allows the GroundApp to request from the ground PIS to distribute the future baseline to an addressee. 
It is assumed that a future baseline was assigned to that element.

The request is sent to an Element Alpha Number.

Expected Result :The PIS shall return the Request ID, send future baseline definition and status "processing", "transferring" then "transfer completed"

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0113], [RefSol_PIS2G_GroundApp_SyID_0114], 
[RefSol_PIS2G_GroundApp_SyID_0115], [RefSol_PIS2G_GroundApp_SyID_0116]

Requirements future baseline definition notification :
[RefSol_PIS2G_GroundApp_SyID_0119], [RefSol_PIS2G_GroundApp_SyID_0120]

Requirements update package distribution status :
[RefSol_PIS2G_GroundApp_SyID_0121],  [RefSol_PIS2G_GroundApp_SyID_0122],
[RefSol_PIS2G_GroundApp_SyID_0123], [RefSol_PIS2G_GroundApp_SyID_0124]</con:description><con:settings/><con:testStep type="request" name="distributeBaseline Element Number" id="73978e7f-d620-4eca-b1e1-17cefc7db179"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_DataPackageService</con:interface><con:operation>distributeBaseline</con:operation><con:request name="distributeBaseline Element Number"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@skip_soap_action">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/DataPackage/DataPackageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://alstom.com/pacis/pis/ground/datapackage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:distributeBaseline><!--Optional:-->
         <dat:pSessionId>${#Project#INTERNAL-SessionID}</dat:pSessionId>
         <!--Optional:-->
         <dat:pTargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </dat:pTargetAddress>
         <!--Optional:-->
         <dat:pBLAttributes>
            <!--Optional:-->
            <dat:TransferMode>${#Project#DATAPACKAGE-TransferMode}</dat:TransferMode>
            <!--Optional:-->
            <dat:fileCompression>${#Project#DATAPACKAGE-FileCompression}</dat:fileCompression>
            <!--Optional:-->
            <dat:priority>${#Project#DATAPACKAGE-Priority}</dat:priority>
            <!--Optional:-->
            <dat:transferDate>${#Project#DATAPACKAGE-TransfertDate}</dat:transferDate>
            <!--Optional:-->
            <dat:transferExpirationDate>${#Project#DATAPACKAGE-TransfertExpirationDateTime}</dat:transferExpirationDate>
         </dat:pBLAttributes>
         <!--Optional:-->
         <dat:pIncr>${#Project#DATAPACKAGE-IsIncrementalUpdate}</dat:pIncr>
      </dat:distributeBaseline>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5ed1620c-4bbc-496a-b426-3ec1368fe075"/><con:assertion type="SOAP Response" name="SOAP Response" id="0cca7a29-ed06-4ebb-86c8-ccaf04311593"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="8100f550-fe46-4776-b6a1-d97e24fd570e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f6e7d516-02fb-42b4-8fe0-2b1b178c537b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:error_code[1]/text()</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/datapackage/DataPackageService/distributeBaseline" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="9eba07e4-45a3-4956-a758-d6a7a0d4edd5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>distributeBaseline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/datapackage/';
//ns1:distributeBaselineResponse[1]/ns1:distributeBaselineResult[1]/ns1:reqId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="8ef59788-e914-4d41-a496-24124fdd0c5e" disabled="true"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be those notifications received:
"DataPackageDistributionProcessing",
"DataPackageFutureBaselineDefinition",
"DataPackageDistributionWaitingToTransfer",
"DataPackageDistributionTransferring",  
"DataPackageDistributionTransferred",
"DataPackageDistributionTransferred"
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="840d1de9-2622-466f-b13e-6e07239328bd"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [["DataPackageDistributionProcessing", false],
                          ["DataPackageFutureBaselineDefinition", false],
                          ["DataPackageDistributionWaitingToTransfer", true],
                          ["DataPackageDistributionTransferring", true],
                          ["DataPackageDistributionTransferred", false]
                          ["DataPackageDistributionTransferred", true]]

def check = context.check
check.validReceivedNotificationsOptional(ListeNotifications, 600)

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
//	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>af240e90-d0a7-4959-9790-42ae0e013c9a</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="TC_PIS_Sy_1450 - InstantMessage TestSuite" id="9ff923c2-b05f-4bb8-b570-faa779cc6b59"><con:description>WEB SERVICE INSTANT-MESSAGES

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0011],[RefSol_PIS2G_GroundApp_SyID_0012],[RefSol_PIS2G_GroundApp_SyID_0013], 
[RefSol_PIS2G_GroundApp_SyID_0014],[RefSol_PIS2G_GroundApp_SyID_0015],[RefSol_PIS2G_GroundApp_SyID_0016],
[RefSol_PIS2G_GroundApp_SyID_0017],[RefSol_PIS2G_GroundApp_SyID_0018],[RefSol_PIS2G_GroundApp_SyID_0019], 
[RefSol_PIS2G_GroundApp_SyID_0020],[RefSol_PIS2G_GroundApp_SyID_0021],[RefSol_PIS2G_GroundApp_SyID_0022],
[RefSol_PIS2G_GroundApp_SyID_0023],[RefSol_PIS2G_GroundApp_SyID_0024],[RefSol_PIS2G_GroundApp_SyID_0024.1],
[RefSol_PIS2G_GroundApp_SyID_0024.2],[RefSol_PIS2G_GroundApp_SyID_0026],[RefSol_PIS2G_GroundApp_SyID_0027], 
[RefSol_PIS2G_GroundApp_SyID_0028],[RefSol_PIS2G_GroundApp_SyID_0029],[RefSol_PIS2G_GroundApp_SyID_0030], 
[RefSol_PIS2G_GroundApp_SyID_0153],[RefSol_PIS2G_GroundApp_SyID_0154],[RefSol_PIS2G_GroundApp_SyID_0031], 
[RefSol_PIS2G_GroundApp_SyID_0032],[RefSol_PIS2G_GroundApp_SyID_0033],[RefSol_PIS2G_GroundApp_SyID_0034],
[RefSol_PIS2G_GroundApp_SyID_0035],[RefSol_PIS2G_GroundApp_SyID_0036],[RefSol_PIS2G_GroundApp_SyID_0037], 
[RefSol_PIS2G_GroundApp_SyID_0038],[RefSol_PIS2G_GroundApp_SyID_0155],[RefSol_PIS2G_GroundApp_SyID_0156], 
[RefSol_PIS2G_GroundApp_SyID_0157],[RefSol_PIS2G_GroundApp_SyID_0158],[RefSol_PIS2G_GroundApp_SyID_0039],
[RefSol_PIS2G_GroundApp_SyID_0040],[RefSol_PIS2G_GroundApp_SyID_0041],[RefSol_PIS2G_GroundApp_SyID_0042],
[RefSol_PIS2G_GroundApp_SyID_0043],[RefSol_PIS2G_GroundApp_SyID_0044],[RefSol_PIS2G_GroundApp_SyID_0045], 
[RefSol_PIS2G_GroundApp_SyID_0046],[RefSol_PIS2G_GroundApp_SyID_0047],[RefSol_PIS2G_GroundApp_SyID_0048],
[RefSol_PIS2G_GroundApp_SyID_0049],[RefSol_PIS2G_GroundApp_SyID_0050],[RefSol_PIS2G_GroundApp_SyID_0051], 
[RefSol_PIS2G_GroundApp_SyID_0052]
</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A1-1 -- GetAvailableElementList TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b72a5c4d-57ab-4dcc-baa0-711e85e3a378"><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of available elements.
 This list includes also missions that are running for each element.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0011],  [RefSol_PIS2G_GroundApp_SyID_0012], [RefSol_PIS2G_GroundApp_SyID_0013], 
[RefSol_PIS2G_GroundApp_SyID_0014], [RefSol_PIS2G_GroundApp_SyID_0015], [RefSol_PIS2G_GroundApp_SyID_0016]</con:description><con:settings/><con:testStep type="request" name="GetAvailableElementList" id="b376a0b1-34f5-47eb-ac85-c44d9aaf35b2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>GetAvailableElementList</con:operation><con:request name="GetAvailableElementList" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:GetAvailableElementList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
      </ins:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2642f429-c526-4d86-8b3f-fdb2657a81dd"/><con:assertion type="SOAP Response" name="SOAP Response" id="8cb6425c-6f24-4e07-b269-a1927eb91343"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="6adf846c-4530-49b5-83a4-2df2ac3a05a2"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="90f72059-ea05-4058-b21a-04f249c57681"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveElementList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response content" id="c6ecd982-fb0c-4daa-b34c-c04de8a2a237"><con:description>Check available element in response
Also check online status</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult> PIS shall return the list of available elements.
 This list includes also missions that are running for each element.
</con:expectedResult></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A2-1 -- RetrieveMessageTemplateList Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2974657c-c7c1-48ee-9ff8-4d5bcf1f233f"><con:description>Test GroundApp  request from the ground PIS the list of available IM templates

The Adressee is identified by its Element Alpha Number. 

Expected Result : 
PIS shall return the template list extracted  from the PIS basic package.

Requirements : [RefSol_PIS2G_GroundApp_SyID_0017],  [RefSol_PIS2G_GroundApp_SyID_0018]</con:description><con:settings/><con:testStep type="request" name="RetrieveMessageTemplateList Element Number" id="39ffb2fb-cfac-4a0c-968b-9b6db109e1b4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveMessageTemplateList</con:operation><con:request name="RetrieveMessageTemplateList Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveMessageTemplateList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveMessageTemplateList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="622d223a-d449-4b2c-aa55-31ffdbc1a809"/><con:assertion type="SOAP Response" name="SOAP Response" id="bbfa55bf-e72b-427a-ab66-4bedf7a4cff4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="72b79565-60c8-407e-8d4a-e1b25f30aa75"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9eb1f317-5172-4931-823a-7a9d4fd32eb8"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response content" id="42d93cad-5927-4054-9dde-66c11b060f48"><con:description>Check template list in response</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>PIS shall return the list of available IM templates</con:expectedResult></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A2-2 -- RetrieveMessageTemplateList Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="501d9385-68c8-42a3-90b1-933691a6c53b" disabled="true"><con:description>Test GroundApp  request from the ground PIS the list of available IM templates

Adressee is identified by Mission Commercial Number. 

Expected Result : PIS shall return template list extracted  from the PIS basic package.
If the mission is running on more than one element, the list shall combine the templates from each element without duplicates.

Requirements :
 [RefSol_PIS2G_GroundApp_SyID_0017],  [RefSol_PIS2G_GroundApp_SyID_0018], [RefSol_PIS2G_GroundApp_SyID_0019]</con:description><con:settings/><con:testStep type="request" name="RetrieveMessageTemplateList Mission Commercial Number" id="5808553f-08d5-4f44-8abf-de7eb2f9a17f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveMessageTemplateList</con:operation><con:request name="RetrieveMessageTemplateList Mission Commercial Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveMessageTemplateList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveMessageTemplateList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="31f0ae54-c978-4b9b-a2f3-a1a892e7bbdd"/><con:assertion type="SOAP Response" name="SOAP Response" id="374a6d3e-40ac-4fdb-b787-dfb059507b1e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="733ed3c1-990d-4182-84f3-87947ac60c2b"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b6ceb80f-c6f5-46df-b4c2-ca5d50234821"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response content" id="96c33655-0462-4ca8-9b00-170cbfe30017"><con:description>Check template list in response</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>PIS shall return the list of available IM templates</con:expectedResult></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A2-3 -- RetrieveMessageTemplateList Mission Operator Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="90f0afe1-6ca5-4e45-ad8c-56baa7f75786" disabled="true"><con:description>Test GroundApp  request from the ground PIS the list of available IM templates

Adressee is identified by Mission Operator Code.

Expected Result : PIS shall return template list extracted  from the PIS basic package.
If the mission is running on more than one element, the list shall combine the templates from each element without duplicates.

Requirements :
 [RefSol_PIS2G_GroundApp_SyID_0017],  [RefSol_PIS2G_GroundApp_SyID_0018], [RefSol_PIS2G_GroundApp_SyID_0019]

</con:description><con:settings/><con:testStep type="request" name="RetrieveMessageTemplateList Mission Operator Code" id="90fda9bd-28e3-4d2d-a5bf-12b43ac187bb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveMessageTemplateList</con:operation><con:request name="RetrieveMessageTemplateList Mission Operator Code" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveMessageTemplateList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveMessageTemplateList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0fd9f159-95fc-4cd8-b8ff-ee49a668371a"/><con:assertion type="SOAP Response" name="SOAP Response" id="12420b62-80cf-4b1f-9fd9-0b5866b06b2b"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a2a49f59-c7fe-4c4c-9a9d-5aeb70ce7ce5"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="50e9b1c2-c09a-4151-9502-d8e170fb85ff"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response content" id="b6047105-b567-4f50-8454-6d1f0878c791"><con:description>Check template list in response</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>PIS shall return the list of available IM templates</con:expectedResult></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A2-4 -- RetrieveMessageTemplateList Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="cfd90d0a-aef0-4712-9394-8b78d22f4774"><con:description>Test GroundApp  request from the ground PIS the list of available IM templates

When the request is send with invalid information, PIS shall return an error 

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0274]
</con:description><con:settings/><con:testStep type="request" name="RetrieveMessageTemplateList Bad session ID" id="332e9ed9-cd8e-4f08-a428-c6b413f9fabe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveMessageTemplateList</con:operation><con:request name="RetrieveMessageTemplateList Bad session ID" outgoingWss="" incomingWss=""><con:description>The session ID sent is invalid</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveMessageTemplateList>
         <!--Optional:-->
         <ins:sessionId>${#Project#DEGRADED-GEN-BadSessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveMessageTemplateList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="7aa6302a-b796-4d0e-8a27-09b1b1b267fa"/><con:assertion type="SOAP Response" name="SOAP Response" id="d89e5c5d-3bd4-42dc-a479-abf11d0bb9d7"/><con:assertion type="XPath Match" name="XPath Match" id="d9b21a77-8188-4838-97f7-9cb25e1b2ba9"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="0ca2e27d-df90-4b06-af75-7e47e5f14929"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="RetrieveMessageTemplateList Unknown Mission ID" id="b2a88bb2-c683-4ff2-bded-962360933a31"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveMessageTemplateList</con:operation><con:request name="RetrieveMessageTemplateList Unknown Mission ID" outgoingWss="" incomingWss=""><con:description>Mission number is invalid</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveMessageTemplateList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownMissionID}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveMessageTemplateList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="beee9280-f3c4-4eeb-acb0-a10609cf14ff"/><con:assertion type="SOAP Response" name="SOAP Response" id="cc42749a-6668-4a2d-82f9-423522ecf52e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="27600f46-7c28-44cd-b60f-12cc8eca73f4"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="bcd6fdc9-837f-46d2-83e9-38eb8723f98a"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>UNKNOWN_MISSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Manual TestStep" id="632735f9-3ccf-4e1c-8aae-5345bd9f2242"><con:description>On PIS ground, remove current predef.lua in D:\WCF\DB\DBData\PISBASE 
</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="RetrieveMessageTemplateList Unknown Element Number" id="37da048a-b28b-4041-bdc6-5e8e672a4787"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveMessageTemplateList</con:operation><con:request name="RetrieveMessageTemplateList Unknown Element Number" outgoingWss="" incomingWss=""><con:description> Element alpha number is invalid</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveMessageTemplateList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveMessageTemplateList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a342cb15-6244-4767-aa5e-46d67b1d3113"/><con:assertion type="SOAP Response" name="SOAP Response" id="3b4b5510-83ce-4881-ae7b-bd8980817059"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c54ad649-b59b-4d53-bfd7-48601172033d"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="56b67718-3246-4eb2-b07a-3097575834ef"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>UNKNOWN_ELEMENT_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="RetrieveMessageTemplateList No Predef.lua" id="f6d28a22-6b52-4b1d-a615-3ccc47a3bc01"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveMessageTemplateList</con:operation><con:request name="RetrieveMessageTemplateList No Predef.lua" outgoingWss="" incomingWss=""><con:description>No PIS basic package is available in the database. Expected Result : PIS shall return No IM template error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveMessageTemplateList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveMessageTemplateList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c70360e0-c31f-403a-978d-6b9efdbab74c"/><con:assertion type="SOAP Response" name="SOAP Response" id="66536855-55a9-4738-ab55-489cdb3d740d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="62dd84e9-37da-4579-b477-0382fa9f5eba"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f5e3663f-f02a-47e2-8699-7a4e5157d5a0"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>TEMPLATE_FILE_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Manual TestStep 2" id="e4a23fd6-9dcd-4a2a-b57d-2002b851817d"><con:description>Use an invalid  predef.lua file (containing additional instructions other than dictionary, timer, util, predef, language)
</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="RetrieveMessageTemplateList Invalid Predef.lua" id="32fa32dd-1f2f-40a0-9d50-281b46f64308"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveMessageTemplateList</con:operation><con:request name="RetrieveMessageTemplateList Invalid Predef.lua" outgoingWss="" incomingWss=""><con:description>The PIS package does not include any IM templates. Expected Result : PIS shall return No IM template error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveMessageTemplateList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveMessageTemplateList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5415bee5-b41a-421d-872f-8d13b60604b4"/><con:assertion type="SOAP Response" name="SOAP Response" id="6179d094-ee1d-4aa0-8fec-848ee068ec5b"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="243357a7-affa-451f-a120-d84151f0f664"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6e9ed38c-46f3-4fd5-9fc2-e551e4b23ec6"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>TEMPLATE_FILE_NOT_VALID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveMessageTemplateList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A3-1 -- RetrieveStationList Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="da647918-82f5-481f-8667-c78011e68ce6" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of stations available in the LMT database.

Adressee is identified by its Element alpha number. 

Expected Result : PIS shall return station list

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0020],  [RefSol_PIS2G_GroundApp_SyID_0021], [RefSol_PIS2G_GroundApp_SyID_0022]</con:description><con:settings/><con:testStep type="request" name="RetrieveStationList Element Number" id="c4863ef6-f75b-4d60-82a4-f1a67672e4af"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveStationList</con:operation><con:request name="RetrieveStationList Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveStationList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveStationList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b7897ac4-f32c-4692-9287-bbab6467d80b"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="087822da-36c5-40f8-95a8-30cdcd1cdd36"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="49a3ba50-c203-4717-b50c-5c20bdf29d8f"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="5b15ae74-8296-4964-a4d3-e9e44114f85d"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response Content" id="3de9094d-c3f2-4546-ae47-79f4c1347210"><con:description>Check Station list in the response</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A3-2 -- RetrieveStationList Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6e3f4afc-1862-468c-8402-ce0e8fadfb7d" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of stations available in the LMT database.

Adressee is identified by Mission Commercial Number.

 Expected Result : PIS shall return station list.
If the mission is running on more than one element, the list shall combine the templates from each element without duplicates.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0020],  [RefSol_PIS2G_GroundApp_SyID_0021], [RefSol_PIS2G_GroundApp_SyID_0022]</con:description><con:settings/><con:testStep type="request" name="RetrieveStationList Mission Commercial Number" id="294d4e38-4553-4ee4-86ed-aef4f0084234"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveStationList</con:operation><con:request name="RetrieveStationList Mission Commercial Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveStationList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveStationList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="85de42e7-f658-460f-8fc6-9e79ba0796f9"/><con:assertion type="SOAP Response" name="SOAP Response" id="58de5a2a-230e-4c7d-a464-6eeaa7eb9559"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="178a7d39-81ec-4734-81f0-8404d28fe9d5"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="37bafe2b-5b4c-452a-b2cf-8ce7bc46dd0c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response Content" id="d8bf3671-3b14-40e6-b8e4-055efe3b6031"><con:description>Check Station list in the response</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A3-3 -- RetrieveStationList Mission Operator Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="625faffb-9eff-4719-adb6-e165a574e8d9" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of stations available in the LMT database.

Adressee is identified by Mission Operator Code

 Expected Result : PIS shall return station list.
If the mission is running on more than one element, the list shall combine the templates from each element without duplicates.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0020],  [RefSol_PIS2G_GroundApp_SyID_0021], [RefSol_PIS2G_GroundApp_SyID_0022]</con:description><con:settings/><con:testStep type="request" name="RetrieveStationList Mission Operator Code" id="713ea06c-79f5-4941-bd51-4175ab4a836c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveStationList</con:operation><con:request name="RetrieveStationList Mission Operator Code" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveStationList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveStationList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a28797d7-e4e4-48a8-b4ea-f6cf03e4255b"/><con:assertion type="SOAP Response" name="SOAP Response" id="9c8ca2b8-f635-49da-a0ac-b3710e911511"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="298899d3-2583-44d1-b722-ab786f0133bc"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6c0141cf-1ceb-4a62-8a40-9711c9ca7f85"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response Content" id="98d90254-61e8-4e0f-8869-a62249398606"><con:description>Check Station list in the response</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A3-4 -- RetrieveStationList Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="eb3370ff-193e-45fb-b89d-177b7094b620" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of stations available in the LMT database.

When the request is send with invalid information, PIS shall return an error 

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0275]
</con:description><con:settings/><con:testStep type="request" name="RetrieveStationList Bad Session ID" id="e94e566a-c23f-4958-b406-8b1bfd6253fa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveStationList</con:operation><con:request name="RetrieveStationList Bad Session ID" outgoingWss="" incomingWss=""><con:description>The session ID sent is invalid. Expected Result : PIS shall return Bad session ID error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveStationList>
         <!--Optional:-->
         <ins:sessionId>${#Project#DEGRADED-GEN-BadSessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveStationList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2ba89436-61cb-454d-9442-01ed81d8e70f"/><con:assertion type="SOAP Response" name="SOAP Response" id="cc52a5c7-bc17-4906-9394-0bc60f955f07"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c8994d2e-61b6-4921-998f-6076258433b5"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="10a5b0a7-1408-452e-8fb2-aee5ff36f952"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="RetrieveStationList Unknown Element Number" id="aef618ad-76e7-462f-bd29-1aee2c32d82f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveStationList</con:operation><con:request name="RetrieveStationList Unknown Element Number" outgoingWss="" incomingWss=""><con:description> Element alpha number is invalid. Expected Result : PIS shall return unknown element number error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveStationList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveStationList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c5895b8b-34a5-4a7d-b096-aea7a7dcef57"/><con:assertion type="SOAP Response" name="SOAP Response" id="c3096f10-7dd6-40c6-9936-41e1d3372295"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="cdb0ae3e-75d2-40e2-859b-c6bc9987f41a"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="80435134-0092-4121-b064-e33506824654"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>UNKNOWN_ELEMENT_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="RetrieveStationList Unknown Mission ID" id="99e7d2ec-16d3-4642-b923-cdcebf492fef"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveStationList</con:operation><con:request name="RetrieveStationList Unknown Mission ID" outgoingWss="" incomingWss=""><con:description>Mission number is invalid. Expected Result : PIS shall return unknown mission ID error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveStationList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownMissionID}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveStationList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="14608372-7d13-4a04-9ea4-ca55d642fd4f"/><con:assertion type="SOAP Response" name="SOAP Response" id="caf85a58-6764-4dff-ac10-21bd972a103d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="781555be-31f4-455c-b7bb-a5b796d6997c"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="0765ac86-f978-447a-80ed-9fb5de4564b9"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>UNKNOWN_MISSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="RetrieveStationList No Station List" id="736afd28-92db-4805-a668-6e9625ed3e78" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveStationList</con:operation><con:request name="RetrieveStationList No Station List" outgoingWss="" incomingWss=""><con:description>No LMT package is available in the database. Expected Result : PIS shall return No station list error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveStationList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveStationList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="64a54719-60d5-4a94-8e5d-a6f133e35322"/><con:assertion type="SOAP Response" name="SOAP Response" id="5ad73b2f-e69e-450e-80a1-25729066a530"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="27b4a81a-0116-427c-a8e1-9326f7c13762"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="RetrieveStationList No Station List 2" id="37b25e12-b8db-4b22-bcae-f08d370ebcaa" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>RetrieveStationList</con:operation><con:request name="RetrieveStationList No Station List 2" outgoingWss="" incomingWss=""><con:description>the LMT package does not include any station list. Expected Result : PIS shall return No station list error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:RetrieveStationList>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
      </ins:RetrieveStationList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="36e7f097-1473-4ded-ab66-134da9e58466"/><con:assertion type="SOAP Response" name="SOAP Response" id="a4952924-e03b-4702-bd58-e5acf1caceea"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="6951ce6d-efd2-406b-863e-e385fa7d30e8"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/RetrieveStationList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A4-1 -- SendPredefinedMessages Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="220b8b1c-2295-4cee-9884-bf8d5b8f4d8a"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

 IM request is sent to an online element Number.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent"
The IM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendPredefinedMessages to Online Element Number" id="d8806c31-753d-403d-bcf1-a13abbfc3775"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="be6759e9-c1b4-4211-97ee-b13bc903733e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="a17cbb57-831c-4426-9710-18cfad4f47fd"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="bca3d91c-d368-4b0d-a024-e909c602fcd6"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>d1ef1b7e-0e19-48a8-9185-171b79cef881</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A4-2 -- SendPredefinedMessages Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="237cf100-c0dd-4432-a18b-800244bce73d" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

IM request is sent to a mission commercial number.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent"
The IM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendPredefinedMessages to Mission Commercial Number" id="2c8ee08c-ab0c-49f5-8181-97c385a8dc25"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Mission Commercial Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="14d21602-fe35-4cdb-b0bd-67ac95184529"/><con:assertion type="SOAP Response" name="SOAP Response" id="04b62ccb-cade-485b-a199-204f2feab92b"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c2276af6-5c09-46a6-9784-c7e00d80a11a"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="88ca8260-15b8-419c-b5b8-1c62caa15bf6"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="32cb6fcd-12fe-445f-928d-a36c5875bf62"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Mission Commercial Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="1bb82214-590d-4c0e-afb7-8e532bb8b20f" disabled="true"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="18d1636b-9e29-4aa3-a226-90f21b51df39"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					  "InstantMessageDistributionReceived"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>ea67987a-d6c7-497c-9b2d-eaa1a436eac3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A4-3 -- SendPredefinedMessages Mission Operator Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="75ee3688-364e-45f6-a2ee-9e1f2f4afcc7" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

IM request is sent to a mission operator code.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent"
The IM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendPredefinedMessages to Mission Operator Code" id="b9f24fec-d894-42fb-9ed7-dfea5fbc7c75"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Mission Operator Code" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
                    <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c745954c-bd51-47dd-aa9e-6c03c4de7a8f"/><con:assertion type="SOAP Response" name="SOAP Response" id="e76883ae-8c39-4afd-84fc-f5620a66d6de"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="9f9585f4-4efc-4c40-b9b6-0c6a569eb436"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="97e46ca4-0126-46fa-a849-7eb7d2462db9"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="d39b3c77-886f-4b58-94dc-5a50856690e2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Mission Operator Code</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="c0471ed6-f8c5-44f3-afc8-b30dfeec0c60"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="58798e73-dc68-4fbf-ae31-9416261b4c38"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					  "InstantMessageDistributionReceived"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>0c3de051-b8f0-4c72-96c4-646596a9695b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A4-4 -- SendPredefinedMessages Offline Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="692dcfcd-2e52-4d9f-8093-58beb4023448"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

The IM is sent to an offline element.

Expected result : The PIS shall return the Request ID and send  the notification "processing", then "waiting to send" and "timed out"

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023], [RefSol_PIS2G_GroundApp_SyID_0026], 
[RefSol_PIS2G_GroundApp_SyID_0027], [RefSol_PIS2G_GroundApp_SyID_0028]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044], 
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="a7beded9-f0a3-4c73-b191-35d8041f0cf8"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendPredefinedMessages to Offline Element Number" id="a43d9ffb-ca3f-4360-9377-a188eb059405"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Offline Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
         <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5476a8a6-de25-4251-9bf7-8f422ad3d4df"/><con:assertion type="SOAP Response" name="SOAP Response" id="d7edafc7-34f4-4dcc-aa63-606f5e6dbdf6"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="e3f55cac-ee7e-48b4-8e79-3b3e5d802f41"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="0c1f8a85-5037-467e-ab1a-c28bddcbbbd7"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="7dc0bc2f-4ce4-4d90-bf54-277fdc91b474"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Offline Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="f8d7f98b-9d50-432a-880e-c234977bebbe"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusWaitingToSend
- UpdateDistributionStatusTimedOut
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="4f494648-68e5-44f7-9cea-e6283695e44e"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionWaitingToSend",
					 "InstantMessageDistributionTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>894e7784-c351-4245-9984-b4c02f99bd61</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A4-5 -- SendPredefinedMessages Offline then Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e6bf6446-b533-412d-af8a-b43a21ab6c74"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

The IM is sent to an offline element wich come back online before timeout.

Expected result : The PIS shall return the Request ID and send  the notification "processing", then "waiting to send" and "sent"
The IM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2], 
[RefSol_PIS2G_GroundApp_SyID_0026]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044], 
 [RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="6ad788e8-6576-4aaf-82ef-9969f9d3f0f8"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendPredefinedMessages to Offline Element Number" id="faa047ac-4699-4987-a650-9b68ee14b01e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Offline Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="6ab066b8-515b-4bef-b1fb-86c383795be3"/><con:assertion type="SOAP Response" name="SOAP Response" id="a84f4a8d-0499-47ce-b5d3-c005d9c70e28"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="0beddcdc-bc9f-4d71-a929-0be33f585786"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="214d06fd-acf4-4feb-aee3-f67ca977f210"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="2e9fd3d3-566b-4ad3-94bf-65bc89caf7b7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Offline Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="076201de-cb56-40f7-a3d6-c1a42bc65273"><con:description>Put Element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is now Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="3e51d38d-26c7-4a13-a0e3-f6ec2875c6af"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusWaitingToSend
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="72ea0507-2d33-4646-827d-70ad608ddb51"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionWaitingToSend",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>60f58f00-ce0a-40fd-a34e-61873a314c7d</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A4-6 -- SendPredefinedMessages Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3a657c51-c920-4000-9766-5da4dd98e633"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

When IM request is sent with invalid information, PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0276]</con:description><con:settings/><con:testStep type="request" name="SendPredefinedMessages Bad Session ID" id="7fd8f8e1-3e66-4434-8114-31954e10bb2a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages Bad Session ID" outgoingWss="" incomingWss=""><con:description>Broadcast IM request is sent with an invalid session ID.Expected result : The PIS shall return Bad session ID error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#DEGRADED-GEN-BadSessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a14ccfc7-48c0-4e22-8e4e-dcd2c137cc8b"/><con:assertion type="SOAP Response" name="SOAP Response" id="d696c0cc-7981-49b9-bad3-245286c2f1d5"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="efed54a0-286f-42c9-91bd-565f432284c8"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="fae7298e-250d-4f1b-b074-02a3a84fe2a6"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SendPredefinedMessages Unknown Element Number" id="46c4db3d-dfb1-479b-a597-9cc81d0acd5d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages Unknown Element Number" outgoingWss="" incomingWss=""><con:description>Broadcast IM request is sent with an invalid element number.Expected result : The PIS shall return Unknown element number error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="651c3b17-076c-4ba8-a465-fb3d1b59cb86"/><con:assertion type="SOAP Response" name="SOAP Response" id="789348cb-b9a3-4f2e-b26a-223ce99c8d75"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="3d51c7df-e33f-49ff-afd2-48e883fa699e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f202d8c9-aaaf-444b-9628-dec3a80777ec"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>UNKNOWN_ELEMENT_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SendPredefinedMessages Unknown Mission ID" id="0d95d5b5-3dcf-47e7-b6e1-a9ea87db491d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages Unknown Mission ID" outgoingWss="" incomingWss=""><con:description>Broadcast IM request is sent with an invalid mission ID.Expected result : The PIS shall return Invalid Mission ID  error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownMissionID}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="43cafa00-03b9-4bad-8f86-45ac7e87a9e2"/><con:assertion type="SOAP Response" name="SOAP Response" id="08443d8c-cbca-4f3a-a366-56f250e02856"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="54111387-195e-4ec0-bb12-1c337360ff94"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2f4dfdee-89a7-49b1-8d4a-ecbd11a6a1d5"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>UNKNOWN_MISSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SendPredefinedMessages Invalid Request Timeout" id="06ff7057-e5de-4794-9e4c-dc79a27472e3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages Invalid Request Timeout" outgoingWss="" incomingWss=""><con:description>Request timeout is invalid. Expected Result : PIS shall return invalid request timeout error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="698e2fc8-162f-49cc-8885-f8e953df3776"/><con:assertion type="SOAP Response" name="SOAP Response" id="968ea9bf-efdf-40df-90d0-a67a91f1e18e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="e6df0462-1c2a-4496-960c-0bd705f54349"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="88c724f2-f004-42b0-88eb-e72c179d5733"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_REQUEST_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop Remote DataStore" id="31fe9d39-cde6-4ee9-b43f-7bf09612af60"><con:description>Stop RemoteDataStoreService on PIS Ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendPredefinedMessages Data Store not accessible" id="539277ac-3917-4035-b2d0-4ded50ab755e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages Data Store not accessible" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="698e2fc8-162f-49cc-8885-f8e953df3776"/><con:assertion type="SOAP Response" name="SOAP Response" id="968ea9bf-efdf-40df-90d0-a67a91f1e18e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="e6df0462-1c2a-4496-960c-0bd705f54349"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="88c724f2-f004-42b0-88eb-e72c179d5733"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>PIS_DATASTORE_NOT_ACCESSIBLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Restart Remote DataStore" id="f3ec47a7-bd09-4fbc-bca2-01c6f3913b9e"><con:description>Restart RemoteDataStoreService on PIS Ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A4-7 -- SendPredefinedMessages with Ground command Inhibited TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0871d798-c6f1-441d-b1e8-ae601aeb8778"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

 IM request is sent to an online element Number.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent"
The IM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Inhibit Command From Ground" id="7991af9f-2057-4bd9-b911-3fa85a8427ac"><con:description>Inhibit Command from ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendPredefinedMessages to Online Element Number" id="d342a690-9d74-49c3-b216-eb971c4a412a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="13a0400a-ed83-44d7-8c1d-52b3e1fa6f61"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="b01a43bf-d4de-44b9-a605-adc6c327c673"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="c5d6a078-9432-4fe9-9980-84d9f61e7fbc"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
 				       "InstantMessageDistributionSent", 
 					   "InstantMessageDistributionReceived", 
					  "InstantMessageDistributionInhibited"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>40856ffc-6b4d-472d-a796-ee5a90037cfa</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A5-1 -- SendPredefinedMessages Element Undefined IM TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="06397b83-a010-4240-902f-fb8322279e15"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

The template of the IM is not in database.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent".
PIS shall notify ground that IM is undefined.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2], 
[RefSol_PIS2G_GroundApp_SyID_0028], [RefSol_PIS2G_GroundApp_SyID_0276]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044], 
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]

Requirements undefined IM notification :
[RefSol_PIS2G_GroundApp_SyID_0031], [RefSol_PIS2G_GroundApp_SyID_0032]</con:description><con:settings/><con:testStep type="request" name="SendPredefinedMessages to Online Element Number" id="7587990e-3d2d-4393-872f-f19faf4c540d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#DEGRADED-IM-PredefinedUndefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ad18af15-0ade-47d5-a8bc-e8d86e5b8743"/><con:assertion type="SOAP Response" name="SOAP Response" id="cd2f6d97-dc44-4dcc-ab05-dfd8b4a4f3a3"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a511570d-e4b2-472c-8941-4118f6f6f82f"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="92793ef1-5d3e-404d-825e-4b581d151bf9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="439bcf36-7edd-4128-b640-2250fce2d1ad"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
- UndefinedIM
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="47d3e591-73d9-438f-bc94-1382f35e2bef"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageUndefinedTemplateId"]


def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A6-1 -- SendPredefinedMessages Element Undefined Station ID TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8b51296a-73da-4126-aec2-633aacdce7ba"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

The station ID in the IM is unknown by the element.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent".
PIS shall notify ground that station ID is unknown.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2], 
 [RefSol_PIS2G_GroundApp_SyID_0029], [RefSol_PIS2G_GroundApp_SyID_0276]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044], 
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]

Requirements undefined station Id notification:
[RefSol_PIS2G_GroundApp_SyID_0033],  [RefSol_PIS2G_GroundApp_SyID_0034]</con:description><con:settings/><con:testStep type="request" name="SendPredefinedMessages to Online Element Number" id="3c7d9fc4-1add-4ca1-b398-4f84b3abc5e7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifierStation}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#DEGRADED-IM-PredefinedUndefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="4bdb33e4-85b5-4598-bd33-de3279804ef7"/><con:assertion type="SOAP Response" name="SOAP Response" id="b56438aa-f893-476d-828c-79d461a489a4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="5acf37a3-3f46-4b65-9a7e-2590975119e1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="3dabd149-4b6c-43d8-b398-2ce80a40dafc"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="a1892d59-9bdb-4a20-bfa9-41c6229c8436"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="1a873330-fb64-45d0-b1a5-4a7d1dbc0b82"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
- UndefinedStationID
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="41f306c4-f273-4a16-9cf2-1816df351d33"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageUndefinedStationId"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>1f21d7b1-f306-421b-a5da-e90cdf2a3d82</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A7-1 -- SendPredefinedMessages Element Unknown Car ID TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5da5e3a9-dbc8-45be-b228-5374fbf6cd1b"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

The car ID number in the IM is not valid.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent".
PIS shall notify ground that Car ID is unknown.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2], 
[RefSol_PIS2G_GroundApp_SyID_0030], [RefSol_PIS2G_GroundApp_SyID_0276]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043], [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]

Requirements unknown car Id notification :
[RefSol_PIS2G_GroundApp_SyID_0035],  [RefSol_PIS2G_GroundApp_SyID_0036]</con:description><con:settings/><con:testStep type="request" name="SendPredefinedMessages to Online Element Number" id="2c9eea57-08ed-400f-b85c-444e12f7b244"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
             
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifierCarId}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="54e02434-c915-4ce2-bf64-64addf4d8c87"/><con:assertion type="SOAP Response" name="SOAP Response" id="f6e29f98-7df6-49c7-ad85-0e4de3f22d3d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="1cd51d33-8ae7-41dd-bcec-5caee015d326"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2bf1ae78-db96-4e40-85f6-6bf8ab1bb8c3"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="765f175f-48c3-459e-b26a-d9785ddb5df1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="e60ff838-4e83-41ea-9e90-21c5aed85954"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
- UnknownCarID
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="3a92d1d1-86ac-4361-8e8d-ee973bc08fed"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					  "InstantMessageUnknownCarId"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>b26f8a41-527a-46ac-8beb-e299d0a2ab51</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A8-1 -- SendPredefinedMessages Element Invalid Delay TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2bd41c68-bdb1-4096-b5a3-937581f93214"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

The delay in the IM is not valid.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent".
PIS shall notify ground that delay is invalid.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]
[RefSol_PIS2G_GroundApp_SyID_0276]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
 [RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]

Requirements invalid delay notification :
[RefSol_PIS2G_GroundApp_SyID_0037],  [RefSol_PIS2G_GroundApp_SyID_0038]</con:description><con:settings/><con:testStep type="request" name="SendPredefinedMessages to Online Element Number" id="41a9f613-c35b-4b9d-8649-4ce790ef71eb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
       
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifierDelay}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d6b754f3-0879-440e-85e6-fdda0b983dce"/><con:assertion type="SOAP Response" name="SOAP Response" id="4a9dd781-3e48-47e0-b624-0d544d562bb6"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="1e5961db-ad72-40ee-90cc-20ddeedddd44"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Response" id="6f8124df-9b5b-4ebb-9451-1854b81f6d77"/><con:assertion type="XPath Match" name="XPath Match" id="32ab9fbd-45cf-4566-a4f0-11d1b0d9d481"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="980c1c0f-bce4-4dae-8f35-f24990b3329d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="6aba5c8f-9c89-419c-ad19-3bc9bd4c14b0"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
- InvalidDelay
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="a44ef491-9ab9-47f4-ba95-bbe34eb946b8"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageInvalidDelay"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>d9b854db-e0c0-455a-90ee-ed1e2b7c6261</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A9-1 -- SendPredefinedMessages Element Invalid Delay Reason Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b413920f-608b-43f1-941e-78e5d15c6dac"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

The delay reason code in the IM is not valid.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent".
PIS shall notify ground that delay reason code is invalid.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2], 
[RefSol_PIS2G_GroundApp_SyID_0153]
[RefSol_PIS2G_GroundApp_SyID_0276]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043], [RefSol_PIS2G_GroundApp_SyID_0044], 
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]

Requirements invalid delay reason code notification
[RefSol_PIS2G_GroundApp_SyID_0155], [RefSol_PIS2G_GroundApp_SyID_0156]</con:description><con:settings/><con:testStep type="request" name="SendPredefinedMessages to Online Element Number" id="3aba9d63-5d6c-4a30-a81e-743e37f416c0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
        
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifierDelay}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="610da714-4810-445f-a5ac-475706527a28"/><con:assertion type="SOAP Response" name="SOAP Response" id="7428e8e4-3f48-408b-b5c9-a24a2c646e02"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="2fbf926e-0def-400e-9b71-386614c01f3a"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="d319ba92-f6d2-4644-9f98-8ad3fa101704"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="cad9f2ec-b502-4183-b5e7-ee33beb2a3fb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="6340c50c-c113-49f6-9241-756b7059795c"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
- InvalidDelayReasonCode
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="c03963d6-41ca-4d74-bfa9-5350a4d94b6b"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					"InstantMessageInvalidDelayReasonCode"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>cadfe184-21ed-4ed9-9d7d-f9d528e31588</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A10-1 -- SendPredefinedMessages Element Invalid Hour value TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1e80211f-91f1-479c-91fa-ce814a9ce325"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

The hour in the IM is not valid.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent".
PIS shall notify ground that hour is invalid.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2], 
[RefSol_PIS2G_GroundApp_SyID_0154]
[RefSol_PIS2G_GroundApp_SyID_0276]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]

Requirements invalid hour value notification ;
[RefSol_PIS2G_GroundApp_SyID_0157], [RefSol_PIS2G_GroundApp_SyID_0158]</con:description><con:settings/><con:testStep type="request" name="SendPredefinedMessages to Online Element Number" id="1fbf76c8-e476-44b5-bcb5-df7d7bac857a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages to Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
           
               <ins:Identifier>${#Project#IM-PredefinedIdentifierHour}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a9976472-6127-4d5e-9ea4-797347444da9"/><con:assertion type="SOAP Response" name="SOAP Response" id="205e0683-bfd9-4474-b220-6b1020c67338"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c7f96197-6481-44e1-a033-295fca02b74c"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="695df0d3-f9b5-437c-a7c6-783de0b59e43"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="e066d431-98fc-4dbb-b4f9-cb46d54e07ee"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
- InvalidHourValue
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e037f6cd-9d59-415f-8203-2e539d53ea60"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageInvalidHour"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>165a68cc-4d81-4a5c-8265-94bdb5a25caf</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A11-1 -- CancelAllMessage Element TestCase" searchProperties="true" id="545a630e-dfb0-4ea5-9dd3-2ad65ef16e82" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the function that allows the GroundApp to request from the ground PIS to cancel the broadcast of all predefined and free text IM.

The request is sent to an element alpha number

Expected result : The PIS shall return  the Request ID and send  the notification "processing" then "sent".
the PIS shall Cancel the broadcast of all Predefined IM and free text IM for the selected addressee 

Requirements : 
RefSol_PIS2G_GroundApp_SyID_0039], [RefSol_PIS2G_GroundApp_SyID_0040]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043], [RefSol_PIS2G_GroundApp_SyID_0045],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="CancelAllMessage Online Element Number" id="59c47b68-4443-40ce-9d81-912d1f4f23b9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="12bfc368-3430-4fce-bbdc-e30d67029ba8"/><con:assertion type="SOAP Response" name="SOAP Response" id="138e9cf8-5719-40a0-a942-24a7c09bf397"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b4f5b472-e66d-447a-abe0-b749cd6272c9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a5a6c3d4-6474-473c-a8af-1ace2b1ca59f"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="7a7b824e-40be-4857-9052-044f12080f20"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelAllMessage Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="f68e7a7f-bdb0-451f-98c0-3d6c49eaa607"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="23897339-c06a-4865-914d-04d858714341"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>ef3e842f-5d5e-4a26-90c3-cf9c9450dcaf</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A11-2 -- CancelAllMessage Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="03e5392c-8d0a-4758-9924-12371d6e2616" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS to cancel the broadcast of all predefined and free text IM.

The request is sent to a mission commercial  number.

Expected result : The PIS shall return  the Request ID and send  the notification "processing" then "sent".
the PIS shall Cancel the broadcast of all Predefined IM and free text IM for the selected addressee 

Requirements : 
RefSol_PIS2G_GroundApp_SyID_0039], [RefSol_PIS2G_GroundApp_SyID_0040]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043], [RefSol_PIS2G_GroundApp_SyID_0045],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="CancelAllMessage Mission Commercial Number" id="61853abb-75f2-4aba-a80f-f54802e1f9e2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage Mission Commercial Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="4831c1dd-9ed0-47d1-9e79-f010da982b19"/><con:assertion type="SOAP Response" name="SOAP Response" id="b71a05f7-511a-48d7-82c9-65053c1dd0dd"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="e41cea3c-abea-4d61-b91e-aeab7541b204"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="17879dc9-f1b9-4aac-9f13-42c111a61dd8"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="07d66d5a-cd5f-41f7-93c2-aeb77e8b3f6d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelAllMessage Mission Commercial Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="1dce8bf5-385c-4581-9570-0441887632ea"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="da1ea510-0a1b-476e-bc5a-6dbaf5e693f0"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>c4f5a590-2c4a-4fdb-a1ae-d25d1b6e073f</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A11-3 -- CancelAllMessage Mission Operator Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="35524fc0-488e-4c93-b199-a10a4d557d33" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS to cancel the broadcast of all predefined and free text IM.

The request is sent to a mission operator code.

Expected result : The PIS shall return  the Request ID and send  the notification "processing" then "sent".
the PIS shall Cancel the broadcast of all Predefined IM and free text IM for the selected addressee 

Requirements : 
RefSol_PIS2G_GroundApp_SyID_0039], [RefSol_PIS2G_GroundApp_SyID_0040]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043], [RefSol_PIS2G_GroundApp_SyID_0045],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="CancelAllMessage Mission Operator Code" id="748d4be4-2212-4ef2-b167-d2425b3beabe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage Mission Operator Code" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="35a2d7c9-415e-4780-b752-5cdbd66f9dbf"/><con:assertion type="SOAP Response" name="SOAP Response" id="45b7da01-f329-4996-a3e3-fca338b72159"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="2552c031-7071-4fe6-8241-e5bb5d42f45b"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="4a229b59-5006-4484-8905-a41270c912b4"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="6ad853d3-5794-4835-8a8c-a3a65663f5fc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelAllMessage Mission Operator Code</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="fe93a344-5f2a-43ab-aead-713a2f5ca7aa"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="32553be8-7a04-4118-86bc-420026c63c7a"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>88d241aa-f654-424d-a63a-a4e30428cbc9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A11-4 -- CancelAllMessage Offline Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="75f359df-cbba-4455-ac38-4b806deb4fa5"><con:description>Test the function that allows the GroundApp to request from the ground PIS to cancel the broadcast of all predefined and free text IM.

The request is sent to an offline element.

Expected result : The PIS shall return  the Request ID and send  the notification "processing", "waiting to send" then  "timed out".

Requirements : 
RefSol_PIS2G_GroundApp_SyID_0039], [RefSol_PIS2G_GroundApp_SyID_0040]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043], [RefSol_PIS2G_GroundApp_SyID_0045],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="2f736ca1-27c4-4934-b668-9fee6533c866"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="CancelAllMessage Offline Element Number" id="c0f4b783-033a-4d92-996f-62bebebc44f7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage Offline Element Number" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>1</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7ae638e-3cd0-492b-b70f-9ad3ba7c1e96"/><con:assertion type="SOAP Response" name="SOAP Response" id="853a9385-e6c1-45b9-80fe-aec258eab9bf"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="2b11bc7f-fab7-44bb-a43c-4790e7608726"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b81ae17e-20aa-407b-b61d-be78c9707187"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="927346ff-b991-48c9-a48f-4d576b4784b9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelAllMessage Offline Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="7fbec5db-4ecc-4e7f-b154-819cc0fd2cc4"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusWaitingToSend
- UpdateDistributionStatusTimedOut</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="42eb9d1b-3ff2-4551-9a44-9e7e1d93b980"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionWaitingToSend",
					 "InstantMessageDistributionTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>8b84328b-46e4-485d-8eaf-6fcb36ad5a98</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A11-5 -- CancelAllMessage Offline then Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b74dc2f4-a04a-40d5-a934-ec608b3ed98d"><con:description>Test the function that allows the GroundApp to request from the ground PIS to cancel the broadcast of all predefined and free text IM.

The request is sent to an offline element which comes back online before timeout.

Expected result : The PIS shall return  the Request ID and send  the notification "processing", "waiting to send" then  "sent".
The PIS shall Cancel the broadcast of all Predefined IM and free text IM for the selected addressee 

Requirements : 
RefSol_PIS2G_GroundApp_SyID_0039], [RefSol_PIS2G_GroundApp_SyID_0040]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043], [RefSol_PIS2G_GroundApp_SyID_0045],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]
</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="12907757-6f24-47a2-b341-afa1d7828237"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="delay" name="Delay" id="75a045b0-a121-45f6-a34f-aa38407d2a7d"><con:settings/><con:config><delay>30000</delay></con:config></con:testStep><con:testStep type="request" name="CancelAllMessage Offline Element Number" id="eb1f34b3-d2dc-4ce8-840b-b780c16f0649"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage Offline Element Number" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>4</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5a17168b-4835-4282-ad88-1e1813be9c21"/><con:assertion type="SOAP Response" name="SOAP Response" id="5bb879dd-cc49-4348-9405-37748d8e839c"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b8b9735e-70c8-40a6-97dd-319fa63526fc"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="34dc78a9-3741-4966-8419-14e578bc318a"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="b5e88c6c-9a33-4381-b444-1c486b9016b1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelAllMessage Offline Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="f660360f-4fc0-44fc-947f-cc631508d99c"><con:description>Put Element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is now Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="c42e681f-8000-46ff-a453-d6c63020fa7c"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusWaitingToSend
- UpdateDistributionStatusSent</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="82be9d19-250b-4099-a0a1-29b55ad51d5c"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionWaitingToSend",
					 "InstantMessageDistributionSent"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A11-6 -- CancelAllMessage Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="117779ae-af29-4415-83f1-b1d964ac1b2b"><con:description>Test the function that allows the GroundApp to request from the ground PIS to cancel the broadcast of all predefined and free text IM.

When request is sent with invalid information, PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0289]
</con:description><con:settings/><con:testStep type="request" name="CancelAllMessage Bad Session ID" id="3edb612a-91dc-431b-9eb2-733ad958094e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage Bad Session ID" outgoingWss="" incomingWss=""><con:description>Cancel all msg request is sent with an invalid session ID.Expected result : The PIS shall return invalid session ID error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#DEGRADED-GEN-BadSessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="95543a32-0ecf-427a-812d-7e1af1d31865"/><con:assertion type="SOAP Response" name="SOAP Response" id="c8042d4f-6aaa-42a2-b13d-420afe418a09"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="633aedd2-8684-460c-9cac-8efa5040b9c3"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="3bd960c8-357b-4640-adab-3d900c1eea54"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CancelAllMessage Unknown Element Number" id="7bb8bf69-68dc-4b70-afe1-19dc42389df1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage Unknown Element Number" outgoingWss="" incomingWss=""><con:description>Cancel all msg request is sent with an invalid element number.Expected result : The PIS shall return Unknown element number error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="7b9cd89e-9b30-42d6-b4c2-950c9ba21f87"/><con:assertion type="SOAP Response" name="SOAP Response" id="55638883-b7bb-4b4f-b812-170be3dccda9"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="edec38ac-4009-4639-81dc-dec219cd7325"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="d2bd13d4-6489-4e22-af7b-ab8bab071ef2"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>UNKNOWN_ELEMENT_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CancelAllMessage Invalid Request Timeout" id="3ae0217a-9151-469b-9633-684261542605"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage Invalid Request Timeout" outgoingWss="" incomingWss=""><con:description>Request timeout is invalid. Expected Result : PIS shall return invalid request timeout error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="aad67050-5827-4a5c-ab60-49cc107b41f8"/><con:assertion type="SOAP Response" name="SOAP Response" id="ccb780ec-62f8-45a8-87a6-b58386d3919d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b1a1efb0-4d24-4963-bfd5-8ae4ffaf4972"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="44f88af5-cf13-4168-ad97-e275756b6997"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_REQUEST_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CancelAllMessage Unknown Mission ID" id="3232609c-9950-41ee-b85c-46333e0d5d18"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage Unknown Mission ID" outgoingWss="" incomingWss=""><con:description>Cancel all msg request is sent with an invalid mission ID.Expected result : The PIS shall return Invalid Mission ID error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownMissionID}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="fcb6920b-72e2-4076-8fcd-ccdfd1c3894a"/><con:assertion type="SOAP Response" name="SOAP Response" id="023a0b17-c216-46e3-80e9-5b2b0648b65a"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b0283b38-afe4-40a1-b5d4-9fe9ab2d9424"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="bbcda601-81bb-4cf0-a12b-66cae2af7806"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>UNKNOWN_MISSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>RequestID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A12-1 -- CancelScheduleMessage TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7217df0f-1e0b-41dc-a36d-8bc33575f1a8"><con:description>Test the function that allows the GroundApp to request from the ground PIS to cancel the broadcast of an instant message or a scheduled message.

The request is sent to the message request ID to cancel

Expected result : The PIS shall return  the request ID and send  the notification "processing" then "sent".
The PIS shall cancel the broadcast of the selected message
 
Requirements:
[RefSol_PIS2G_GroundApp_SyID_0041],  [RefSol_PIS2G_GroundApp_SyID_0042]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043], [RefSol_PIS2G_GroundApp_SyID_0046], 
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="CancelScheduleMessage Request ID" id="1ce6ea64-5804-4bf8-b8de-c591a4d79051"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelScheduledMessage</con:operation><con:request name="CancelScheduleMessage Request ID" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>${#Project#IM-RequestID}</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="67c991e3-894b-409a-9535-724b29b41bcd"/><con:assertion type="SOAP Response" name="SOAP Response" id="5f7af568-bd52-48ca-a652-a077e9467588"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a5987522-c7bb-4784-9594-c5cbf2517906"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6d96a854-343f-4bc0-81c6-d6a49527ddfd"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="a7610847-10af-4994-beac-9c278d649c35"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelScheduleMessage Request ID</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="b3a4080f-6304-4497-a451-313d77588b28"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="ee53d1f8-8a83-48f8-b9d7-4617d2131454"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>86472f08-6ae0-4537-b517-42342c48c2ca</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A12-2 -- CancelScheduleMessage Offline Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5bd7fb17-06f1-4ded-8e55-a194a52de3fa"><con:description>Test the function that allows the GroundApp to request from the ground PIS to cancel the broadcast of an instant message or a scheduled message.

The request is sent to the message request ID to cancel. One or more element is Offline

Expected result : The PIS shall return  the request ID and send  the notification "processing", "waiting to send" then "timed out" for the offline element.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0041],  [RefSol_PIS2G_GroundApp_SyID_0042]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043], [RefSol_PIS2G_GroundApp_SyID_0046], 
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="9a609ccc-6007-4ab7-86ff-db5b4f4f9007"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="CancelScheduleMessage Offline Element Request ID" id="f0890e04-01b3-4519-bb58-11800fd9e418"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelScheduledMessage</con:operation><con:request name="CancelScheduleMessage Offline Element Request ID" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>${#Project#IM-RequestID}</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>1</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2b31b2a7-23cf-41fc-8cf8-113b3dbaf2a4"/><con:assertion type="SOAP Response" name="SOAP Response" id="5ea12c47-cd46-4e6f-aeda-4bbed8679a31"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a9cab9ba-6e85-4f0e-b67b-11aa80879364"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f47bbcd2-44f9-4a9a-8e20-db38346e53a7"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="f1269d1f-6e8e-455d-aa8b-65b9bdd2f41f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelScheduleMessage Offline Element Request ID</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="09c73541-095c-4fdf-856b-992794ff4d5b"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusWaitingToSend
- UpdateDistributionStatusTimedOut</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="0c125529-368f-45ba-aad8-14dc34da4957"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionWaitingToSend",
					 "InstantMessageDistributionTimedOut"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>26013c0d-2943-4c0c-8989-f85d75f48b31</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A12-3 -- CancelScheduleMessage Offline then Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="141e3662-f0a6-4e8e-8435-f14135ecd31b"><con:description>Test the function that allows the GroundApp to request from the ground PIS to cancel the broadcast of an instant message or a scheduled message.

The request is sent to the message request ID to cancel. One or more element is Offline.
The offline element comes back online before timeout

Expected result : The PIS shall return  the request ID and send  the notification "processing", "waiting to send" then "sent" for the  element.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0041],  [RefSol_PIS2G_GroundApp_SyID_0042]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043], [RefSol_PIS2G_GroundApp_SyID_0046],  
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="6c38e86e-323c-4d4a-8b5c-c520ee0c5a90"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="CancelScheduleMessage Offline Element Request ID" id="2ef51838-ddac-4776-909f-5732c3751351"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelScheduledMessage</con:operation><con:request name="CancelScheduleMessage Offline Element Request ID" outgoingWss="" incomingWss=""><con:description>Cancel IM request is sent to an offline element.Expected result : The PIS shall send the Request ID &amp; the notification "waiting to send"</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>${#Project#IM-RequestID}</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>4</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="fb4014a9-3072-4e64-8469-49f7ced0b111"/><con:assertion type="SOAP Response" name="SOAP Response" id="7b1b8a68-beb4-4ead-845e-a3bd8c6f2cf3"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4a95b9e7-8f43-433d-a093-afa818f26f39"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="619ec2df-8cdd-41b1-af59-6900eb6054ae"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="616ec8de-5952-4cfe-a545-e4929606fcb8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelScheduleMessage Offline Element Request ID</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="63c4863a-816c-49f6-aeb3-fab8a6331120"><con:description>Put Element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is now Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="8c2e900b-7d03-43e7-b543-3046341f1036"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusWaitingToSend
- UpdateDistributionStatusSent</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="1e1ac941-bf9f-472b-92a9-1c70777f4452"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionWaitingToSend",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>dc522fb0-32c7-4d7f-afe3-db857d514c5e</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A12-4 -- CancelScheduleMessage Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="de6ce477-d1a9-47fb-b309-507035e3565f"><con:description>Test the function that allows the GroundApp to request from the ground PIS to cancel the broadcast of an instant message or a scheduled message.

When the request is sent with invalid informations, the PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0290]
</con:description><con:settings/><con:testStep type="request" name="CancelScheduleMessage Bad Session ID" id="bfe8572b-f620-4e17-8ff6-8c9f9eb58497"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelScheduledMessage</con:operation><con:request name="CancelScheduleMessage Bad Session ID" outgoingWss="" incomingWss=""><con:description>Cancel IM request is sent with an invalid session ID.Expected result : The PIS shall return Bad Session ID error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#DEGRADED-GEN-BadSessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>${#Project#IM-RequestID}</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9f10fa9d-617f-435e-a66a-e577f44c7abb"/><con:assertion type="SOAP Response" name="SOAP Response" id="c9af112f-6f49-4ba4-a879-6c20e60aae38"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="383b100b-e16b-4163-8bea-2f192f7c7a98"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b4664c28-f653-4027-b668-13841e9675ca"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CancelScheduleMessage  Invalid Request Timeout" id="bc367570-32ff-4c52-a5d9-d9ceb3a712b0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelScheduledMessage</con:operation><con:request name="CancelScheduleMessage  Invalid Request Timeout" outgoingWss="" incomingWss=""><con:description>Request timeout is invalid. Expected Result : PIS shall return invalid request timeout error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>${#Project#IM-RequestID}</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a6d3531a-b5d9-4c2f-b5d5-f296b00a2742"/><con:assertion type="SOAP Response" name="SOAP Response" id="38f33b5d-a03e-4db2-af98-3714159f104d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="be6a07ba-b895-413a-b162-d4f6cc46050b"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f3a49188-773d-4f45-88b2-c67afeb95a4a"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_REQUEST_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A14-1 -- IM templates list update notification TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="eeead626-813f-4e50-859f-3cd018ebcfbe" disabled="true"><con:description>Test the function that allows the PIS to notify the GroundApp that an element’s IM templates list has been updated.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0049], [RefSol_PIS2G_GroundApp_SyID_0050]</con:description><con:settings/><con:testStep type="manualTestStep" name="IM Template list of an element is updated" id="82a0a070-f11f-4623-a06b-fdea9f11898e"><con:description>Update IM template list of an element</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>IM template list Updated</con:expectedResult></con:config></con:testStep><con:testStep type="mockresponse" name="IM templates list update notification" id="6afcf76f-3307-4cdd-931b-9de7b926c4b7"><con:settings/><con:config xsi:type="con:MockResponseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NotificationAppGroundBinding</con:interface><con:operation>SendNotification</con:operation><con:path>/</con:path><con:port>8080</con:port><con:response><con:settings/><con:responseContent><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:app="http://alstom.com/pacis/pis/schema/appground/">
   <soap:Header/>
   <soap:Body>
      <app:SendNotificationResponse/>
   </soap:Body>
</soap:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:response></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A15-1 -- Stations list update notification TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7f36dce9-0802-439a-9d9c-e8124742893a" disabled="true"><con:description>Test the function that allows the PIS to notify the GroundApp that an element’s stations list has been updated.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0051], [RefSol_PIS2G_GroundApp_SyID_0052]</con:description><con:settings/><con:testStep type="manualTestStep" name="Stations list of an element is updated" id="99dc754b-b3c4-4f22-948d-e9945304c9f6"><con:description>Update Stations list of an element</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>IM template list Updated</con:expectedResult></con:config></con:testStep><con:testStep type="mockresponse" name="stations list update notification" id="72e90eca-a804-4b49-b9d9-19fddb6fce58"><con:settings/><con:config xsi:type="con:MockResponseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NotificationAppGroundBinding</con:interface><con:operation>SendNotification</con:operation><con:path>/</con:path><con:port>8080</con:port><con:response><con:settings/><con:responseContent><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:app="http://alstom.com/pacis/pis/schema/appground/">
   <soap:Header/>
   <soap:Body>
      <app:SendNotificationResponse/>
   </soap:Body>
</soap:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:response></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A16-1 -- SendScheduledMessages Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fb3fcad3-c3b8-404b-be34-78d5d6c0208c"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

 IM request is sent to an online element Number.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent"
The IM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendScheduledMessage to Online Element Number" id="cc50e078-ea85-40fd-9ee1-5912dae9451f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="98d3db06-7438-4a57-b868-5a18456a520a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Online Element Number</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns2='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';


//ns2:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="SMReqID" id="480225b5-e825-4e51-b460-53e23bb7b774"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>SMReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Online Element Number</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns2='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';



//ns2:RequestId[1]</con:sourcePath><con:targetType>IM-RequestID</con:targetType><con:targetStep>#Project#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="6dee906c-8f30-45a8-8fc7-7d5a69ec226b"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="0293d49c-edcf-442d-9828-e68aa9490c49"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>7d43f489-1160-4d86-9e74-f56f20e13b4c</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A16-2 -- SendScheduledMessage Element Undefined Template ID TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e4554491-ad75-47d1-a4e4-880a5eeafb2c"><con:description>Test the function that allows the GroundApp to request from the ground PIS to send a scheduled message.

SM request is sent targeting an online element Number, with a scheduled template ID that is undefined.

Expected result : The PIS shall return Request ID and  send  the notification "processing" then  "undefined template ID"
The SM is not distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023], [RefSol_PIS2G_GroundApp_SyID_0024.1],
[RefSol_PIS2G_GroundApp_SyID_0028]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendScheduledMessage to Online Element Number" id="6b2d2018-5dbb-4bfc-ab15-373c5d696d2e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Online Element Number" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendScheduledMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#DEGRADED-IM-ScheduledIdentifierUndefined}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="12012894-c72d-4adb-9794-71e2e9d42cec"/><con:assertion type="Schema Compliance" id="fd2035fd-0cc6-4e63-aff9-a8f04720d3f9"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="358697f0-ad8e-4897-8454-781d19a1e1a7"/><con:assertion type="XPath Match" name="XPath Match" id="bfd4cd86-1681-4c99-80f5-c44fdba772b5"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="009e5e8b-863b-46d7-9e0e-43828b89b8a2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="21af4499-e0af-40e9-afa1-04bdcc656745"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="bd24596a-ceac-424e-ba6b-d0e960523e1c"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageUndefinedTemplateId"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>007876fd-eadd-4434-a0c0-90747a130f81</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A16-3 -- SendScheduledMessage Element Invalid Activation Period TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0ce1a0ba-14f7-40d1-bc32-479986ca6827"><con:description>Test the function that allows the GroundApp to request from the ground PIS to send a scheduled message.

SM request is sent targeting an online element Number, with an invalid scheduled period.

Expected result : The PIS shall return Request ID and  send  the notification "processing" then  "invalid scheduled period"
The SM is not distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023], [RefSol_PIS2G_GroundApp_SyID_0024.1],

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendScheduledMessage to Online Element Number" id="5ec1efa6-6465-48f7-a576-9558e04ef7af"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Online Element Number" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendScheduledMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#DEGRADED-IM-ScheduledEndDateInvalid}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="85c5deef-eec7-4831-9c68-7ab5b31bf2eb"/><con:assertion type="Schema Compliance" id="27395c77-4e0e-48ae-8d83-7bcef0ad75a6"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2dfa1d28-c3be-4b70-aa1c-692570767650"/><con:assertion type="XPath Match" name="XPath Match" id="6a1decd8-5064-4874-8a25-0f9d56ca64dd"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="8ec6829a-fda1-4f2d-96ff-b6d81b94efc2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="c3ef4b86-0525-407b-b14c-a3880abd8e2a"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="bb3ba876-fd78-434d-97cc-5e4c908cd34e"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageInvalidScheduledPeriod"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>5b8b0ee0-7254-4d82-bf08-e97d41cc672f</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A16-4 -- SendScheduledMessage Element Invalid Text TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="53d04620-818c-4e50-baed-3f555221d3d5"><con:description>Test the function that allows the GroundApp to request from the ground PIS to send a scheduled message.

SM request is sent targeting an online element Number, with an invalid scheduled message text (too big, > 16KB).

Expected result : The PIS shall return Request ID and  send  the notification "processing" then  "invalid text"
The SM is not distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023], [RefSol_PIS2G_GroundApp_SyID_0024.1],

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendScheduledMessage to Online Element Number" id="8b477e06-bd49-4e77-ab95-c3330e8e6680"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Online Element Number" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendScheduledMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#DEGRADED-IM-ScheduledMessageTextInvalid}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c496dcfc-c9bf-4b09-94e3-1cdd522e7979"/><con:assertion type="Schema Compliance" id="c295b0bc-1a5c-4ccd-91cc-3d5f41228ae5"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="13e1738e-1df5-4c9b-a72e-9995cd9dd97f"/><con:assertion type="XPath Match" name="XPath Match" id="53da98ce-46b4-4928-8760-c88daf4d4cd3"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_CONTEXT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="b1ad126c-6ae8-49b3-a306-2766054f8f40"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="f9ea3008-51bd-451f-bc79-2a84c7f1a4d0"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="6d1cd6e7-6b7f-4c57-84d6-d21e57ac23de" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageInvalidText"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>cd30c855-4abb-428b-94e5-68781aee4518</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A16-5 -- SendScheduledMessage Element MessageLimitExceeded TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="226dd00c-ed4c-4d05-82fc-631235dc487b"><con:description>Test the function that allows the GroundApp to request from the ground PIS to send a scheduled message.

SM request is sent targeting an online element Number that already has a max number of SMs stored.

Expected result : The PIS shall return  Request ID and  send  the notifications "processing", "sent", "received", "message limit exceeded"
The SM is distributed to the selected addressee, but is then discarded.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Manual TestStep" id="8b2d33c0-a1d1-4f75-87a8-5948f910e6b7"><con:description>Remove all active scheduled messages and configure Maximum number of scheduled messages to 3 in Media Registry (VMC3GSIF/Plugins/SIFWSInstantMessageServer).</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendScheduledMessage to Online Element Number" id="b06a5eed-4b0c-474b-abb7-678bc33fd670"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Online Element Number" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendScheduledMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c2a17224-31a5-41db-87d7-e43a95e52d7e"/><con:assertion type="Schema Compliance" id="f25d145e-22d6-4224-8e11-313d46aeab2b"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2d26134e-bf09-492f-94b4-11954bcb8467"/><con:assertion type="XPath Match" name="XPath Match" id="7cc37ce6-9320-4f47-880d-6d9aeda0613d"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SendScheduledMessage to Online Element Number 2" id="65dbc6ac-9c92-40bf-9f56-d41911ad33f9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Online Element Number 2" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendScheduledMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c2a17224-31a5-41db-87d7-e43a95e52d7e"/><con:assertion type="Schema Compliance" id="f25d145e-22d6-4224-8e11-313d46aeab2b"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2d26134e-bf09-492f-94b4-11954bcb8467"/><con:assertion type="XPath Match" name="XPath Match" id="7cc37ce6-9320-4f47-880d-6d9aeda0613d"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SendScheduledMessage to Online Element Number 3" id="67231737-1d0e-403c-a272-e231052865d7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Online Element Number 3" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendScheduledMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c2a17224-31a5-41db-87d7-e43a95e52d7e"/><con:assertion type="Schema Compliance" id="f25d145e-22d6-4224-8e11-313d46aeab2b"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2d26134e-bf09-492f-94b4-11954bcb8467"/><con:assertion type="XPath Match" name="XPath Match" id="7cc37ce6-9320-4f47-880d-6d9aeda0613d"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e31a81a0-7cc0-4cc2-9152-b0e2a3d1f895"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="Start mock" id="81ba86cb-0409-47f7-8077-59267b942807"><con:settings/><con:config><script>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
</script></con:config></con:testStep><con:testStep type="request" name="SendScheduledMessage to Online Element Number 4" id="68f8a4c7-13ab-40fd-bc56-62ec57bf7c95"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Online Element Number 4" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendScheduledMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c2a17224-31a5-41db-87d7-e43a95e52d7e"/><con:assertion type="Schema Compliance" id="f25d145e-22d6-4224-8e11-313d46aeab2b"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2d26134e-bf09-492f-94b4-11954bcb8467"/><con:assertion type="XPath Match" name="XPath Match" id="7cc37ce6-9320-4f47-880d-6d9aeda0613d"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="f8933032-05b8-4877-a8f0-842f88b6ba57"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="5a4e6128-e40f-472c-8971-3ea1c5e3b8ea"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="b81a8e85-caa1-4d27-a68c-222f6928c6b4"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = [ "InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived",
					 "InstantMessageMessageLimitExceeded"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript/><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>ada7675d-33b1-4eac-9655-2db54378b84b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A16-6 -- SendScheduledMessage Element Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ef3acb2d-c80e-41af-b7e0-89bf8c125cf5"><con:description>Test the function that allows the GroundApp to request from the ground PIS to send a scheduled message.

SM request is sent to an offline element Number.

Expected result : The PIS shall return  the request ID and send  the notification "processing", "waiting to send" then "timed out" for the offline element.
The SM is not distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1],[RefSol_PIS2G_GroundApp_SyID_0026],
[RefSol_PIS2G_GroundApp_SyID_0027]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="c816cf2d-1357-4bc7-871d-752bd2e855fc"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendScheduledMessage to Offline Element Number" id="4944c25a-ceea-4008-945b-db3e8a008069"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Offline Element Number" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendScheduledMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a8f87fb0-efaa-4bc4-a6e9-9bee880b6c9f"/><con:assertion type="Schema Compliance" id="f1c35b74-757f-4eca-b770-77588cfedc06"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="c7b62635-3ce5-4f33-b5b5-b9eb5cecc2b8"/><con:assertion type="XPath Match" name="XPath Match" id="f6859dde-5c7a-4dd7-83a8-ec1e52b36480"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="1a6138af-961a-46e8-9062-e834e3cc5fc8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Offline Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="SMReqID" id="f7a87989-03fd-4f5e-abd6-d53e4684ce86"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>SMReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Offline Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>IM-RequestID</con:targetType><con:targetStep>#Project#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="e5c7d0cf-6a4c-43d1-b552-198f2e83bdff"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="9eab0436-10f7-4573-b1fc-99508fc2076c"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionWaitingToSend",
					 "InstantMessageDistributionTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>c5724eea-4c84-49be-91fd-804967d53a87</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A16-7 -- SendScheduledMessage Element Offline then Online TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="879d59bd-2cd4-4328-9c17-4441e9a36629"><con:description>Test the function that allows the GroundApp to request from the ground PIS to send a scheduled message.

SM request is sent to an offline element Number that becomes online before request times out.

Expected result : The PIS shall return  the request ID and send  the notification "processing", "waiting to send" then "sent", "received" for the offline element.
The SM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1],[RefSol_PIS2G_GroundApp_SyID_0026],

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="f170ddd6-a0bb-4ca3-aa32-b9bca1a034f2"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendScheduledMessage to Offline Element Number" id="1b90bccb-c577-4cd3-9932-481c4866fa44"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Offline Element Number" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendScheduledMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="11a8dae6-4058-4b33-a125-8c3011b24b45"/><con:assertion type="Schema Compliance" id="b36cc90a-120d-4407-9ff7-09dc4668c89e"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="a406febf-5c9d-422c-940c-b27f8300fc6e"/><con:assertion type="XPath Match" name="XPath Match" id="f689f6e2-28d4-479a-bcba-e226132a0132"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="b8e70621-7d71-4c92-9424-aaea5fa30737"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Offline Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="SMReqID" id="cfe14162-5dad-465f-bdfb-dd161ac1a141" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>SMReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Offline Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>IM-RequestID</con:targetType><con:targetStep>#Project#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element Online" id="634d4207-d7ce-4f94-b2c5-ed8416940660"><con:description>Put Element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="a6be9b47-b00a-4545-8006-1ba548b500f9"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="4a0e42db-6f2f-4c62-837b-c08f01e84dba"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionWaitingToSend",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>57433ec6-a81e-450d-aecf-8de48eda5e9b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A16-8 -- SendScheduledMessages Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8914f002-520b-4699-bb8c-3377185548c8" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

 IM request is sent to an online element Number.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent"
The IM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendScheduledMessage to Mission Commercial Number" id="482d9181-8be6-4249-82e3-317aac3e0503"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Mission Commercial Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="cf8a2620-4f1f-4749-be48-3a42f7aa415b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Mission Commercial Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="SMReqID" id="1c903eb4-9dbf-4a85-978a-43927330be43"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>SMReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Mission Commercial Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>IM-RequestID</con:targetType><con:targetStep>#Project#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="ef9ce986-7b18-4156-aaf6-f2fb5db41106"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="4f2e7563-9902-4219-b611-67d7e961e012"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>34b8304d-4ff7-4fd9-9ec5-007e171a632a</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A16-9 -- SendScheduledMessages Mission Operator Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="51427937-6d9f-4190-8d4a-0967508e9caa" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

 IM request is sent to an online element Number.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent"
The IM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendScheduledMessage to Mission Operator Code" id="eed4eb35-342a-4371-b183-1477c8c649a0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendScheduledMessage</con:operation><con:request name="SendScheduledMessage to Mission Operator Code" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:FreeText>${#Project#IM-ScheduledMessageText}</ins:FreeText>
            <ins:Identifier>${#Project#IM-ScheduledIdentifier}</ins:Identifier>
            <ins:Period>
               <ins:EndDateTime>${#Project#IM-ScheduledDateEnd}</ins:EndDateTime>
               <ins:StartDateTime>${#Project#IM-ScheduledDateStart}</ins:StartDateTime>
            </ins:Period>
         </ins:Message>
      </ins:SendScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="7ab48800-6d42-4465-90e1-ae05d6069730"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Mission Operator Code</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="SMReqID" id="f2dac4c2-2a23-42d8-bf71-37bf225f8458"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>SMReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendScheduledMessage to Mission Operator Code</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>IM-RequestID</con:targetType><con:targetStep>#Project#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="d4d6c79c-56b1-405f-8b7e-c42b13bb221e"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="901b24a3-d9ee-412d-add7-f179cf94ca22"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>8843b1b0-55a8-43cc-8050-b74e794188f1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A17-1 -- SendFreeTextMessages Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="18b3c8f7-fef7-493d-9566-f0952a53e6cf"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

 IM request is sent to an online element Number.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent"
The IM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendFreeTextMessage to Online Element Number" id="de993a99-4d42-4a7f-9bdf-f9382e5acac2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendFreeTextMessage</con:operation><con:request name="SendFreeTextMessage to Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendFreeTextMessage><!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:AttentionGetter>${#Project#IM-FreeTextAttentionGetter}</ins:AttentionGetter>
            <ins:DelayBetweenRepetitions>${#Project#IM-FreeTextDelayBetweenRepetition}</ins:DelayBetweenRepetitions>
            <ins:DisplayDuration>${#Project#IM-FreeTextDuration}</ins:DisplayDuration>
            <ins:FreeText>${#Project#IM-FreeTextContent}</ins:FreeText>
            <ins:Identifier>${#Project#IM-FreeTextIdentifier}</ins:Identifier>
            <ins:NumberOfRepetitions>${#Project#IM-FreeTextNumberRepetitions}</ins:NumberOfRepetitions>
         </ins:Message>
      </ins:SendFreeTextMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="2552faf7-df69-4dd2-b7e9-d0c42686dcff"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendFreeTextMessage to Online Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="75b573e8-adae-4149-b395-576765b89b9a"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="df0fce6f-14e8-4dcb-994b-d8aec07b0960"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>51191e8a-9c7d-4b1e-bcaf-371d149cf77d</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A17-2 -- SendFreeTextMessage Element Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="bf4e9eae-a77b-4fdb-8e61-066030dece4c"><con:description>Test the function that allows the GroundApp to request from the ground PIS to send a free-text IM.

IM request is sent to an offline element Number.

Expected result : The PIS shall return  the request ID and send  the notification "processing", "waiting to send" then "timed out" for the offline element.
The IM is not distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1],[RefSol_PIS2G_GroundApp_SyID_0026],
[RefSol_PIS2G_GroundApp_SyID_0027]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="77381226-3f11-4f7e-a5d5-c69b2d34d1bf"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendFreeTextMessage to Offline Element Number" id="2a4b2d73-c5dc-48f3-b36a-fe49d0497fb6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendFreeTextMessage</con:operation><con:request name="SendFreeTextMessage to Offline Element Number" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendFreeTextMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:AttentionGetter>${#Project#IM-FreeTextAttentionGetter}</ins:AttentionGetter>
            <ins:DelayBetweenRepetitions>${#Project#IM-FreeTextDelayBetweenRepetition}</ins:DelayBetweenRepetitions>
            <ins:DisplayDuration>${#Project#IM-FreeTextDuration}</ins:DisplayDuration>
            <ins:FreeText>${#Project#IM-FreeTextContent}</ins:FreeText>
            <ins:Identifier>${#Project#IM-FreeTextIdentifier}</ins:Identifier>
            <ins:NumberOfRepetitions>${#Project#IM-FreeTextNumberRepetitions}</ins:NumberOfRepetitions>
         </ins:Message>
      </ins:SendFreeTextMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0061bc81-04ca-4128-8b16-e51f67ed4615"/><con:assertion type="Schema Compliance" id="b70baea4-5861-4636-a7b5-3c1e619ad62b"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="15e3aac6-1181-4e51-9658-686eec14f271"/><con:assertion type="XPath Match" name="XPath Match" id="8fc1f777-d76d-4e67-92e6-352d40de7c35"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="bc90d714-63db-4440-b48a-9d1b9a65c9ce"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendFreeTextMessage to Offline Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="6604dd53-cd4f-4c66-879a-517b4d6ff5fc"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e6c37270-1e23-4b6d-9bae-0bf45b4ac89f"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionWaitingToSend",
					 "InstantMessageDistributionTimedOut"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>b7e265aa-aa4f-4f4d-b1c7-a8bc625e33d9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A17-3 -- SendFreeTextMessage Element Offline then Online TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c2a865f9-bd16-40b9-b56e-16dc1ad1b636"><con:description>Test the function that allows the GroundApp to request from the ground PIS to send a free-text IM.

IM request is sent to an offline element Number that becomes online before request times out.

Expected result : The PIS shall return  the request ID and send  the notification "processing", "waiting to send" then "sent", "received" for the offline element.
The IM is distributed to the selected addressee

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1],[RefSol_PIS2G_GroundApp_SyID_0026],

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="69db65ff-c940-4b92-9ab7-c08d43c910d7"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendFreeTextMessage to Offline Element Number" id="43368d9e-523e-4502-9edd-b1ccae8348a6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendFreeTextMessage</con:operation><con:request name="SendFreeTextMessage to Offline Element Number" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
	  <ins:SendFreeTextMessage>
		 <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
			<sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:AttentionGetter>${#Project#IM-FreeTextAttentionGetter}</ins:AttentionGetter>
            <ins:DelayBetweenRepetitions>${#Project#IM-FreeTextDelayBetweenRepetition}</ins:DelayBetweenRepetitions>
            <ins:DisplayDuration>${#Project#IM-FreeTextDuration}</ins:DisplayDuration>
            <ins:FreeText>${#Project#IM-FreeTextContent}</ins:FreeText>
            <ins:Identifier>${#Project#IM-FreeTextIdentifier}</ins:Identifier>
            <ins:NumberOfRepetitions>${#Project#IM-FreeTextNumberRepetitions}</ins:NumberOfRepetitions>
         </ins:Message>
      </ins:SendFreeTextMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9b9212fd-4ad9-4a9b-bf51-48bf9d17104b"/><con:assertion type="Schema Compliance" id="ab76b319-cfc5-474f-a9d8-2da68bd1ef5c"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2913ce23-d897-4e83-9129-7df417e3d841"/><con:assertion type="XPath Match" name="XPath Match" id="98fd23d1-f764-49db-b588-cf4447475ca8"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="a3deec2b-a4c9-4646-a68a-43f3871d0c69"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendFreeTextMessage to Offline Element Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element Online" id="4cb47f93-d1b8-4b58-bd7e-f50e9853fabb"><con:description>Put Element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="50844c4c-f1d7-45c3-aaff-e67bef808b7f"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="cd1269ae-82e6-4f98-8161-4a42852c66b2"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionWaitingToSend",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>b9387101-cc60-4e19-af17-3b8bf709c9cd</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A17-4 -- SendFreeTextMessages Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="32f9637a-ffcd-4e14-a4f0-a9817f590801" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

 IM request is sent to an online element Number.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent"
The IM is distributed to the selected mission commercial number

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendFreeTextMessage to Mission Commercial Number" id="0350df0a-aeed-4c0c-b7a5-f40022838ee9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendFreeTextMessage</con:operation><con:request name="SendFreeTextMessage to Mission Commercial Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendFreeTextMessage><!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:AttentionGetter>${#Project#IM-FreeTextAttentionGetter}</ins:AttentionGetter>
            <ins:DelayBetweenRepetitions>${#Project#IM-FreeTextDelayBetweenRepetition}</ins:DelayBetweenRepetitions>
            <ins:DisplayDuration>${#Project#IM-FreeTextDuration}</ins:DisplayDuration>
            <ins:FreeText>${#Project#IM-FreeTextContent}</ins:FreeText>
            <ins:Identifier>${#Project#IM-FreeTextIdentifier}</ins:Identifier>
            <ins:NumberOfRepetitions>${#Project#IM-FreeTextNumberRepetitions}</ins:NumberOfRepetitions>
         </ins:Message>
      </ins:SendFreeTextMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="1cb1d1ac-b499-4847-950b-9787e50b6d08"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendFreeTextMessage to Mission Commercial Number</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="39eb3102-b4dc-4da3-8285-dd9a042c4169"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="5fa289b3-01ec-4a3c-9e03-50ded5da0525"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>d58eccd5-8dc0-4497-bf57-6bf5766385d0</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A17-5 -- SendFreeTextMessages Mission Operator CodeTestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="791e7bba-6856-49da-9632-e2e4449b5a57" disabled="true"><con:description>Test the function that allows the GroundApp to request from the ground PIS to broadcast IM.

 IM request is sent to an Mission Operator Code.

Expected result : The PIS shall return  Request ID and  send  the notification "processing" then  "sent"
The IM is distributed to the selected mission commercial number

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0023],  [RefSol_PIS2G_GroundApp_SyID_0024], 
[RefSol_PIS2G_GroundApp_SyID_0024.1], [RefSol_PIS2G_GroundApp_SyID_0024.2]

Requirements update distribution status :
[RefSol_PIS2G_GroundApp_SyID_0043],  [RefSol_PIS2G_GroundApp_SyID_0044],
[RefSol_PIS2G_GroundApp_SyID_0047], [RefSol_PIS2G_GroundApp_SyID_0048]</con:description><con:settings/><con:testStep type="request" name="SendFreeTextMessage to Mission Operator Code" id="119a1c93-750e-4fa7-9e59-d10871b47b29"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendFreeTextMessage</con:operation><con:request name="SendFreeTextMessage to Mission Operator Code" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendFreeTextMessage><!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Message>
            <ins:AttentionGetter>${#Project#IM-FreeTextAttentionGetter}</ins:AttentionGetter>
            <ins:DelayBetweenRepetitions>${#Project#IM-FreeTextDelayBetweenRepetition}</ins:DelayBetweenRepetitions>
            <ins:DisplayDuration>${#Project#IM-FreeTextDuration}</ins:DisplayDuration>
            <ins:FreeText>${#Project#IM-FreeTextContent}</ins:FreeText>
            <ins:Identifier>${#Project#IM-FreeTextIdentifier}</ins:Identifier>
            <ins:NumberOfRepetitions>${#Project#IM-FreeTextNumberRepetitions}</ins:NumberOfRepetitions>
         </ins:Message>
      </ins:SendFreeTextMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="acfb8d7f-cbc3-44b7-8936-3991b72a72e8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendFreeTextMessage to Mission Operator Code</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="8363cc35-7bb8-4e82-9d6c-59c255ada31b"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="85522a03-d33b-4b97-a418-bb7c10f02e79"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageDistributionReceived"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>e9bde8f1-bc55-42a1-8cb3-276b9b133e4e</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A18-1 -- SendPredefinedMessages Internal Error TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="df3d0d6c-f803-4b47-b680-6412efc09f0f"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Generate Internal Error" id="e59d3b39-6344-44ea-9e38-b8fe9eaee082"><con:description/><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendPredefinedMessages" id="5e3fd189-8e90-46a8-8e40-5420ba875e3f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="676c799e-5368-46e4-aba8-532e9b259417"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="926bac0b-4e28-4646-b268-11f2048868e9"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e3ef247d-10a3-4ae1-bbc6-42a42c0ca10b"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageInternalError"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>03c266c1-cae9-408b-a722-c502ba588dc0</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A18-2 -- CancelAllMessages Internal Error TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5a3974d3-064d-445a-87ac-0d66c2a9d701"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Generate Internal Error" id="cc07baa1-121d-4820-9df4-eb34b055d136"><con:description/><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="CancelAllMessage" id="cb5b69dd-46c1-4d20-80e9-01d6076ad5f9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="12bfc368-3430-4fce-bbdc-e30d67029ba8"/><con:assertion type="SOAP Response" name="SOAP Response" id="138e9cf8-5719-40a0-a942-24a7c09bf397"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b4f5b472-e66d-447a-abe0-b749cd6272c9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a5a6c3d4-6474-473c-a8af-1ace2b1ca59f"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="9ac6b327-aa84-4f86-9fb7-b12f116ff7bf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelAllMessage</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="d27891a8-9e1d-47c3-b4c8-f4e2a4759398"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="bf477ca1-c882-4438-8bf5-a8ad1b4c79dc"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageInternalError"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>bc880449-5b0e-4288-a627-1856617a89bc</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A18-3 -- CancelScheduleMessage Internal Error TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a3ee9696-f062-43b6-945a-1c0bcdecb303"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Generate Internal Error" id="2747f9a1-0084-4dd6-9eaa-e9aeacd24f14"><con:description/><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="CancelScheduleMessage Request ID" id="f7189596-f688-4540-9471-b9019c286642"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelScheduledMessage</con:operation><con:request name="CancelScheduleMessage Request ID" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>${#Project#IM-RequestID}</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="67c991e3-894b-409a-9535-724b29b41bcd"/><con:assertion type="SOAP Response" name="SOAP Response" id="5f7af568-bd52-48ca-a652-a077e9467588"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a5987522-c7bb-4784-9594-c5cbf2517906"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6d96a854-343f-4bc0-81c6-d6a49527ddfd"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="d0afa05b-ef60-41aa-b0be-d97da9589e21"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelScheduleMessage Request ID</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="48410c63-3e8e-457b-b0d9-f356edaea64e"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- UpdateDistributionStatusProcessing
- UpdateDistributionStatusSent
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="08892780-5d1e-4dfc-92a5-39d0e603a084"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageInternalError"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>ef54a844-52bf-433c-934e-917112075397</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A19-1 -- SendPredefinedMessages Element Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a5e307ae-dc36-483b-bb3b-fba2a155c7ce"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="bc692fd9-c188-4db1-bd8d-ff32f113f983"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="SendPredefinedMessages Element Not Found" id="5ae09927-50ae-419f-9f24-7e93efca4cad"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages Element Not Found" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="a77b3550-f198-4d7c-aca7-115f4e7b6bd2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages Element Not Found</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Restart T2G Ground Server" id="c53bdd70-02a7-4089-a8f0-09c82a15d517"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Resart T2G Ground Server (IIS)</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="02f76e94-c647-491d-8825-685b3dd92f04"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification InstantMessageElementNotFound (with also CommonT2GServerOffline &amp;  CommonT2GServerOnline notification)</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="f502fc41-7dd0-4984-b260-118304829a46" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageElementNotFound"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A19-2 -- CancelAllMessages Element Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3a9979c5-3107-49c8-bdb1-8eb8d56aab03"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="3f8fb3aa-3be6-4142-b86e-c72c6dedf3ad"><con:description>Stop Onboard T2G</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="CancelAllMessage" id="30f61dd7-9ad7-4bf4-b4ad-ec48478bbff9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="12bfc368-3430-4fce-bbdc-e30d67029ba8"/><con:assertion type="SOAP Response" name="SOAP Response" id="138e9cf8-5719-40a0-a942-24a7c09bf397"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b4f5b472-e66d-447a-abe0-b749cd6272c9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a5a6c3d4-6474-473c-a8af-1ace2b1ca59f"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Restart T2G Ground Server" id="e2f5ae48-5873-4e9f-b934-f2b034736a0b"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Resart T2G Ground Server (IIS)</con:expectedResult></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="b1d4d7c9-33b7-47ed-902c-514259d66132"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelAllMessage</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="320b1fc6-2405-4db0-8518-e6a1d18ae987" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageElementNotFound"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="0d88e102-b432-4380-85dc-c21490b9d547"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification InstantMessageElementNotFound (with also CommonT2GServerOffline &amp;  CommonT2GServerOnline notification)</con:expectedResult></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value>ac95047d-9e32-41be-a32c-deb49ab1dcf7</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A19-3 -- CancelScheduleMessageElement Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="53f7c89b-3836-4ce0-923a-8f85a6cf7383"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="05b5ad83-982d-4437-8f34-4070474a97e5"><con:description>Stop Onboard T2G</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="CancelScheduleMessage Request ID" id="14c7d4a4-6356-44f3-a29e-a8777db5fde4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelScheduledMessage</con:operation><con:request name="CancelScheduleMessage Request ID" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>${#Project#IM-RequestID}</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="67c991e3-894b-409a-9535-724b29b41bcd"/><con:assertion type="SOAP Response" name="SOAP Response" id="5f7af568-bd52-48ca-a652-a077e9467588"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a5987522-c7bb-4784-9594-c5cbf2517906"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6d96a854-343f-4bc0-81c6-d6a49527ddfd"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="05f0ac61-0640-499c-9c5f-f0165546d7f5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelScheduleMessage Request ID</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="1d4028f5-ca84-4a0f-8c2a-121b77bb6d09" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageElementNotFound"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Restart T2G Ground Server" id="fb03d529-da8c-4d72-847f-8baf74c980ba"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Resart T2G Ground Server (IIS)</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="f898192c-c777-4cee-bf5c-3c31086aae00"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification InstantMessageElementNotFound (with also CommonT2GServerOffline &amp;  CommonT2GServerOnline notification)</con:expectedResult></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value>ef54a844-52bf-433c-934e-917112075397</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A20-1 -- SendPredefinedMessages T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="56459a60-b862-401f-9c95-e7a66139fe9e"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="e175635e-fc65-40e3-ba67-cebe0516cae3"><con:description>Stop Onboard T2G</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="SendPredefinedMessages T2G Offline" id="746ef3d5-76fa-44fc-8ffc-39ada91a458b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages T2G Offline" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="d3d65851-933d-41e8-995e-c32c2fb13a01"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages T2G Offline</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="bb7cd307-4d90-4753-8ebf-89994106c5b9"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="delay" name="Delay" id="c8d0c1ef-8d9c-484a-9a39-4d3728bc6834"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="request" name="SendPredefinedMessages T2G Offline-2" id="61dc2cc9-80dc-4855-b315-e838eba60bf5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages T2G Offline-2" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>T2G_SERVER_OFFLINE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="50f09f9f-8bec-4ec1-8c6b-799a5ec96b8b"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification InstantMessageT2GServerOffline (with also CommonT2GServerOffline )</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="2a6be666-f1aa-451c-b45e-f0439a6b7d50" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageT2GServerOffline"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value>c6faf805-1b4d-404a-a48b-15e4c4c9061b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A20-2 -- CancelAllMessages T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="049ff28e-c9ae-4041-a58b-b71de40ec69c"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="7ca7d136-e923-4847-9c38-2b08880b810a"><con:description>Stop Onboard T2G</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="CancelAllMessage" id="ce86b91e-001c-4467-9fbd-56e94e5b25a3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="12bfc368-3430-4fce-bbdc-e30d67029ba8"/><con:assertion type="SOAP Response" name="SOAP Response" id="138e9cf8-5719-40a0-a942-24a7c09bf397"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b4f5b472-e66d-447a-abe0-b749cd6272c9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a5a6c3d4-6474-473c-a8af-1ace2b1ca59f"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="ab9bc52b-4305-44be-8716-1f99caad655f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelAllMessage</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="590f3595-3d1a-4efd-8d1e-4775501c1f70"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="delay" name="Delay" id="fa18486a-24b9-4a86-8229-655263549bbb"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="request" name="CancelAllMessage-2" id="6daa6002-b923-4225-af20-3960ac0a1a99"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage-2" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="12bfc368-3430-4fce-bbdc-e30d67029ba8"/><con:assertion type="SOAP Response" name="SOAP Response" id="138e9cf8-5719-40a0-a942-24a7c09bf397"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b4f5b472-e66d-447a-abe0-b749cd6272c9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a5a6c3d4-6474-473c-a8af-1ace2b1ca59f"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>T2G_SERVER_OFFLINE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="c0f6fd8e-ae8a-4ebd-85b6-506db10d301e"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification InstantMessageT2GServerOffline (with also CommonT2GServerOffline )</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e7e4538c-b8dd-434a-864a-a9176f5b7023" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value>0d2375f0-9c20-46e9-a82e-6e169eccde87</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A20-3 -- CancelScheduleMessage T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="40f90e42-de4d-4336-9de8-d379353385ef"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="3f8594e0-5327-4c5f-b544-05e3860a2ac0"><con:description>Stop Onboard T2G</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="CancelScheduleMessage Request ID" id="65e153bb-2cd8-4fd4-959c-9ff9e514a5d4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelScheduledMessage</con:operation><con:request name="CancelScheduleMessage Request ID" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>${#Project#IM-RequestID}</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="67c991e3-894b-409a-9535-724b29b41bcd"/><con:assertion type="SOAP Response" name="SOAP Response" id="5f7af568-bd52-48ca-a652-a077e9467588"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a5987522-c7bb-4784-9594-c5cbf2517906"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6d96a854-343f-4bc0-81c6-d6a49527ddfd"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="158175be-3a51-4a2d-a4d9-543779013545"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelScheduleMessage Request ID</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="40c32931-f161-4d43-8a43-286b92b62b21"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="delay" name="Delay" id="0fdeb49e-26fe-4242-aa7d-280328df953a"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="request" name="CancelScheduleMessage Request ID-2" id="2234dcdc-d600-442d-9b79-252b85d5b3b3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelScheduledMessage</con:operation><con:request name="CancelScheduleMessage Request ID-2" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>${#Project#IM-RequestID}</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="67c991e3-894b-409a-9535-724b29b41bcd"/><con:assertion type="SOAP Response" name="SOAP Response" id="5f7af568-bd52-48ca-a652-a077e9467588"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a5987522-c7bb-4784-9594-c5cbf2517906"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6d96a854-343f-4bc0-81c6-d6a49527ddfd"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>T2G_SERVER_OFFLINE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="504fea0f-1397-4c45-9200-bb0c8a6639a7"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification InstantMessageT2GServerOffline (with also CommonT2GServerOffline )</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="3465c7e9-2859-47a9-ba31-7354abd4703e" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageT2GServerOffline"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value>ef54a844-52bf-433c-934e-917112075397</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A21-1 -- SendPredefinedMessages Train Service Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="994c42fd-b41c-489d-af4d-19012039194c"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Bad service configuration" id="a0185cf2-4e40-4864-81c9-f9fc73c2ea1a"><con:description>Stop PIS Ground Server
Set Loaded Key to "0" in Media server registry VMC3GSIF/Plugins/SIFWSInstantMessageServer
Restart Media server
Restart PIS Ground 
Relog to PIS ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="SendPredefinedMessages" id="ef40f80e-834e-4758-86ca-59ba96c25f05"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>SendPredefinedMessages</con:operation><con:request name="SendPredefinedMessages" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:pis="http://schemas.datacontract.org/2004/07/PIS.Ground.InstantMessage">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:SendPredefinedMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
         <!--Optional:-->
         <ins:Messages>
            <!--Zero or more repetitions:-->
            <ins:PredefinedMessageType>
               <!--Optional:-->
               <ins:CarId>${#Project#IM-PredefinedCarId}</ins:CarId>
               <!--Optional:-->
               <ins:Delay>${#Project#IM-PredefinedDelay}</ins:Delay>
               <!--Optional:-->
               <ins:DelayReason>${#Project#IM-PredefinedDelayReason}</ins:DelayReason>
               <!--Optional:-->
               <ins:Hour>${#Project#IM-PredefinedHour}</ins:Hour>
               <ins:Identifier>${#Project#IM-PredefinedIdentifier}</ins:Identifier>
               <!--Optional:-->
               <ins:StationId>${#Project#IM-PredefinedStationId}</ins:StationId>
            </ins:PredefinedMessageType>
         </ins:Messages>
      </ins:SendPredefinedMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7e5ad26-bc63-4bfa-b5e9-d95f82b0ad97"/><con:assertion type="SOAP Response" name="SOAP Response" id="681ccf43-6170-43b2-b188-1bb82d6f6843"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="77469bba-bead-4234-823a-6a70a69d2184"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="02e50feb-f60d-499d-a603-a5a102c4448c"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/SendPredefinedMessages" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="f46df9cd-2fdb-45b1-95ce-75bc7a718c6a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SendPredefinedMessages</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="c765492a-475b-4fed-85c8-9e01d83fdbac"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>The following notifications shall be received:
"InstantMessageDistributionProcessing"
 "InstantMessageServiceNotFound"
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="b6fc1015-803c-4a51-a3e3-0b3f64bd8a8e" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InstantMessageDistributionProcessing",
					 "InstantMessageDistributionSent",
					 "InstantMessageServiceNotFound"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>bc880449-5b0e-4288-a627-1856617a89bc</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A21-2 -- CancelAllMessages Train Service Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="817866dc-e24e-4e65-830b-fe9d66f048c8"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Bad service configuration" id="26bbe7c0-3146-4458-9378-bbef72c543c7"><con:description>Stop PIS Ground Server
Set Loaded Key to "0" in Media server registry VMC3GSIF/Plugins/SIFWSInstantMessageServer
Restart Media server
Restart PIS Ground 
Relog to PIS ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="CancelAllMessage" id="8ac7784a-2014-46ec-ad8a-312b817a257b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelAllMessages</con:operation><con:request name="CancelAllMessage" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelAllMessages>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelAllMessages>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="12bfc368-3430-4fce-bbdc-e30d67029ba8"/><con:assertion type="SOAP Response" name="SOAP Response" id="138e9cf8-5719-40a0-a942-24a7c09bf397"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b4f5b472-e66d-447a-abe0-b749cd6272c9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a5a6c3d4-6474-473c-a8af-1ace2b1ca59f"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelAllMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="7ef80903-2a19-47d8-8bf4-82b773511843"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelAllMessage</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="dcc144e6-84a2-4d63-8699-b62c5cc8414c"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>The following notifications shall be received:
"InstantMessageDistributionProcessing"
 "InstantMessageServiceNotFound"
</con:expectedResult></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>bc880449-5b0e-4288-a627-1856617a89bc</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1450-A21-3 -- CancelScheduleMessage Train Service Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="69505614-8889-4314-91d7-9820ca193884"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Bad service configuration" id="c5d9625d-fb46-480d-9873-c7612e2d6cba"><con:description>Stop PIS Ground Server
Set Loaded Key to "0" in Media server registry VMC3GSIF/Plugins/SIFWSInstantMessageServer
Restart Media server
Restart PIS Ground 
Relog to PIS ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="CancelScheduleMessage Request ID" id="26526c7a-30b0-44ec-9889-8be64ba51d8c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_InstantMessage</con:interface><con:operation>CancelScheduledMessage</con:operation><con:request name="CancelScheduleMessage Request ID" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InstantMessage/InstantMessageService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ins="http://alstom.com/pacis/pis/ground/instantmessage/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <ins:CancelScheduledMessage>
         <!--Optional:-->
         <ins:sessionId>${#Project#INTERNAL-SessionID}</ins:sessionId>
         <!--Optional:-->
         <ins:requestId>${#Project#IM-RequestID}</ins:requestId>
         <!--Optional:-->
         <ins:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </ins:targetAddress>
         <!--Optional:-->
         <ins:requestTimeout>${#Project#-GEN-RequestTimeout}</ins:requestTimeout>
      </ins:CancelScheduledMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="67c991e3-894b-409a-9535-724b29b41bcd"/><con:assertion type="SOAP Response" name="SOAP Response" id="5f7af568-bd52-48ca-a652-a077e9467588"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a5987522-c7bb-4784-9594-c5cbf2517906"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6d96a854-343f-4bc0-81c6-d6a49527ddfd"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/instantmessage/InstantMessage/CancelScheduleMessage" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="29573a45-b32d-4f7d-bee4-69ac3801aba1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CancelScheduleMessage Request ID</con:sourceStep><con:sourcePath>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/instantmessage/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="0ca095c6-9f3d-4298-af38-0e389d6bd42d"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>The following notifications shall be received:
"InstantMessageDistributionProcessing"
 "InstantMessageServiceNotFound"
</con:expectedResult></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>ef54a844-52bf-433c-934e-917112075397</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>IMRequestID</con:name><con:value>c0a5cd91-1112-4b14-8b2b-53d4b1ff31ae</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="TC_PIS_Sy_1460 - MaintenanceService TestSuite" id="f95e597f-ac7d-4726-b909-8391278784a6" disabled="true"><con:description>WEB SERVICE MAINTENANCE

[RefSol_PIS2G_GroundApp_SyID_0011], [RefSol_PIS2G_GroundApp_SyID_0012], [RefSol_PIS2G_GroundApp_SyID_0013], 
[RefSol_PIS2G_GroundApp_SyID_0014], [RefSol_PIS2G_GroundApp_SyID_0015], [RefSol_PIS2G_GroundApp_SyID_0016]
[RefSol_PIS2G_GroundApp_SyID_0060], [RefSol_PIS2G_GroundApp_SyID_0061], [RefSol_PIS2G_GroundApp_SyID_0062], 
[RefSol_PIS2G_GroundApp_SyID_0063], [RefSol_PIS2G_GroundApp_SyID_0064], [RefSol_PIS2G_GroundApp_SyID_0065],  
[RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], [RefSol_PIS2G_GroundApp_SyID_0068], 
[RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222], [RefSol_PIS2G_GroundApp_SyID_0073], 
[RefSol_PIS2G_GroundApp_SyID_0074], [RefSol_PIS2G_GroundApp_SyID_0075], [RefSol_PIS2G_GroundApp_SyID_0076]
</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A1-1 -- GetAvailableElementList TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5a900f20-cdd4-477c-aa8f-688e2c3385ff"><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of available elements. 
This list includes also missions that are running for each element.

The request is sent with a valid session ID.

Expected result : The ground PIS shall reply with the list of available elements
                           For each element in the elements list shall include the version number of the PIS Basic data package (which includes IM templates definition) 
                           the version of the  LMT data package (which contains the stations list) and the id of the current running mission (both the Mission Commercial Number and the Mission Operator Code).
                           If the element is not in a mission, the mission Id parameter shall be omitted.


Requirements:
[RefSol_PIS2G_GroundApp_SyID_0011], [RefSol_PIS2G_GroundApp_SyID_0012],
[RefSol_PIS2G_GroundApp_SyID_0013], [RefSol_PIS2G_GroundApp_SyID_0014], 
[RefSol_PIS2G_GroundApp_SyID_0015], [RefSol_PIS2G_GroundApp_SyID_0016]</con:description><con:settings/><con:testStep type="request" name="GetAvailableElementList" id="ce5c3860-6436-4f85-8610-3b836e9751ed"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetAvailableElementList</con:operation><con:request name="GetAvailableElementList" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetAvailableElementList>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
      </main:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="015f2fad-af66-4cbd-a93c-7f220e115fe6"/><con:assertion type="SOAP Response" name="SOAP Response" id="9e712236-14de-46b8-84c6-9ff05790f997"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="63625067-808c-4cea-b19f-238431de316e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match" id="3738f4db-7273-43e6-a8e7-d79c36caedef"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
//ns1:ResultCode[1]</path><content>&lt;main:ResultCode xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/">REQUEST_ACCEPTED&lt;/main:ResultCode></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/RetrieveElementList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A1-2 -- GetAvailableElementList Error ManagementTestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8719e983-c712-497e-8f53-5fb4c91403d6"><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of available elements. 
This list includes also missions that are running for each element.

The request is sent with invalid informations

Expected result : PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0273]
</con:description><con:settings/><con:testStep type="manualTestStep" name="Manual TestStep" id="2b790577-906d-4ff8-b2b9-190f68db47b6"><con:description>IIS Manage Server "stop" T2G alstom-ground-pis-server</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetAvailableElementList Elements list  unavailable" id="7a09e9ec-61c2-43d3-bf3f-daacff67b986"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetAvailableElementList</con:operation><con:request name="GetAvailableElementList Elements list  unavailable" outgoingWss="" incomingWss="" timeout="65000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetAvailableElementList>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
      </main:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="80a74d1a-a31f-4f0d-9154-2252c8968cf1"/><con:assertion type="SOAP Response" name="SOAP Response" id="ff2b5cbf-07ee-4987-9acb-1c18102862e3"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="7faffc46-1863-47a8-8baa-b0f273f09ad5"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="79121b1c-9952-48ae-91b6-5971c113477c"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>ELEMENT_LIST_NOT_AVAILABLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/RetrieveElementList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetAvailableElementList Bad Session ID" id="de85773e-61e1-4a93-93ea-dae696beb78d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetAvailableElementList</con:operation><con:request name="GetAvailableElementList Bad Session ID" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetAvailableElementList>
         <!--Optional:-->
         <main:sessionId>${#Project#DEGRADED-GEN-BadSessionID}</main:sessionId>
      </main:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5961c0bf-0667-476f-829b-d7854793faa5"/><con:assertion type="SOAP Response" name="SOAP Response" id="48d33361-b1e5-427c-9484-80565b1a08f7"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c6dcd3fa-725e-495b-a96e-89d8a92193f9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match" id="1024ee7a-2388-4e65-a67f-2934d3274ce7"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>&lt;main:ResultCode xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/">INVALID_SESSION_ID&lt;/main:ResultCode></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/RetrieveElementList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A2-1 -- GetSystemMessagesFiles from Element Alpha Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="194e86f5-27da-461d-ac32-8423a090b81c"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing system messages. 
A system message is an alarm, a fault, or an event.

The request is sent to an Online Element Alpha Number.

Expected Result :
The PIS shall download the system message files from the selected element 


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0060], [RefSol_PIS2G_GroundApp_SyID_0061], [RefSol_PIS2G_GroundApp_SyID_0062],
[RefSol_PIS2G_GroundApp_SyID_0063], [RefSol_PIS2G_GroundApp_SyID_0064]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
 [RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]

</con:description><con:settings/><con:testStep type="request" name="GetSystemMessagesFiles" id="f8dc4cff-cb74-4820-aa12-33fec7565d89"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b649c388-13eb-4a6d-9015-c99e52580aa1"/><con:assertion type="SOAP Response" name="SOAP Response" id="b95101bc-3ba0-411a-a78d-ba3c40624115"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="434ed227-305b-4503-aacd-2329d643b3b1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="1e5b46b7-5399-461b-977e-a6ed1061bc57"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="ccfcc1db-76de-4cf5-8e35-122a451ba7ba"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetSystemMessagesFiles</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';

//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" disabled="true" id="bb0f745d-bbdb-47e6-8b74-2615c6ea87f7"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>MaintenanceDownloadDownloading
MaintenanceDownloadProcessing
MaintenanceDownloaCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="550b1f62-cea5-473c-9c0f-865bfbb4fc39"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadDownloading",
					 "MaintenanceDownloadCompleted"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>bb262eef-2c5a-4c0a-9e64-73c6ee6fff22</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A2-2 -- GetSystemMessagesFiles from Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c69e0128-1b80-4759-9c77-32e3fd4edabe"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing system messages. 
A system message is an alarm, a fault, or an event.

The request is sent to a Mission Commercial Number.

Expected Result :
The PIS shall download the system message files from the selected element 


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0060], [RefSol_PIS2G_GroundApp_SyID_0061], [RefSol_PIS2G_GroundApp_SyID_0062],
[RefSol_PIS2G_GroundApp_SyID_0063], [RefSol_PIS2G_GroundApp_SyID_0064]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
 [RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]

</con:description><con:settings/><con:testStep type="request" name="GetSystemMessagesFiles" id="71734251-3769-4f78-bf59-03d07a5449f0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="dde1ebd3-5019-409d-ae56-083764cb25f3"/><con:assertion type="SOAP Response" name="SOAP Response" id="915e7601-dbfc-4772-bacf-d566eb119201"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c9e055eb-b675-46fc-a0b6-902fd55b15f7"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b0969b78-3820-4ccd-bd37-eb2cd43121b8"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="6757ee1f-b60e-4f88-a4fc-7c30350c9179"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetSystemMessagesFiles</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" disabled="true" id="e1a55a0f-275a-4708-8d6d-c52c59ff54b8"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>MaintenanceDownloadDownloading
MaintenanceDownloadProcessing
MaintenanceDownloaCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="d0db61c3-bb0f-4c2f-b18f-e8c644e97cb8"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadDownloading",
					 "MaintenanceDownloadCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">fa472cb0-f702-4e7a-87fe-5d911d5c214a</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A2-3 -- GetSystemMessagesFiles from Mission Operator Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="691844e7-4099-49ff-9a9c-346adc5aea34"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing system messages. 
A system message is an alarm, a fault, or an event.

The request is sent to a Mission Operator Code.

Expected Result :
The PIS shall download the system message files from the selected element 


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0060], [RefSol_PIS2G_GroundApp_SyID_0061], [RefSol_PIS2G_GroundApp_SyID_0062],
[RefSol_PIS2G_GroundApp_SyID_0063], [RefSol_PIS2G_GroundApp_SyID_0064]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
 [RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]

</con:description><con:settings/><con:testStep type="request" name="GetSystemMessagesFiles" id="b0dd24a1-3a86-4e7b-ad29-a93951fe8057"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="61d010e7-6a6c-4e34-b1b7-cb34bb459299"/><con:assertion type="SOAP Response" name="SOAP Response" id="b14bcb8c-995f-4e65-831b-7e56e6f6a660"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a748fb6a-a34d-4cbf-b9f1-7a936fafd0c8"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="44537fd1-13ca-4b11-9ade-30b8eda3cbb2"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="d939f4f7-f1b4-4fa6-9cfc-1443d2697902"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetSystemMessagesFiles</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" disabled="true" id="7116267e-ab7b-4346-b817-876f5468def2"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>MaintenanceDownloadDownloading
MaintenanceDownloadProcessing
MaintenanceDownloaCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="b4e5d80a-e463-4f95-862f-ed31fff1c339"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadDownloading",
					 "MaintenanceDownloadCompleted"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>545894a9-d021-47ec-809b-cd9a2a1dd7a3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A2-4 -- GetSystemMessagesFiles from Offline Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="eda5f3c8-af93-477e-8699-69274da0c444"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing system messages. 
A system message is an alarm, a fault, or an event.

The request is sent to an Offline Element Alpha Number.

Expected result : PIS shall return RequestID, send "processing", "waiting to send" then "timed out" status.


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0060], [RefSol_PIS2G_GroundApp_SyID_0061], [RefSol_PIS2G_GroundApp_SyID_0062],
[RefSol_PIS2G_GroundApp_SyID_0063], [RefSol_PIS2G_GroundApp_SyID_0064]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
 [RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]

</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="27d167a7-6592-4cfc-a9d4-f793b84c4760"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="GetSystemMessagesFiles" id="a11df06b-4bb6-4847-b38d-4ab72c763e88"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e1d29019-3d9d-42cc-a774-3347b09179f3"/><con:assertion type="SOAP Response" name="SOAP Response" id="3b41fc69-7c26-4e40-b142-36711219e94c"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="674fb2cf-40d7-4100-8f4f-ca5dcc73e8ec"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9515caad-6a19-4399-b65f-1ef56333466c"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="55397582-87f2-4535-807c-eab9c6612af9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetSystemMessagesFiles</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" disabled="true" id="3548ffee-6d61-471e-8d53-f67ac8988fd3"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>MaintenanceDownloadDownloading
MaintenanceDownloadProcessing
MaintenanceDownloaCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="c03bbc12-3ece-48f1-a3b2-090992c21962"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadWaitingToSend",
					 "MaintenanceDownloadTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>b2ead406-0b97-4b34-89b6-b3b99e23345c</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A2-5 -- GetSystemMessagesFiles from Offline then Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3b3fc925-490c-471b-973a-a25149a5b1b1"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing system messages. 
A system message is an alarm, a fault, or an event.

The request is sent to an Offline then Online Element Alpha Number.

Expected Result :
The PIS shall download the system message files from the selected element 


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0060], [RefSol_PIS2G_GroundApp_SyID_0061], [RefSol_PIS2G_GroundApp_SyID_0062],
[RefSol_PIS2G_GroundApp_SyID_0063], [RefSol_PIS2G_GroundApp_SyID_0064]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
 [RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]

</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="80dfb6a8-6a1e-4c9e-bbb1-5b7ecbe1c046"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetSystemMessagesFiles" id="60c35a4b-9b24-4720-92b5-6e8c87ac1e85"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d7fc0c49-e9f6-4cac-8f2b-d352a26d5fd0"/><con:assertion type="SOAP Response" name="SOAP Response" id="89143496-9b2a-46db-8ef8-b5ded42236b6"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="bd273de0-391a-423b-bda5-3c2637c3ec30"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="3944f951-5635-4513-b850-cb741590932c"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="df32e2b1-6a3c-4f05-8236-a473971225e6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetSystemMessagesFiles</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="f49d9b15-44b5-4adf-aaa9-053c1cc64ce8"><con:description>Put Element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is now Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" disabled="true" id="06ed7499-6553-446d-bbdf-9a86355890f7"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>MaintenanceDownloadProcessing
MaintenanceDownloadWaitingToSend

Turn on the Element
MaintenanceDownloadDownloading
MaintenanceDownloadCompleted

</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="fafa49fb-06ea-42a1-b3fc-f596c25fab19"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadWaitingToSend",
                          "MaintenanceDownloadDownloading",
					 "MaintenanceDownloadCompleted"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>585dff78-444a-4fdb-af17-a0a8a74b5f66</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A2-6 -- GetSystemMessagesFiles Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c5e0c38d-9515-4dc4-bcd3-a11244ee9505"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing system messages. 
A system message is an alarm, a fault, or an event.

The request is sent with invalid informations.

Expected result : PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0297]
</con:description><con:settings/><con:testStep type="request" name="GetSystemMessagesFiles Bad Session ID" id="fc99ae85-277b-4234-aa50-a767b3b36f4c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles Bad Session ID" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#DEGRADED-GEN-BadSessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="7a62a557-134e-4c28-a313-4f649139dd28"/><con:assertion type="SOAP Response" name="SOAP Response" id="a207e655-fb72-40d3-939f-21d53a205268"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="fad36a1a-9d7b-42c5-b263-ae1ce738c140"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b9ba31e6-806e-4874-8480-7883ad267cf1"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetSystemMessagesFiles Unknown element id" id="0efeed0d-9e2f-461d-98d5-8fdc663c84e0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles Unknown element id" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="efa2158b-4bda-454b-a475-27f9eb603b84"/><con:assertion type="SOAP Response" name="SOAP Response" id="60c8c364-405e-4cf4-b963-b79e0a94c642"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="8e15d732-a04c-4b35-96bc-f7cce881f0fe"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="434ad5f1-4204-499d-954c-29a352388b64"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>UNKNOWN_ELEMENT_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetSystemMessagesFiles Invalid request timeout" id="79677537-bfad-4e08-b43c-c9b2ce0edf73"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles Invalid request timeout" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b7ea9b03-3cd9-4cd8-90c9-f7afbb746ff3"/><con:assertion type="SOAP Response" name="SOAP Response" id="a9343336-4495-46e2-bde5-e7a5c1090a7f"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="187ef733-81b2-4c8d-9f3a-d15f537b7bfa"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="0e413ab4-4440-465e-9281-57729e7cb96f"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>INVALID_REQUEST_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetSystemMessagesFiles Unknown mission id" id="b454a7b3-b173-4800-a4fa-1e0b8607dc4d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles Unknown mission id" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownMissionID}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="155d04fd-d49e-4016-b38b-7c15caea148f"/><con:assertion type="SOAP Response" name="SOAP Response" id="58e6d6a3-a7ef-40ac-8871-513873873972"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b7460005-5f06-49e8-bf4e-2f2324310735"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="ddba6984-d8db-4b45-a63a-b025c9f8eb11"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>UNKNOWN_MISSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A3-1 -- Update download status Inhibited TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a4d58602-e564-4c31-988c-cb9a21cdb4bd"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing system messages. 
A system message is an alarm, a fault, or an event.

Command from ground are inhibited and the request is sent to an Online Element Alpha Number.

Expected Result :
The PIS shall reply with "update download status inhibited"


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0060], [RefSol_PIS2G_GroundApp_SyID_0061], [RefSol_PIS2G_GroundApp_SyID_0062],
[RefSol_PIS2G_GroundApp_SyID_0063], [RefSol_PIS2G_GroundApp_SyID_0064]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
 [RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]

</con:description><con:settings/><con:testStep type="manualTestStep" name="Inhibit Command From Ground" id="2d20fbe2-e228-46ab-ae10-51c34088f967"><con:description>Inhibit Command From Ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Commands initiated from the Ground PIS are inhibited on board </con:expectedResult></con:config></con:testStep><con:testStep type="request" name="GetSystemMessagesFiles" id="68149128-b30e-40ff-aeff-55ed54e2ba43"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="aacd65a8-b432-461c-9659-411532bc14e2"/><con:assertion type="SOAP Response" name="SOAP Response" id="e997240c-59e1-4ad9-acec-ec1bf0587bea"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="fceffd3c-5e50-4d06-a9d2-0a6b7d13fb66"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="99bafcd0-b5b6-40b3-a648-0d322da65622"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetSystemMessagesFiles</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="898c7e76-d0b3-41a5-abd9-f346912f5a55"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadInhibited"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>16ee4852-d4c7-4fa1-90e3-9a02ae6bced3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A4-1 -- GetVersionsFile from Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="true" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="bcd0b38a-5258-40ae-a708-5782b442a10d"><con:description>Test the  function allows the GroundApp to request from the PIS:
 the software, firmware, configuration files, and data packages versions for a specific addressee

The request is sent to an online Element Alpha Number

Expected Result :
The ground PIS shall reply with the versions of:
	PIS, LMT, TtoG, and SRS software, 
	PIS displays and ARS firmware (one firmware versions per display type);
	PIS, LMT, TtoG, and SRS configuration files;
	PIS and LMT data packages and baselines.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0073], [RefSol_PIS2G_GroundApp_SyID_0074], 
[RefSol_PIS2G_GroundApp_SyID_0075], [RefSol_PIS2G_GroundApp_SyID_0076]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]


</con:description><con:settings/><con:testStep type="request" name="GetVersionsFile" id="28f6eba5-98d6-4cf8-836d-2abad8d5efd1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d5e1cdce-2e26-46ff-8677-20f7fdaf8534"/><con:assertion type="SOAP Response" name="SOAP Response" id="2cb2d83a-85c8-4b5c-a48f-685912a7ab9e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4bfee598-91b9-4eb7-98f1-1e18beea16de"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="87b4244b-e0e6-48a9-b86f-51da2f967518"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="3c78f2ff-e864-44fb-b61d-2ab99e1ccfdb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetVersionsFile</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';

//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" disabled="true" id="18c2c337-1555-4ba9-ba26-3abe4c1ac277"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>MaintenanceDownloadDownloading
MaintenanceDownloadProcessing
MaintenanceDownloadCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="328f33e9-88d7-4a08-b94a-442d46b1a440"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadDownloading",
					 "MaintenanceDownloadCompleted"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">f3c573eb-4e07-4d44-9ebb-3c4bb89b33bd</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A4-2 -- GetVersionsFile from Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7a9a60b3-5f0f-415b-83bf-b0803d46b1c2"><con:description>Test the  function allows the GroundApp to request from the PIS:
 the software, firmware, configuration files, and data packages versions for a specific addressee

The request is sent to a Mission Commercial Number

Expected Result :
The ground PIS shall reply with the versions of:
	PIS, LMT, TtoG, and SRS software, 
	PIS displays and ARS firmware (one firmware versions per display type);
	PIS, LMT, TtoG, and SRS configuration files;
	PIS and LMT data packages and baselines.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0073], [RefSol_PIS2G_GroundApp_SyID_0074], 
[RefSol_PIS2G_GroundApp_SyID_0075], [RefSol_PIS2G_GroundApp_SyID_0076]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]</con:description><con:settings/><con:testStep type="request" name="GetVersionsFile" id="13064c43-c70d-4705-b301-7cf498fb90f6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="4f730227-01c5-4189-a734-846a1354e3e7"/><con:assertion type="SOAP Response" name="SOAP Response" id="038e02c6-dbdf-41cb-8de6-4def0218cf84"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c32ce75c-f559-4c8d-802c-f58c6c12b46e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="c6d027e2-1b98-4244-90da-046597f8c36b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="512b802c-9b2d-4cec-a627-ec505433397c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetVersionsFile</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" disabled="true" id="da89dc9a-e0a4-4dcd-bb81-0f0691a5c95e"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>MaintenanceDownloadDownloading
MaintenanceDownloadProcessing
MaintenanceDownloaCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="6b28747c-eac6-46b4-a790-2516a2542aae"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadDownloading",
					 "MaintenanceDownloadCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">421bfbe1-0342-40f8-b823-53fa29e177d7</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A4-3 -- GetVersionsFile from Mission Operator Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fe470d15-2de1-4496-b13c-bf33f838cfe0"><con:description>Test the  function allows the GroundApp to request from the PIS:
 the software, firmware, configuration files, and data packages versions for a specific addressee

The request is sent to a Mission Operator Code

Expected Result :
The ground PIS shall reply with the versions of:
	PIS, LMT, TtoG, and SRS software, 
	PIS displays and ARS firmware (one firmware versions per display type);
	PIS, LMT, TtoG, and SRS configuration files;
	PIS and LMT data packages and baselines.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0073], [RefSol_PIS2G_GroundApp_SyID_0074], 
[RefSol_PIS2G_GroundApp_SyID_0075], [RefSol_PIS2G_GroundApp_SyID_0076]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]</con:description><con:settings/><con:testStep type="request" name="GetVersionsFile" id="f8556330-4055-4240-852c-53bd4b1614e1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="7cf45d7f-1c37-4db7-9835-6aa3706bc1f4"/><con:assertion type="SOAP Response" name="SOAP Response" id="5d1f1a6e-864a-47aa-a6a9-32a458d513c6"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="be79c9c3-98ba-4ac4-bc6a-abaddc2937d4"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="c2106362-d356-48b4-a6d1-0e50cce7467b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="18b9a377-6782-4248-b975-e91e20f1d0a4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetVersionsFile</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" disabled="true" id="9ceb5656-f3cb-47a6-87ac-46e6c8adeae6"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>MaintenanceDownloadDownloading
MaintenanceDownloadProcessing
MaintenanceDownloaCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="b2ebe7e0-b5bf-447a-ac00-ffdbc1a9069b"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadDownloading",
					 "MaintenanceDownloadCompleted"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>ae1befd1-d599-4163-ad7b-ae3d1498cd54</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A4-4 -- GetVersionsFile from Offline Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d59f0a0b-0a7b-4cfa-88e2-e5282dc1cdbf"><con:description>Test the  function allows the GroundApp to request from the PIS:
 the software, firmware, configuration files, and data packages versions for a specific addressee

The request is sent to an Offline element

Expected result : PIS shall return RequestID, send "processing", "waiting to send" then "timed out" status.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0073], [RefSol_PIS2G_GroundApp_SyID_0074], 
[RefSol_PIS2G_GroundApp_SyID_0075], [RefSol_PIS2G_GroundApp_SyID_0076]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="b739fa77-0078-4b05-9ee6-8b9a9010d2b7"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetVersionsFile" id="7ad0bc11-9182-4ca9-9956-5e39664ea260"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="557657d3-af40-4d1e-b16a-8b5050ea4bc4"/><con:assertion type="SOAP Response" name="SOAP Response" id="6fc850fd-1247-4ba6-9041-d80ffcfabd9f"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="44af783b-28f1-4ca4-a496-a9a54131481d"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b2b15f8c-9260-4ec3-8bb1-a88b41bcc3fd"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="dddd2bf9-7915-4f48-af7b-4a6ef4477fd7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetVersionsFile</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" disabled="true" id="bc7b49ba-0160-484d-9ee6-c73f10bd30b2"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>MaintenanceDownloadDownloading
MaintenanceDownloadProcessing
MaintenanceDownloadWaitingToSend
MaintenanceDownloadTimedOut</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="3eee1eae-5ed9-49f0-9248-ac53cacc167c"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadWaitingToSend",
					 "MaintenanceDownloadTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>02d0115b-3dd7-4f16-af03-4004a60f79f0</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A4-5 -- GetVersionsFile from Offline then Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d8b7f5ea-89d0-4b70-a226-93dec96eb9c6"><con:description>Test the  function allows the GroundApp to request from the PIS:
 the software, firmware, configuration files, and data packages versions for a specific addressee


The request is sent to an Offline then Online Element Alpha Number.

Expected result : 
The ground PIS shall reply with the versions of:
	PIS, LMT, TtoG, and SRS software, 
	PIS displays and ARS firmware (one firmware versions per display type);
	PIS, LMT, TtoG, and SRS configuration files;
	PIS and LMT data packages and baselines.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0073], [RefSol_PIS2G_GroundApp_SyID_0074], 
[RefSol_PIS2G_GroundApp_SyID_0075], [RefSol_PIS2G_GroundApp_SyID_0076]

Requirements update download status :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="631ec021-2740-468b-b48b-57a793681f17"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetVersionsFile" id="3d35c610-a9d7-4a43-a86e-462cde199420"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="370c5654-3c4b-4fa5-8786-bad22f7caabd"/><con:assertion type="SOAP Response" name="SOAP Response" id="a0d4ac22-659f-4fa3-87ea-738df4585535"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="259cc25a-75bc-4f9a-8813-18b18d26b01e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="652692eb-53d6-4254-ae54-df6b20dbe5e9"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="3be7ae44-fd40-4cd3-8c90-1ff0aae97de8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetVersionsFile</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="8a337102-0d39-4c76-8c95-60fd942f5fa3"><con:description>Put Element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is now Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" disabled="true" id="465ea3f8-818b-414d-955e-627aa26dc374"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>MaintenanceDownloadProcessing
MaintenanceDownloadWaitingToSend

Turn on the Element
MaintenanceDownloadDownloading
MaintenanceDownloadCompleted

</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="879507dd-199d-4bf8-95c2-94a82095ce0f"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadWaitingToSend",
                          "MaintenanceDownloadDownloading",
					 "MaintenanceDownloadCompleted"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>2654d138-9e54-4420-895a-e976f6fcbd31</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A4-6 -- GetVersionsFile Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="16376993-5737-46b7-9329-3b34d65d086c"><con:description>Test the  function allows the GroundApp to request from the PIS:
 the software, firmware, configuration files, and data packages versions for a specific addressee

The request is sent with invalid informations

Expected result : PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0300]
</con:description><con:settings/><con:testStep type="request" name="GetVersionsFile Bad Session ID" id="31cd05cf-0d81-4131-9c49-cde1e85c7da3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile Bad Session ID" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#DEGRADED-GEN-BadSessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e0b79dfe-86f1-4810-8f64-f1eefa229668"/><con:assertion type="SOAP Response" name="SOAP Response" id="71ee5656-2929-4f2d-a503-c2026708c3bf"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="cc09bbaf-3f51-414a-801f-0ccc0da98b7c"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="556bbbb5-7df2-49a7-b38c-393e21af6ed5"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetVersionsFile Bad Unknow Element Number" id="03de23ea-14c1-44af-93fe-5722a3e761be"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile Bad Unknow Element Number" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d2357b96-95b4-4a1c-8baa-dd5b56a505e0"/><con:assertion type="SOAP Response" name="SOAP Response" id="b7aea6de-c783-4c7d-94a7-653fb20d6d9f"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="bb59142b-fbbf-4910-beb6-8c319822f14e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="e68e480f-ad1b-4ecc-b766-915f8873ffbb"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>UNKNOWN_ELEMENT_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetVersionsFile Invalid Mission ID" id="2282bb79-cfea-4396-aee4-ca01ce4b6ade"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile Invalid Mission ID" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownMissionID}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b4039dcf-b195-43c2-b504-827a9e12328d"/><con:assertion type="SOAP Response" name="SOAP Response" id="8f6f83c1-8449-4b24-9755-fcb0dc42219d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ca0eedd7-df01-47f3-a386-27459ebaa66b"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="c9ba4856-c79f-46df-a2b6-047d72aa2f47"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>UNKNOWN_MISSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetVersionsFile Invalid Mission Request TimeOut" id="baa25e6a-98f8-4e67-9302-be063995732b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile Invalid Mission Request TimeOut" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a87bba33-733a-4dd2-9f07-d1f4dfcf4661"/><con:assertion type="SOAP Response" name="SOAP Response" id="d7c9f754-1c49-45bd-870d-97c7691ef35c"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="70587593-9309-4bc3-914b-6d72a0abdf5e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9f68ff74-c68f-4fe9-9451-30b4f831a8b3"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>INVALID_REQUEST_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A5-1 -- GetSystemMessagesFiles Element Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8c9fd129-52c4-4521-9d4c-5a10db0e502d"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="85fcb491-3ac5-45ae-bfbe-8c9a661091aa"><con:description>Stop Onboard T2G</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="GetSystemMessagesFiles" id="476a4d9e-8658-4f6d-8684-88fedd9b9279"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b649c388-13eb-4a6d-9015-c99e52580aa1"/><con:assertion type="SOAP Response" name="SOAP Response" id="b95101bc-3ba0-411a-a78d-ba3c40624115"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="434ed227-305b-4503-aacd-2329d643b3b1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="1e5b46b7-5399-461b-977e-a6ed1061bc57"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="3640f4e6-30a0-4001-9683-71b54ffc9829"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetSystemMessagesFiles</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="8d1f7baf-e3a2-40c6-8149-0f6746fe9b2f" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadElementNotFound"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Restart T2G Ground Server" id="8f08cfa6-2a78-4a03-816d-bc86385a4f99"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Resart T2G Ground Server (IIS)</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="3b982bec-ed4f-40c0-8a3d-984e3e98ba95"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification MaintenanceDownloadElementNotFound (with also CommonT2GServerOffline &amp;  CommonT2GServerOnline notification)</con:expectedResult></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value>74201f5b-658d-4929-83ff-b44627b701b6</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A5-2 -- GetVersionsFile Element Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="true" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="549b89d9-a56a-45d6-8ef4-fc0169cd0c4d"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="178d128f-110e-4af4-8777-6c8888493eac"><con:description>Stop Onboard T2G</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="GetVersionsFile" id="e55a04eb-cbde-4e6c-a655-c85282566118"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d5e1cdce-2e26-46ff-8677-20f7fdaf8534"/><con:assertion type="SOAP Response" name="SOAP Response" id="2cb2d83a-85c8-4b5c-a48f-685912a7ab9e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4bfee598-91b9-4eb7-98f1-1e18beea16de"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="87b4244b-e0e6-48a9-b86f-51da2f967518"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="d7fa76a0-f845-42f0-adc5-9f4a583f61e4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetVersionsFile</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="89705443-e6e4-4059-a97f-d63abcd58122" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadElementNotFound"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Restart T2G Ground Server" id="d94d8636-7c06-48eb-a867-1e023b4be891"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Resart T2G Ground Server (IIS)</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="cf0cb3ed-2541-4b67-a918-96d72b82b5d6"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification MaintenanceDownloadElementNotFound (with also CommonT2GServerOffline &amp;  CommonT2GServerOnline notification)</con:expectedResult></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">e024f95d-8fde-4a0e-b3a6-430b04cc1218</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A6-1 -- GetSystemMessagesFiles T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7b0e4d38-972c-4b49-a10a-a8ee6fe82596"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="df8751f5-0bf4-40ff-9348-1fccf8b34003"><con:description>Stop Onboard T2G</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="GetSystemMessagesFiles" id="141ce279-af92-4d94-840b-7d8805da0aab"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b649c388-13eb-4a6d-9015-c99e52580aa1"/><con:assertion type="SOAP Response" name="SOAP Response" id="b95101bc-3ba0-411a-a78d-ba3c40624115"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="434ed227-305b-4503-aacd-2329d643b3b1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="1e5b46b7-5399-461b-977e-a6ed1061bc57"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="6c05be3b-560a-429a-9241-c92626f5484b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetSystemMessagesFiles</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="37d4533d-496b-4073-9344-722bd83db230"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="delay" name="Delay" id="97210975-80b1-4357-b32a-2d687d8db6cc"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="request" name="GetSystemMessagesFiles-2" id="66144656-383e-454d-ac98-e5172d36e29e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles-2" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b649c388-13eb-4a6d-9015-c99e52580aa1"/><con:assertion type="SOAP Response" name="SOAP Response" id="b95101bc-3ba0-411a-a78d-ba3c40624115"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="434ed227-305b-4503-aacd-2329d643b3b1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="1e5b46b7-5399-461b-977e-a6ed1061bc57"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>T2G_SERVER_OFFLINE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="b5838a51-1477-4150-b92a-53f1b8e789b1" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="32c776dd-f35a-4b2d-92fa-b61995d2705c"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification MaintenanceT2GServerOffline (with also CommonT2GServerOffline )</con:expectedResult></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value>0eb75716-3707-467d-ae18-e3e6a44b39e8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A6-2 -- GetVersionsFile T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="true" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ddea4946-c8da-460c-b040-d9ff482350b5"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="7e16cf0c-d8eb-410d-8f3c-1f3078989c90"><con:description>Stop Onboard T2G</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="GetVersionsFile" id="d8deba18-cbf7-4b93-acdc-bb906b7a8a50"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d5e1cdce-2e26-46ff-8677-20f7fdaf8534"/><con:assertion type="SOAP Response" name="SOAP Response" id="2cb2d83a-85c8-4b5c-a48f-685912a7ab9e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4bfee598-91b9-4eb7-98f1-1e18beea16de"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="87b4244b-e0e6-48a9-b86f-51da2f967518"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="d535a746-3a05-4524-9f1e-3264720d5a45"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetVersionsFile</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="beff0aef-c640-4ff9-b02a-a22926032b76"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="delay" name="Delay" id="dd141377-31ed-4a3a-93b5-c99f7b088fb9"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="request" name="GetVersionsFile-2" id="253a2a99-af29-484a-b504-44301ed6eebb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile-2" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d5e1cdce-2e26-46ff-8677-20f7fdaf8534"/><con:assertion type="SOAP Response" name="SOAP Response" id="2cb2d83a-85c8-4b5c-a48f-685912a7ab9e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4bfee598-91b9-4eb7-98f1-1e18beea16de"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="87b4244b-e0e6-48a9-b86f-51da2f967518"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>T2G_SERVER_OFFLINE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="c7d568f3-68f9-44c7-9ee6-01640e0258ce" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceT2GServerOffline"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="9501a33c-d90a-4fdc-b2c8-1cc7540b64e0"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification MaintenanceT2GServerOffline (with also CommonT2GServerOffline )</con:expectedResult></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">78cb5fc7-8228-4b8b-8a94-33bba25ef608</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A7-1 -- GetSystemMessagesFiles Train Service Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="65d3d437-a9f9-4055-8faa-4ff07c2dc2fb"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Bad service configuration" id="943d9e01-b310-42a2-a5b6-16d0894f01b3"><con:description>Define a wrong Instant Message service configuration</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetSystemMessagesFiles" id="f8ba1f8e-6d62-43b7-9bc3-a965a6d4cc26"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetSystemMessagesFiles</con:operation><con:request name="GetSystemMessagesFiles" outgoingWss="" incomingWss="" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetSystemMessagesFiles>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetSystemMessagesFiles>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b649c388-13eb-4a6d-9015-c99e52580aa1"/><con:assertion type="SOAP Response" name="SOAP Response" id="b95101bc-3ba0-411a-a78d-ba3c40624115"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="434ed227-305b-4503-aacd-2329d643b3b1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="1e5b46b7-5399-461b-977e-a6ed1061bc57"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetSystemMessagesFiles" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="0d24905c-ca4a-4fe7-9af9-dbdceb4d3a1f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetSystemMessagesFiles</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" id="145ce16d-7dcc-4670-8c3a-f4716d6df49c"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification MaintenanceDownloadServiceNotFound received</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="9cd15482-ba6b-481e-be42-e052eb8a498e" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadServiceNotFound"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>c583425e-c67d-47f8-836d-b673388172c6</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A8-1 -- getOldestLogdateTime TestCase" searchProperties="true" timeout="0" wsrmEnabled="true" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a9ea4854-e596-41d3-9f36-ca0ea44bc721"><con:description/><con:settings/><con:testStep type="request" name="getOldestLogdateTime" id="874f486a-b72e-47e3-b758-bf4810c7bfa5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetOldestLogDateTime</con:operation><con:request name="getOldestLogdateTime" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetOldestLogDateTime>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>${#Project#MAINTENANCE-CommandsList}</data:CommandType>
         </main:commandList>
      </main:GetOldestLogDateTime>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5e6ba788-ef49-41c1-b9d2-3352d78a8b73"/><con:assertion type="Schema Compliance" id="b5fa377b-94bc-42e6-a8c1-85d3ebf00812"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="950e922b-8009-475a-aaed-fba3f120b65b"/><con:assertion type="XPath Match" name="XPath Match" id="e69460e1-f0ea-410f-b45b-6c8a0a6e6d1c"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">558c3168-9026-4821-ba79-4ed7404ce70b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A8-2 -- getOldestLogdateTime Invalid Command ListTestCase" searchProperties="true" timeout="0" wsrmEnabled="true" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="12ca9077-52db-41ac-8996-1c6264255c52"><con:description/><con:settings/><con:testStep type="request" name="getOldestLogdateTime" id="a22fd82a-affd-4202-8ca8-c202e0e63681"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetOldestLogDateTime</con:operation><con:request name="getOldestLogdateTime" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetOldestLogDateTime>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>Invalid</data:CommandType>
         </main:commandList>
      </main:GetOldestLogDateTime>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2d5e8948-85e8-4326-9c55-ce2643d7645f"/><con:assertion type="Schema Compliance" id="1798468b-0897-46ab-8708-4ca409c210a7"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="f63499b2-ebb6-4ec2-b476-4b8fe362503a"/><con:assertion type="XPath Match" name="XPath Match" id="39aa22fd-0f92-4bbb-87bb-5ea46255abe6"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">558c3168-9026-4821-ba79-4ed7404ce70b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A9-1 -- getNewestLogDateTime TestCase" searchProperties="true" timeout="0" wsrmEnabled="true" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4e2f6947-8a06-4b02-9614-bc861543fc26"><con:description/><con:settings/><con:testStep type="request" name="GetLatestLogDateTime" id="7662b5ea-8c33-45f8-b771-93781ea8b040"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetLatestLogDateTime</con:operation><con:request name="GetLatestLogDateTime" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLatestLogDateTime>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>${#Project#MAINTENANCE-CommandsList}</data:CommandType>
         </main:commandList>
      </main:GetLatestLogDateTime>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="80299d9e-5222-4813-a155-c7c07a342788"/><con:assertion type="Schema Compliance" id="f6374d5e-318b-4bec-9fa8-70ba015c17c3"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="a66e3027-d788-46e8-bf0f-5acb3981c1b6"/><con:assertion type="XPath Match" name="XPath Match" id="990833f3-fd49-4bb1-b338-1927ccea191f"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">558c3168-9026-4821-ba79-4ed7404ce70b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A9-2 -- getNewestLogDateTime Invalid Command ListTestCase" searchProperties="true" timeout="0" wsrmEnabled="true" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="29481e76-5a0b-4633-b1ce-e8461cf0355a"><con:description/><con:settings/><con:testStep type="request" name="GetLatestLogDateTime" id="ec667fe1-d673-478e-aa95-4d42a225e66c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetLatestLogDateTime</con:operation><con:request name="GetLatestLogDateTime" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLatestLogDateTime>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>Invalid</data:CommandType>
         </main:commandList>
      </main:GetLatestLogDateTime>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f5191d71-d48f-45e0-b848-9364c88406d9"/><con:assertion type="Schema Compliance" id="a9a9865c-0cf8-4588-9fa6-f31881864d6f"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="8d4a20d1-b6f0-4ceb-a00e-4a727ae7d983"/><con:assertion type="XPath Match" name="XPath Match" id="fe0616b0-2c9a-4d48-a488-631a64aa90bf"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">558c3168-9026-4821-ba79-4ed7404ce70b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A10-1 -- getLogs Test Case" searchProperties="true" id="10689791-14bf-4631-ae76-fb6c7e07d6cd"><con:settings/><con:testStep type="manualTestStep" name="Generate Logs" id="a37e0011-b4d7-42b0-af05-f346affb9a1b"><con:description>Execute all TC_PIS_Sy_1450-A16 and TC_PIS_Sy_1450-A12 test cases to create logs in history logs database</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="getLogs" id="e1d0a112-0de8-48e4-8024-83f6f8674000"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetLogs</con:operation><con:request name="getLogs" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLogs>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>${#Project#MAINTENANCE-CommandsList}</data:CommandType>
         </main:commandList>
         <!--Optional:-->
         <main:startDateTime>${#Project#MAINTENANCE-LogsStartDateTime}</main:startDateTime>
         <!--Optional:-->
         <main:endDateTime>${#Project#MAINTENANCE-LogsEndDateTime}</main:endDateTime>
         <!--Optional:-->
         <main:language>${#Project#MAINTENANCE-LogsLanguage}</main:language>
      </main:GetLogs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b3064ee4-e73d-4ce9-8955-c6f5289acf57"/><con:assertion type="Schema Compliance" id="4c218201-0b3e-4736-b565-c5f3d59b554e"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="187409d4-8cbc-4ead-a1d6-929e1ee5803f"/><con:assertion type="XPath Match" name="XPath Match" id="34014367-36d5-456e-a714-c60243c518c0"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="LogsResponse" id="37b824dd-9905-45ae-a6fc-5c016b3bfc0f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>LogResponse</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getLogs</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:LogResponse[1]</con:sourcePath><con:targetType>LogResponse</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response" id="8d832f84-7ae3-4796-a7fd-c7cc15853207"><con:description>Check that all sent requests are stored and displayed in  getLogs response</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>The following information shall be available :
- The transaction request ID that identifies each scheduled message sent.
- Which train ID has been addressed 
- All scheduled message parameters (Template ID, Text, Activation period (start and end))
- the date and time of each status change (status can be “processing”, “Waiting to send”, “Sent”, “Received”, “Timed Out” and “inhibited”
</con:expectedResult></con:config></con:testStep><con:properties><con:property><con:name>LogResponse</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><Result><ScheduledMessages><ScheduledMessage RequestId="ceb257b6-f7af-4e29-8e51-ef26e69ccf46"><Context>Message Planifie du Sol</Context><StartDate>8/1/2012 10:40:00 AM</StartDate><EndDate>8/8/2013 10:42:00 PM</EndDate><Trains><Train Id="TRAIN-111"><Commands><Command Type="SendScheduledMsg" DateTime="8/17/2012 2:45:00 PM"><States><State><Name>MsgProcessing</Name><DateTime>8/17/2012 2:45:00 PM</DateTime></State><State><Name>MsgReceived</Name><DateTime>8/17/2012 2:45:00 PM</DateTime></State><State><Name>MsgSent</Name><DateTime>8/17/2012 2:45:00 PM</DateTime></State></States></Command></Commands></Train></Trains></ScheduledMessage></ScheduledMessages></Result>]]></con:value></con:property></con:properties></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A7-2 -- GetVersionsFile Train Service Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="true" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="542a5d81-56d7-4e0f-a5d7-178f65d3b940"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Bad service configuration" id="1e976281-aacd-4f7a-ae9a-0b46454f14f9"><con:description>Define a wrong Instant Message service configuration</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetVersionsFile" id="d0010955-a643-4a56-831e-6194189ca43e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetVersionsFile</con:operation><con:request name="GetVersionsFile" outgoingWss="" incomingWss="" useWsReliableMessaging="true" useWsAddressing="true" timeout="15000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetVersionsFile>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </main:targetAddress>
         <!--Optional:-->
         <main:requestTimeout>${#Project#-GEN-RequestTimeout}</main:requestTimeout>
      </main:GetVersionsFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d5e1cdce-2e26-46ff-8677-20f7fdaf8534"/><con:assertion type="SOAP Response" name="SOAP Response" id="2cb2d83a-85c8-4b5c-a48f-685912a7ab9e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4bfee598-91b9-4eb7-98f1-1e18beea16de"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="87b4244b-e0e6-48a9-b86f-51da2f967518"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/maintenance/IMaintenanceService/GetVersionsFile" mustUnderstand="NONE" version="200408" to="http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc" generateMessageId="true"/><con:wsrmConfig version="1.0"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="c58cf6e1-11bc-458c-ae78-fdac6f7c6f2d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetVersionsFile</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace ns2='http://schemas.microsoft.com/2003/10/Serialization/';
declare namespace ns3='http://alstom.com/pacis/pis/schema/';
declare namespace ns4='http://alstom.com/pacis/pis/ground/core/data/';


//ns4:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Notifications" id="39c6dab1-56d1-4aae-a74d-bdb151249788"><con:description>Check notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification MaintenanceDownloadServiceNotFound received</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="656d49e1-10e8-4bdb-9057-e95a20bec4a8" disabled="true"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MaintenanceDownloadProcessing",
                          "MaintenanceDownloadServiceNotFound"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">558c3168-9026-4821-ba79-4ed7404ce70b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A10-2 -- getLogs Error Management Test Case" searchProperties="true" id="8519b41b-b0ee-4474-be12-0dc58d5b9604" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="getLogs Invalid Command List" id="12c015b7-9fcc-4840-b45e-50f5a957af73"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetLogs</con:operation><con:request name="getLogs Invalid Command List" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLogs>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>InvalidCommandsList</data:CommandType>
         </main:commandList>
         <!--Optional:-->
         <main:startDateTime>${#Project#MAINTENANCE-LogsStartDateTime}</main:startDateTime>
         <!--Optional:-->
         <main:endDateTime>${#Project#MAINTENANCE-LogsEndDateTime}</main:endDateTime>
         <!--Optional:-->
         <main:language>${#Project#MAINTENANCE-LogsLanguage}</main:language>
      </main:GetLogs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c831247b-475d-429b-afb2-75682088a58d"/><con:assertion type="Schema Compliance" id="53ea4269-ea19-464f-83d1-33472ae00d8e"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="41329a23-a5bb-4333-a97b-b7f592d1e8a5"/><con:assertion type="XPath Match" name="XPath Match" id="da560053-2d5b-49a3-b83b-8f53144aab47"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getLogs Invalid start date and time format" id="e86c51a5-fdd5-4ff2-8e45-43f9eeb212c8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetLogs</con:operation><con:request name="getLogs Invalid start date and time format" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLogs>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>${#Project#MAINTENANCE-CommandsList}</data:CommandType>
         </main:commandList>
         <!--Optional:-->
         <main:startDateTime>2011-0130T15:23::45Z</main:startDateTime>
         <!--Optional:-->
         <main:endDateTime>${#Project#MAINTENANCE-LogsEndDateTime}</main:endDateTime>
         <!--Optional:-->
         <main:language>${#Project#MAINTENANCE-LogsLanguage}</main:language>
      </main:GetLogs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="44e61549-1f58-43a8-b852-002971642aa6"/><con:assertion type="Schema Compliance" id="5c61b85c-fed7-445e-9d2b-10f1b2b705cf"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="31144c70-72f6-4c52-bf8a-648b2e4068dd"/><con:assertion type="XPath Match" name="XPath Match" id="c10ec593-6a17-48ee-8f2e-432fc9af79ff"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getLogs Invalid end date and time format" id="99fa5cdb-2afc-43d8-8f55-d4ff7af4ac66"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetLogs</con:operation><con:request name="getLogs Invalid end date and time format" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLogs>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>${#Project#MAINTENANCE-CommandsList}</data:CommandType>
         </main:commandList>
         <!--Optional:-->
         <main:startDateTime>${#Project#MAINTENANCE-LogsStartDateTime}</main:startDateTime>
         <!--Optional:-->
         <main:endDateTime>0001-0130T15:23::45Z</main:endDateTime>
         <!--Optional:-->
         <main:language>${#Project#MAINTENANCE-LogsLanguage}</main:language>
      </main:GetLogs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="77228b7d-972a-4aa8-9edf-fd6060391112"/><con:assertion type="Schema Compliance" id="2ae75b55-5e34-4a92-a6b5-3eb2644c7710"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="29332d4e-0e1f-446c-ab10-d126b3c0f48f"/><con:assertion type="XPath Match" name="XPath Match" id="f5b6d8d7-59d5-4b1b-84d2-705c69a7584c"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Define invalid End Date" id="b22a9c25-9116-46ba-9a18-025acee54631"><con:description>Define a Start date greater than the End Date</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="getLogs Invalid end date and time" id="1d90f43a-3693-4285-be67-1a1b92e3d3a5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetLogs</con:operation><con:request name="getLogs Invalid end date and time" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLogs>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>${#Project#MAINTENANCE-CommandsList}</data:CommandType>
         </main:commandList>
         <!--Optional:-->
         <main:startDateTime>${#Project#MAINTENANCE-LogsStartDateTime}</main:startDateTime>
         <!--Optional:-->
         <main:endDateTime>${#Project#MAINTENANCE-LogsEndDateTime}</main:endDateTime>
         <!--Optional:-->
         <main:language>${#Project#MAINTENANCE-LogsLanguage}</main:language>
      </main:GetLogs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="491f7917-c23d-451d-9f74-dbe57b11e2f5"/><con:assertion type="Schema Compliance" id="73f36108-66cd-4994-ad8e-f2768b65d0a2"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="8cbbe7e6-1398-4057-8704-23c0807546d5"/><con:assertion type="XPath Match" name="XPath Match" id="cca94d38-e98f-4481-95c3-d501cc5cc16d"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A10-3 -- getLogs MaxNumberOfScheduledMessage Test Case" searchProperties="true" id="91934a09-4960-4c8e-9ac2-291ac293d155"><con:settings/><con:testStep type="manualTestStep" name="Generate Logs" id="f2fd4596-a1fd-4e89-9f45-a683ba7a0ed8"><con:description>In the History log configuration file, define a value for MaxNumberOfScheduledMessageInGetLog
Send several requests (Send scheduled Messages) to have a number of logs between Start date and End date greater
 than the maximum number of scheduled messages that can be retrieved in a single call to getLogs (MaxNumberOfScheduledMessageInGetLog)</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="getLogs" id="e91cb5e4-983f-42e6-8edb-31417894f516"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetLogs</con:operation><con:request name="getLogs" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLogs>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>${#Project#MAINTENANCE-CommandsList}</data:CommandType>
         </main:commandList>
         <!--Optional:-->
         <main:startDateTime>${#Project#MAINTENANCE-LogsStartDateTime}</main:startDateTime>
         <!--Optional:-->
         <main:endDateTime>${#Project#MAINTENANCE-LogsEndDateTime}</main:endDateTime>
         <!--Optional:-->
         <main:language>${#Project#MAINTENANCE-LogsLanguage}</main:language>
      </main:GetLogs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92d20a02-ed13-4201-bafc-124e8984a39c"/><con:assertion type="Schema Compliance" id="3ae3bdcf-d82b-4740-a1c9-9fd0757c1711"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="0a509676-a575-488c-9590-d6f82c7e9456"/><con:assertion type="XPath Match" name="XPath Match" id="1cce534c-95fb-46ea-8e29-25b1895c7fcf"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>OUTPUT_LIMIT_EXCEEDED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Result" id="7a450610-af4e-402b-bdcb-025f8a55bce0" disabled="true"><con:description>Check getLogs Response</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Only the configured MaxNumberOfScheduledMessageInGetLog is displayed in response</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Generate 500 Logs" id="ab266752-8187-4414-93f0-f79dede53922"><con:description>In the History log configuration file, define  MaxNumberOfScheduledMessageInGetLog = 500
Send several requests (Send scheduled Messages) to have 500 logs between Start date and End date 
 </con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="getLogs 500" id="75202f45-a7a9-49f0-b202-b23b8885aa68"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetLogs</con:operation><con:request name="getLogs 500" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLogs>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>${#Project#MAINTENANCE-CommandsList}</data:CommandType>
         </main:commandList>
         <!--Optional:-->
         <main:startDateTime>${#Project#MAINTENANCE-LogsStartDateTime}</main:startDateTime>
         <!--Optional:-->
         <main:endDateTime>${#Project#MAINTENANCE-LogsEndDateTime}</main:endDateTime>
         <!--Optional:-->
         <main:language>${#Project#MAINTENANCE-LogsLanguage}</main:language>
      </main:GetLogs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c0175ddd-ec25-46b0-a9ed-522937dcb0cc"/><con:assertion type="Schema Compliance" id="2263fda4-5d4d-4fb7-99d6-fffb30758c58"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="c5594b3f-60dd-4c67-a19c-9eaf93958b2b"/><con:assertion type="XPath Match" name="XPath Match" id="0670745c-d9e5-4425-8aff-acaa2b76050f"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>TOO MUCH DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check Response" id="79e55605-641b-4f80-a5db-572015d512ca"><con:description>Verify that the 500 logs are displayed in response</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A10-4 -- getLogs MaxNumberOfScheduledMessageInLogDatabase Test Case" searchProperties="true" id="21231159-0330-43ff-9f40-2120ef61ecc6"><con:settings/><con:testStep type="manualTestStep" name="Generate Logs" id="e1f23c75-fe8e-4109-acae-e6782e191383"><con:description>In the History log configuration file, define a value for MaxNumberOfScheduledMessageInLogDatabase
Send several requests (Send scheduled Messages) to reach the configured MaxNumberOfScheduledMessageInLogDatabase
</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>When the MaxNumberOfScheduledMessageInLogDatabase is reached, the configured 
 PercentageOfMaxNumberOfScheduledMessageToCleanUpInLogDatabase of oldest requests are removed from the database.</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="getLogs" id="f667743a-18e3-4341-a9b1-c958800bd1c6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>GetLogs</con:operation><con:request name="getLogs" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:GetLogs>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>${#Project#MAINTENANCE-CommandsList}</data:CommandType>
         </main:commandList>
         <!--Optional:-->
         <main:startDateTime>${#Project#MAINTENANCE-LogsStartDateTime}</main:startDateTime>
         <!--Optional:-->
         <main:endDateTime>${#Project#MAINTENANCE-LogsEndDateTime}</main:endDateTime>
         <!--Optional:-->
         <main:language>${#Project#MAINTENANCE-LogsLanguage}</main:language>
      </main:GetLogs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dbf57c30-8327-4afc-a837-a450d1ea3395"/><con:assertion type="Schema Compliance" id="eeedbd19-deea-4ac2-a07d-583a888418e0"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="78d517a5-a8e0-415a-989f-8e98d9caea0b"/><con:assertion type="XPath Match" name="XPath Match" id="4291644e-bee9-4833-b1f7-683df302d415"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>TOO MUCH DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A11-1 -- cleanLogs Test Case" searchProperties="true" id="d6211232-c4d3-42af-a9e7-fe66fb404677"><con:settings/><con:testStep type="request" name="cleanLogs" id="db0d7188-fffc-4f03-a886-01e6a45d7450"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>CleanLog</con:operation><con:request name="cleanLogs" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:CleanLog>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>${#Project#MAINTENANCE-CleanCommandsList}</data:CommandType>
         </main:commandList>
      </main:CleanLog>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8269544a-b30b-48a5-b6e4-abdbfccc27e2"/><con:assertion type="Schema Compliance" id="7ecf1773-c52c-4844-8085-88b8a6a9ce8a"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="b12fb3c0-940f-4f3d-b64e-71691a6250cd"/><con:assertion type="XPath Match" name="XPath Match" id="f5920cc3-d68b-4cc9-ba6b-c980d467c19b"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/ground/core/data/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';

//a:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check logs" id="1e1b3004-8bca-418e-9f06-3d08dedfab3d"><con:description>Check that the requested command are removed from history logs database</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A11-2 -- cleanLogs Invalid Command ListTest Case" searchProperties="true" id="184ef79c-1f5c-45df-b70e-18a2d7b26ad5"><con:settings/><con:testStep type="request" name="cleanLogs" id="e18381aa-cbbb-4ccc-8704-0dc8237cf137"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMaintenanceService</con:interface><con:operation>CleanLog</con:operation><con:request name="cleanLogs" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Maintenance/MaintenanceService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:main="http://alstom.com/pacis/pis/ground/maintenance/" xmlns:data="http://alstom.com/pacis/pis/ground/core/data/">
   <soapenv:Header/>
   <soapenv:Body>
      <main:CleanLog>
         <!--Optional:-->
         <main:sessionId>${#Project#INTERNAL-SessionID}</main:sessionId>
         <!--Optional:-->
         <main:commandList>
            <!--Zero or more repetitions:-->
            <data:CommandType>InvalidCommandsList</data:CommandType>
         </main:commandList>
      </main:CleanLog>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b18221a1-778f-4a47-b86a-1157304c52c3"/><con:assertion type="Schema Compliance" id="1443f360-1349-4ce3-b7c2-f47c7e24aafd"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="6df39567-2718-4aca-b799-dfaf1448f94f"/><con:assertion type="XPath Match" name="XPath Match" id="98daab51-7c14-420d-aaba-b3ff52a85390"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/maintenance/';
declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID COMMAND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Check logs" id="85c44d2f-16eb-401a-81e6-613c7928ef50"><con:description>Check that the requested command are removed from history logs database</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1460-A12-1 -- History Logs Database Management Test Case" searchProperties="true" id="1095b118-4243-4a31-a729-f9e79b1c011c"><con:settings/><con:testStep type="manualTestStep" name="See SyTD" id="8ccaf46e-6c81-473c-9dac-5c1359bbf52b"><con:description>See step A12 in SyTD</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="TC_PIS_Sy_1480 - JournalingService TestSuite" id="0e375366-0eb7-4f22-92cc-7f374bb2347d"><con:description>WEB SERVICE INFOTAINMENT-JOURNALING

[RefSol_PIS2G_GroundApp_SyID_0011], [RefSol_PIS2G_GroundApp_SyID_0012], [RefSol_PIS2G_GroundApp_SyID_0013],
[RefSol_PIS2G_GroundApp_SyID_0014], [RefSol_PIS2G_GroundApp_SyID_0015], [RefSol_PIS2G_GroundApp_SyID_0016],
[RefSol_PIS2G_GroundApp_SyID_0150], [RefSol_PIS2G_GroundApp_SyID_0151], [RefSol_PIS2G_GroundApp_SyID_0152],
[RefSol_PIS2G_GroundApp_SyID_0065], [RefSol_PIS2G_GroundApp_SyID_0066], [RefSol_PIS2G_GroundApp_SyID_0067], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], [RefSol_PIS2G_GroundApp_SyID_0222],
</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1480-A1-1 -- RetrieveElementList TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f832e857-f878-4cfb-848f-e637d9062d16"><con:settings/><con:testStep type="request" name="RetrieveElementList" id="64b1619d-ce3d-4dea-a484-5d51e0319641"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetAvailableElementList</con:operation><con:request name="RetrieveElementList" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetAvailableElementList>
         <!--Optional:-->
         <jour:sessionId>${#Project#INTERNAL-SessionID}</jour:sessionId>
      </jour:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a324872d-2062-411c-b754-9ed381f540d5"/><con:assertion type="XPath Match" name="XPath Match" id="46c0810e-328b-40d0-aaaa-0049bd12529e"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/RetrieveElementList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1480-A2-1 -- GetReport for Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="76b198e3-27ab-4565-9da6-7b516badb48f"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing the infotainment journaling report.

The request is sent to an Element Alpha Number.

Expected Result :The PIS shall return the Request ID and send status "processing", "downloading" then "download completed".
	       The ground PIS shall download the journaling report files from the selected adressee.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0150], [RefSol_PIS2G_GroundApp_SyID_0151], [RefSol_PIS2G_GroundApp_SyID_0152]

Requirements update download status  :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], 
[RefSol_PIS2G_GroundApp_SyID_0222]</con:description><con:settings/><con:testStep type="request" name="GetReport Online Element Number" id="458377ec-ae46-4122-bf90-e839c2469321"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9831a337-1bd6-4eef-b7f6-a08890f7f44b"/><con:assertion type="SOAP Response" name="SOAP Response" id="955f7e79-7a78-4a72-95b1-a1f750b162d4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="20a36ffd-c19f-414e-8c93-6aff50d7aa25"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b1b868ab-6f9c-42c8-ae13-056b04142103"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="e10ef9e5-888c-48ef-be6a-429f8eac8829"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetReport Online Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
//ns1:GetReportResponse[1]/ns1:GetReportResult[1]/ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="c3c6d223-68b4-4d1c-9254-3ff92e269088"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDownloadStatusProcessing
- UpdateDownloadStatusDownloading
- UpdateDownloadStatusDownloadCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="41a1869f-36d4-42be-a48b-b4361b28bf99"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InfotainmentDownloadProcessing",
					 "InfotainmentDownloadDownloading",
					 "InfotainmentDownloadCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>935b5afc-be01-4628-98a6-91d68b2c95f8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1480-A2-2 -- GetReport for Mission Commercial Number TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="9b09f401-7800-4ac1-b493-7af1ea06fc7b" disabled="true"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing the infotainment journaling report.

The request is sent to a Mission Commercial Number.

Expected Result :The PIS shall return the Request ID and send status "processing", "downloading" then "download completed".
	       The ground PIS shall download the journaling report files from the selected adressee.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0150], [RefSol_PIS2G_GroundApp_SyID_0151], [RefSol_PIS2G_GroundApp_SyID_0152]

Requirements update download status  :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], 
[RefSol_PIS2G_GroundApp_SyID_0222]</con:description><con:settings/><con:testStep type="request" name="GetReport Mission Commercial Number" id="abf3bba2-b52e-4ee2-aac6-a19625b35533"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Mission Commercial Number" outgoingWss="" incomingWss="" timeout="15000"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@max-size">0</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="20072713-5b15-4732-a9ed-dcc7ebcf5f2c"/><con:assertion type="SOAP Response" name="SOAP Response" id="0df69a95-3f7a-483c-b5de-c434ed610f90"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a173cbfa-6b2f-4f3f-bef2-5762192a5862"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="83663cf4-2615-43db-a185-12b348034610"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="ceb93f64-9bf1-4f05-bbf4-bd57ea255093"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetReport Mission Commercial Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
//ns1:GetReportResponse[1]/ns1:GetReportResult[1]/ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="b338cc2b-0768-43b3-8296-58d24257b808"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDownloadStatusProcessing
- UpdateDownloadStatusDownloading
- UpdateDownloadStatusDownloadCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="445b8fe4-cd1e-429f-9a73-59b82dadae1a"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InfotainmentDownloadProcessing",
					 "InfotainmentDownloadDownloading",
					 "InfotainmentDownloadCompleted"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1480-A2-3 -- GetReport for Mission Operator Code TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e34ece1f-a7f0-4bd8-ab3b-a02abafa3848" disabled="true"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing the infotainment journaling report.

The request is sent to a Mission Operator Code.

Expected Result :The PIS shall return the Request ID and send status "processing", "downloading" then "download completed".
	       The ground PIS shall download the journaling report files from the selected adressee.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0150], [RefSol_PIS2G_GroundApp_SyID_0151], [RefSol_PIS2G_GroundApp_SyID_0152]

Requirements update download status  :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], 
[RefSol_PIS2G_GroundApp_SyID_0222]</con:description><con:settings/><con:testStep type="request" name="GetReport Mission Operator Code" id="a94c40c1-c244-4d36-a0f7-9ab611097466"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Mission Operator Code" outgoingWss="" incomingWss="" timeout="15000"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@max-size">0</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9bde47e6-85bb-4c02-a3f9-a33b96cb583d"/><con:assertion type="SOAP Response" name="SOAP Response" id="e5c88fad-d7d0-43e5-b0f5-b842a944a78c"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="78275c68-7ca4-43dd-82c8-c7fe3688f783"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="7aa836cb-a139-456c-a789-99e1b08a9cd2"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="7b5419a5-ac68-4bd2-a7a5-efb1606c3525"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetReport Mission Operator Code</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
//ns1:GetReportResponse[1]/ns1:GetReportResult[1]/ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="07c91e61-3f02-4e65-8346-c108f0d379a1"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDownloadStatusProcessing
- UpdateDownloadStatusDownloading
- UpdateDownloadStatusDownloadCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="17b25c98-a94f-41ad-9f31-57bb3bb43244"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InfotainmentDownloadProcessing",
					 "InfotainmentDownloadDownloading",
					 "InfotainmentDownloadCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>91e73248-4f17-4672-af3f-9cfd12dfd308</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1480-A2-4 -- GetReport for Offline Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="cad83bc4-63b3-4356-a24c-f6cb39810cd2"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing the infotainment journaling report.

The request is sent to an offline Element Alpha Number.

Expected Result :The PIS shall return the Request ID and send status "processing", "waiting to send " then "timed out".
	       

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0150], [RefSol_PIS2G_GroundApp_SyID_0151], [RefSol_PIS2G_GroundApp_SyID_0152]

Requirements update download status  :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], 
</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="cbaa2e57-e3c6-4523-a18d-fbd4fa600f3c"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetReport Offline Element Number" id="1e9b189b-dfe2-4eba-b1d0-5bd9e024d70e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Offline Element Number" outgoingWss="" incomingWss="" timeout="15000"><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="10d4c3ca-8e15-47dc-b8e6-63cc521fa135"/><con:assertion type="SOAP Response" name="SOAP Response" id="95abc096-41bf-4ba6-bc72-fe3ae0cc69af"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="dd197bb8-3bad-49c2-b54c-1f01e53a54cf"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6218adb8-f87a-4704-9e35-0cb73c741bfa"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="ebaa8270-b62e-41ed-a8f6-b4e502dc2fc4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetReport Offline Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
//ns1:GetReportResponse[1]/ns1:GetReportResult[1]/ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="71120c1b-6ce9-4261-89cf-688f9377a335"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDownloadStatusProcessing
- UpdateDownloadStatusWaitingToSend
- UpdateDownloadStatusTimedOut</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="422e7af2-c644-4fe9-9565-e5d54e289853"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InfotainmentDownloadProcessing",
					 "InfotainmentDownloadWaitingToSend",
					 "InfotainmentDownloadTimedOut"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>fa4bbce3-85e5-4e7c-8340-ff39186054d2</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1480-A2-5 -- GetReport for Offline then Online TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="12ff244a-995d-4bff-9c70-aa9b319bd9ff"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing the infotainment journaling report.

The request is sent to an offlineElement Alpha Number. Element comes back online before timeout

Expected Result :The PIS shall return the Request ID and send status "processing","waiting to send", "downloading" then "download completed".
	       The ground PIS shall download the journaling report files from the selected adressee.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0150], [RefSol_PIS2G_GroundApp_SyID_0151], [RefSol_PIS2G_GroundApp_SyID_0152]

Requirements update download status  :
[RefSol_PIS2G_GroundApp_SyID_0065],  [RefSol_PIS2G_GroundApp_SyID_0066], 
[RefSol_PIS2G_GroundApp_SyID_0068], [RefSol_PIS2G_GroundApp_SyID_0069], 
[RefSol_PIS2G_GroundApp_SyID_0222]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="26fb557b-5a63-4aae-ad08-1252b02c5842"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetReport Offline then Online Element Number" id="2bfba8b2-76fa-4292-8012-45c7bc3765b0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Offline then Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f95c3307-43e4-47b0-b6a7-66eaac72a89c"/><con:assertion type="SOAP Response" name="SOAP Response" id="b08ea9db-88dc-4465-9dba-7d0650f619f9"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="2ba8c89d-d985-4881-bf00-33994ca93af1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="3491a6e0-b768-4054-8630-041b9a4d2d37"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="779219d4-ffe3-49ab-9236-cb459b6b7b7b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetReport Offline then Online Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
//ns1:GetReportResponse[1]/ns1:GetReportResult[1]/ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="d7f4eebc-d602-455e-9649-ca467f4768fe"><con:description>Put adressee element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="a8369fe6-67d8-4dbf-9842-4b987f70ec95"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- UpdateDownloadStatusProcessing
- UpdateDownloadStatusWaitingToSend
- UpdateDownloadStatusDownloading
- UpdateDownloadStatusDownloadCompleted</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="458d65e8-4008-4e95-b568-fc7c071b067f"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InfotainmentDownloadProcessing",
					 "InfotainmentDownloadWaitingToSend",
					 "InfotainmentDownloadDownloading",
					 "InfotainmentDownloadCompleted"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>c44ee5c1-36af-4528-a48e-b3cfdf2f1d76</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1480-A2-6 -- GetReport Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="41f546ab-5f68-4fb9-8f00-aa9a695195fe"><con:description>Test the function that allows the GroundApp to request from the PIS to provide files containing the infotainment journaling report.

When the request is sent with invalid informations, PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0332]
</con:description><con:settings/><con:testStep type="request" name="GetReport Bad Session ID" id="24de3af2-2d0b-4a28-8e12-a84f1fefa4ba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Bad Session ID" outgoingWss="" incomingWss="" timeout="15000"><con:description>The session ID sent is invalid. Expected Result : PIS shall return Bad session ID error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#DEGRADED-GEN-BadSessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-MissionOperatorCode}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType3}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="35e97e37-a01e-4ed4-a864-5caedd169a0c"/><con:assertion type="SOAP Response" name="SOAP Response" id="478b6cee-c5b7-46c4-85f2-ef5f0db1cb9a"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="e12ccb0e-aa7d-43a0-bfb7-19aaf2a2097b"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a8c951ad-443c-46a9-865f-4def3ef3c448"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetReport Unknown Element Number" id="d332e443-05a4-4538-9ad8-e81fda2ea205"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Unknown Element Number" outgoingWss="" incomingWss="" timeout="15000"><con:description> Element alpha number is invalid. Expected Result : PIS shall return unknown element number error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="87257bdd-5c87-473e-aeb6-155561e72a36"/><con:assertion type="SOAP Response" name="SOAP Response" id="120c7635-fe38-44b5-807a-0e32dc914daa"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4b33cb24-bdd3-4672-850a-e6befe226e90"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b20316bd-3164-4942-b298-72e84b3ba87b"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>UNKNOWN_ELEMENT_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetReport Unknown Mission ID" id="34677a27-00c1-428d-bcfb-5c6f770e7a09"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Unknown Mission ID" outgoingWss="" incomingWss="" timeout="15000"><con:description>Mission number is invalid. Expected Result : PIS shall return unknown mission ID error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#DEGRADED-GEN-UnknownMissionID}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="889c0f2a-a550-45a7-8a1e-6d66a7ca660b"/><con:assertion type="SOAP Response" name="SOAP Response" id="a61f5971-fb15-46bc-9236-eec457ff12e3"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="0e9a7abd-8e0b-45b1-b73b-e20be92c9282"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="66c852d9-8dd8-43d0-a3ef-5568cf49be87"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>UNKNOWN_MISSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetReport Invalid Request Timeout" id="9aecdc6d-4b20-424b-b9f2-861f597b88cd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Invalid Request Timeout" outgoingWss="" incomingWss="" timeout="15000"><con:description>Request timeout is invalid. Expected Result : PIS shall return invalid request timeout error</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-MissionCommercialNumber}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType2}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9b864666-83f6-4600-a536-6394b7caf349"/><con:assertion type="SOAP Response" name="SOAP Response" id="eea51158-5a21-40c8-8094-29a0ecca1413"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="faae1ee4-89ea-46e9-ad5d-cca251f4c19b"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="fe6c0aa5-639b-4a2a-b2ab-73d74dad3cc3"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_REQUEST_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1480-A4-1 -- GetReport Unknown Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="cecab716-2c3d-4b17-9c05-8d1a59e8dae1"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Onboard T2G" id="12754e03-74b7-4568-a80a-6bf9faaa85eb"><con:description>Stop Onboard T2G</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Train is Offline</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="GetReport Online Element Number" id="7d5c402d-6ee5-404d-aff7-2ad304455f83"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9831a337-1bd6-4eef-b7f6-a08890f7f44b"/><con:assertion type="SOAP Response" name="SOAP Response" id="955f7e79-7a78-4a72-95b1-a1f750b162d4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="20a36ffd-c19f-414e-8c93-6aff50d7aa25"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b1b868ab-6f9c-42c8-ae13-056b04142103"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="0576cdfa-58f2-4011-b7c7-54ff00f44902"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetReport Online Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
//ns1:GetReportResponse[1]/ns1:GetReportResult[1]/ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Restart T2G Ground Server" id="e56dd463-fbc5-43ae-a552-5bd9023a7124"><con:description>Restart T2G Ground Server (IIS)</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult/></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="82a96452-addf-4bf5-80f3-adbc427763f4"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Notification InfotainmentDownloadElementNotFound (with also CommonT2GServerOffline &amp;  CommonT2GServerOnline notification)</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" disabled="true" id="582dde55-b3b4-45b7-b18e-8e03a77134c3"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InfotainmentDownloadProcessing",
					 "InfotainmentDownloadElementNotFound"]
					  
def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1480-A5-1 -- GetReport T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="52c4d048-d72a-45a9-8164-4093f621dca1" disabled="true"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Stop Embedded T2G Controller" id="4a1d0992-11b2-45d0-8c33-1f982ae1153e"><con:description>Stop Embedded T2G Controller</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetReport Online Element Number" id="9ca7c58e-984d-4522-ae03-9898cea7ceb7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9831a337-1bd6-4eef-b7f6-a08890f7f44b"/><con:assertion type="SOAP Response" name="SOAP Response" id="955f7e79-7a78-4a72-95b1-a1f750b162d4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="20a36ffd-c19f-414e-8c93-6aff50d7aa25"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b1b868ab-6f9c-42c8-ae13-056b04142103"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="c4e763db-e3ae-493b-9ca9-0ad9cf1bea7a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetReport Online Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
//ns1:GetReportResponse[1]/ns1:GetReportResult[1]/ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="40425d5b-b083-4495-8b7f-b1ba89b57e14"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="delay" name="Delay" id="e0bd7101-1695-45d8-bf7a-ae90aca019e2"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="request" name="GetReport T2G OFFLINE" id="541abb09-6878-4913-a087-6440de814ee2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport T2G OFFLINE" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9831a337-1bd6-4eef-b7f6-a08890f7f44b"/><con:assertion type="SOAP Response" name="SOAP Response" id="955f7e79-7a78-4a72-95b1-a1f750b162d4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="20a36ffd-c19f-414e-8c93-6aff50d7aa25"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b1b868ab-6f9c-42c8-ae13-056b04142103"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>T2G_SERVER_OFFLINE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="99955b6d-732e-4a7e-b654-7892e053f86e"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Following notifications should be received:

"InfotainmentDownloadProcessing",
InfotainmentDownloadWaitingToSend
"CommonT2GServerOffline"
"InfotainmentT2GServerOffline"</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" disabled="true" id="0db18b3c-3108-4aa3-982c-e4f9c0127eac"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["InfotainmentDownloadProcessing",
					 "InfotainmentT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>RequestID</con:name><con:value>feb784a0-ae2d-49bd-b956-4da2be98546c</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1480-A6-1 -- GetReport Train Service not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8b4395a1-f197-4d05-9148-c637c529a8f5"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Bad service configuration" id="cb15f8ad-f01e-4979-9ec4-24de282f95d5"><con:description>Stop PIS Ground Server
Set Loaded Key to "0" in Media server registry VMC3GSIF/Plugins/SIFWSInstantMessageServer
Restart Media server
Restart PIS Ground 
Relog to PIS ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetReport Online Element Number" id="179dc6a7-245c-4898-ab1b-142502b68822"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_JournalingService</con:interface><con:operation>GetReport</con:operation><con:request name="GetReport Online Element Number" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/InfotainmentJournaling/JournalingService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:jour="http://alstom.com/pacis/pis/ground/infotainment/journaling/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <jour:GetReport>
         <!--Optional:-->
         <jour:SessionId>${#Project#INTERNAL-SessionID}</jour:SessionId>
         <!--Optional:-->
         <jour:TargetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </jour:TargetAddress>
         <!--Optional:-->
         <jour:RequestTimeout>${#Project#-GEN-RequestTimeout}</jour:RequestTimeout>
      </jour:GetReport>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9831a337-1bd6-4eef-b7f6-a08890f7f44b"/><con:assertion type="SOAP Response" name="SOAP Response" id="955f7e79-7a78-4a72-95b1-a1f750b162d4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="20a36ffd-c19f-414e-8c93-6aff50d7aa25"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b1b868ab-6f9c-42c8-ae13-056b04142103"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/infotainment/journaling/JournalingService/GetReport" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="30fea954-b441-48f4-a60b-6e842d6c9d48"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>RequestID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetReport Online Element Number</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/infotainment/journaling/';
//ns1:GetReportResponse[1]/ns1:GetReportResult[1]/ns1:RequestId[1]</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="2c3d7d22-e43d-497e-bd40-551f0fd3275a"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>The following notifications shall be received:
"InstantMessageDistributionProcessing"
 "InstantMessageServiceNotFound"
</con:expectedResult></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>7fdc2d0f-9cae-4a76-b71c-0e3bafd065f1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="TC_PIS_Sy_1490 - MissionService TestSuite" disabled="true" id="e463e515-1a3e-4d1e-80d4-57f97afecbf9"><con:description>WEBSERVICE MISSION

[RefSol_PIS2G_GroundApp_SyID_0227],[RefSol_PIS2G_GroundApp_SyID_0228],[RefSol_PIS2G_GroundApp_SyID_0229],
[RefSol_PIS2G_GroundApp_SyID_0230],[RefSol_PIS2G_GroundApp_SyID_0231],[RefSol_PIS2G_GroundApp_SyID_0232],
[RefSol_PIS2G_GroundApp_SyID_0233],[RefSol_PIS2G_GroundApp_SyID_0234],[RefSol_PIS2G_GroundApp_SyID_0235],
[RefSol_PIS2G_GroundApp_SyID_0236],[RefSol_PIS2G_GroundApp_SyID_0237],[RefSol_PIS2G_GroundApp_SyID_0238],
[RefSol_PIS2G_GroundApp_SyID_0239],[RefSol_PIS2G_GroundApp_SyID_0240],[RefSol_PIS2G_GroundApp_SyID_0241],
[RefSol_PIS2G_GroundApp_SyID_0242],[RefSol_PIS2G_GroundApp_SyID_0243],[RefSol_PIS2G_GroundApp_SyID_0244],
[RefSol_PIS2G_GroundApp_SyID_0245],[RefSol_PIS2G_GroundApp_SyID_0246],[RefSol_PIS2G_GroundApp_SyID_0247],
[RefSol_PIS2G_GroundApp_SyID_0248],[RefSol_PIS2G_GroundApp_SyID_0249],[RefSol_PIS2G_GroundApp_SyID_0250],
[RefSol_PIS2G_GroundApp_SyID_0251],[RefSol_PIS2G_GroundApp_SyID_0252],[RefSol_PIS2G_GroundApp_SyID_0253],
[RefSol_PIS2G_GroundApp_SyID_0254],[RefSol_PIS2G_GroundApp_SyID_0255],[RefSol_PIS2G_GroundApp_SyID_0256],
[RefSol_PIS2G_GroundApp_SyID_0257],[RefSol_PIS2G_GroundApp_SyID_0258],[RefSol_PIS2G_GroundApp_SyID_0259],
[RefSol_PIS2G_GroundApp_SyID_0260],[RefSol_PIS2G_GroundApp_SyID_0261],[RefSol_PIS2G_GroundApp_SyID_0262],
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269],[RefSol_PIS2G_GroundApp_SyID_0011],[RefSol_PIS2G_GroundApp_SyID_0012], 
[RefSol_PIS2G_GroundApp_SyID_0013],[RefSol_PIS2G_GroundApp_SyID_0014],[RefSol_PIS2G_GroundApp_SyID_0015],
[RefSol_PIS2G_GroundApp_SyID_0016]
</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A1-1 -- InitializeAutomaticMission Online Element TestCase" searchProperties="true" id="8b468e0f-e4d8-4e7e-b2a7-028c80dc02bd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

The request is sent to an online element

Expected result :
 The ground PIS shall transfer the mission initialization command to the selected element.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0227],[RefSol_PIS2G_GroundApp_SyID_0228],[RefSol_PIS2G_GroundApp_SyID_0229],
[RefSol_PIS2G_GroundApp_SyID_0230],[RefSol_PIS2G_GroundApp_SyID_0231],[RefSol_PIS2G_GroundApp_SyID_0232],
[RefSol_PIS2G_GroundApp_SyID_0233],[RefSol_PIS2G_GroundApp_SyID_0234],[RefSol_PIS2G_GroundApp_SyID_0235]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="7139b598-75e9-4baf-965f-234495a8242c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="9c867922-a6e3-45ad-a67e-9a649dfc6de3"/><con:assertion type="SOAP Response" name="SOAP Response" id="66143455-30ab-4d87-9c24-88b998fd23bc"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="72cbf3e5-dfc6-4575-9d1d-3a8c3cd36772"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="4448601a-2d76-4bf7-a489-a5c99d238e12"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="3e1aa65c-6297-4006-bb7f-f0302ba8cc36"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="504c5b51-e7a2-426d-8321-40df0f8396fc"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="65f346da-8f26-4810-a5b9-e7c56dcff167"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>ff428bcf-8fd1-4597-88a1-890671724cea</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A1-1-2 -- InitializeAutomaticMission Onborad Validation Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fcf48afe-e1e1-440a-b65f-ab466a15a434"><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

The request is sent to an online element

Expected result :
 The ground PIS shall transfer the mission initialization command to the selected element.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0227],[RefSol_PIS2G_GroundApp_SyID_0228],[RefSol_PIS2G_GroundApp_SyID_0229],
[RefSol_PIS2G_GroundApp_SyID_0230],[RefSol_PIS2G_GroundApp_SyID_0231],[RefSol_PIS2G_GroundApp_SyID_0232],
[RefSol_PIS2G_GroundApp_SyID_0233],[RefSol_PIS2G_GroundApp_SyID_0234],[RefSol_PIS2G_GroundApp_SyID_0235]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="0985ea7c-58fc-4032-85c2-9da31cfd2d36"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>true</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e7d6fd8e-6e4c-42b0-aa1e-48718fba3142"/><con:assertion type="SOAP Response" name="SOAP Response" id="aec44e89-00b4-4d32-bb74-1bb7f8ceb422"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="34c1def9-2d05-41ac-8716-5400fc3a7378"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b01bf35b-a2be-4828-bbe8-4afa64cbac7f"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="2a0d9dfc-8ff6-49a4-8c20-f6e4458107a7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Manual TestStep" id="f12349e2-f203-4353-8a8a-0bc4df98ccab"><con:description>Validate Mission Lauch on Onboard HMI</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="6d6befa6-2e1d-4393-850d-e496bdcfa59e"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="a469bf8d-41eb-449f-a18c-6736fe113e41"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressSent",
					 "MissionCommandProgressPendingValidation",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>3a81b68d-deda-4783-984d-ca67cbfc8c65</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A1-2 -- InitializeAutomaticMission Offline Element TestCase" searchProperties="true" id="9b35d5e1-8b01-45d0-bda9-3606719662d7" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

The request is sent to an offline  element

Expected result :
 The ground PIS shall reject the request(timeout) and notify the GroundApp

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0227],[RefSol_PIS2G_GroundApp_SyID_0228],[RefSol_PIS2G_GroundApp_SyID_0229],
[RefSol_PIS2G_GroundApp_SyID_0230],[RefSol_PIS2G_GroundApp_SyID_0231],[RefSol_PIS2G_GroundApp_SyID_0232],
[RefSol_PIS2G_GroundApp_SyID_0233],[RefSol_PIS2G_GroundApp_SyID_0234],[RefSol_PIS2G_GroundApp_SyID_0235]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="0210dbd6-ab00-42d8-87b6-7838e14e92b4"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeAutomaticMission" id="0be32672-0949-4a8b-aedc-b36005b4f0bb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f4baa130-39dd-473e-89c6-870c3a660510"/><con:assertion type="SOAP Response" name="SOAP Response" id="09e51c2e-bdf7-4bc7-8967-de1fa02252b6"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="33789402-8544-4c77-a0d1-88d110966972"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="de3bd9da-12db-4f15-982c-c391c6bc510e"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="51ee41ed-cb3a-449a-b244-f954d0611bfd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';


//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="8c58190c-5f2f-437c-931a-b387c68411db"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressWaitingToSend
- MissionCommandProgressTimedOut</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="a659f80f-cefa-439f-907e-1e959661815a"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressWaitingToSend",
					  "MissionCommandProgressTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>6a4b011f-7e44-41a8-aa83-8f39b2e29a83</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A1-3 -- InitializeAutomaticMission Offline then Online Element TestCase" searchProperties="true" id="287969c8-7d1e-4044-87f7-65bf0c02355f" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

The request is sent to an offline then online element

Expected result :
 The ground PIS shall transfer the mission initialization command to the selected element.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0227],[RefSol_PIS2G_GroundApp_SyID_0228],[RefSol_PIS2G_GroundApp_SyID_0229],
[RefSol_PIS2G_GroundApp_SyID_0230],[RefSol_PIS2G_GroundApp_SyID_0231],[RefSol_PIS2G_GroundApp_SyID_0232],
[RefSol_PIS2G_GroundApp_SyID_0233],[RefSol_PIS2G_GroundApp_SyID_0234],[RefSol_PIS2G_GroundApp_SyID_0235]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="70e21842-b790-433f-9e7b-303aff1f2ecd"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeAutomaticMission" id="9b03a7cd-f653-4f0f-894b-ff705693c3db"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>4</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5b0aed0e-7c56-4634-9860-a26f49d0ea42"/><con:assertion type="SOAP Response" name="SOAP Response" id="0468f0b1-f063-4c55-ab05-a855898c8b50"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="de7fb358-b30b-4bcc-9dcb-3104785b4651"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="992a8853-d1b1-42e5-82c0-8168f0924c47"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="72ab14fe-6367-4f5c-bf48-aac0a03a4f9a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications 1" disabled="true" id="7309143b-b8e0-4dc1-b8f7-3ede50a52363"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressWaitingToSend</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="1f48ce42-e35a-47fc-8347-ca7325e9185f"><con:description>Put adressee element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications 2" disabled="true" id="f587d185-1622-4470-82a5-03fe9e3de62e"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="b2d7ba91-a324-4426-a069-8be0a7726526"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressWaitingToSend",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>df5c1fac-55ce-4184-bc9e-013f5556df17</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A1-4 -- InitializeAutomaticMission Error Management TestCase" searchProperties="true" id="0c5e9cec-6c70-4fb8-9cd0-e1cc0b39d912" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

The request is sent with invalid informations

Expected result :
 The ground PIS shall return an error

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0333]
</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission Bad Session ID" id="13c63505-0bc7-42ba-91f9-b0a8c6e9fdb8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission Bad Session ID" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>               
            <!--Zero or more repetitions:-->
               <arr:string>${#Project#MISSION-LanguageCode1}</arr:string>
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
                           <!--Zero or more repetitions:-->
               <arr:unsignedInt>${#Project#MISSION-OnboardServiceCode1}</arr:unsignedInt>
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#DEGRADED-GEN-BadSessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="da4eec55-0592-4ccb-8905-73eb45c0edd2"/><con:assertion type="SOAP Response" name="SOAP Response" id="9b33cb2a-a885-46c1-9894-640b2a734939"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="74790d4a-3759-4e07-ad4e-c9c49825651c"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="c7bf6be3-844f-4888-b1ec-5caf50b32f79"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="InitializeAutomaticMission Invalid request timeout" id="5c24d59b-c747-44de-b516-dcb17fe2b5f3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission Invalid request timeout" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               <!--Zero or more repetitions:-->
               <arr:string>${#Project#MISSION-LanguageCode1}</arr:string>
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               <!--Zero or more repetitions:-->
               <arr:unsignedInt>${#Project#MISSION-OnboardServiceCode1}</arr:unsignedInt>
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e02fa85b-0545-4110-aa78-b7a6aa948e63"/><con:assertion type="SOAP Response" name="SOAP Response" id="d6765c2e-e852-448e-a7e7-13ec2e9d728b"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a65cc17b-771e-48e4-960c-32156f5faaef"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6f23cc3c-dad1-4a9f-8bad-af6ad6e9a909"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_REQUEST_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A1-5 -- InitializeAutomaticMission Error Management 2 TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d247d982-9280-490a-8d62-7fc1502bad5c"><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

The request is sent with invalid informations

Expected result :
 The ground PIS shall return an error

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0333]</con:description><con:settings/><con:testStep type="manualTestStep" name="Manual TestStep" id="d24ed554-c32c-4bd4-989b-e16f735f6922"><con:description>Stop RemoteDataStore Servcice on PIS Ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeAutomaticMission PIS Data Store not accessible" id="3e529771-c638-45e3-bfe1-56cbabc89564"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission PIS Data Store not accessible" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               <!--Zero or more repetitions:-->
               <arr:string>${#Project#MISSION-LanguageCode1}</arr:string>
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               <!--Zero or more repetitions:-->
               <arr:unsignedInt>${#Project#MISSION-OnboardServiceCode1}</arr:unsignedInt>
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d7888d36-1ca3-4c86-be26-52795deaee51"/><con:assertion type="SOAP Response" name="SOAP Response" id="8f1c2d10-7255-4e1e-9a98-a15f03b3bdb6"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4402ea87-9694-46b7-9686-7c65ff34b356"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="41da448f-7490-40bb-a667-f5f9775bd4e2"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>PIS_DATASTORE_NOT_ACCESSIBLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A2-1 -- InitializeModifiedMission Online Element TestCase" searchProperties="true" id="f2de9a72-c9f5-4db5-986c-4b4b3fb3f4f3" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize a mission onboard an element in modified mode.
 In modified mode, a mission is initialized using the data already contained in the onboard LMT database with a modified itinerary using stations that are already defined in the LMT database.

The request is sent to an online element

Expected result :
 The ground PIS shall transfer the mission initialization command to the selected element.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0236],[RefSol_PIS2G_GroundApp_SyID_0237],[RefSol_PIS2G_GroundApp_SyID_0238],
[RefSol_PIS2G_GroundApp_SyID_0239],[RefSol_PIS2G_GroundApp_SyID_0240],[RefSol_PIS2G_GroundApp_SyID_0241],
[RefSol_PIS2G_GroundApp_SyID_0242],[RefSol_PIS2G_GroundApp_SyID_0243],[RefSol_PIS2G_GroundApp_SyID_0244]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeModifiedMission" id="51481df3-5b63-4d3a-9ed0-c1097af169d7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="93f20be6-4088-483c-b578-a31732c0138a"/><con:assertion type="SOAP Response" name="SOAP Response" id="050627dd-0f75-4511-8f20-8f0de4b2508c"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="92edded2-3069-4f1b-949d-c708e7f180d0"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2fcfd6f2-daac-4381-be6b-99775fac74fb"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="f37d3be5-4712-41fd-9e0a-d5585175819e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeModifiedMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeModifiedMissionResponse[1]/ns1:InitializeModifiedMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="90de06b5-cac0-4199-b09a-96a2158d6895"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e47ea317-65a6-4a95-8f60-dd05a75e12a9"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>389d8526-4fd9-4aed-946e-69d52dafc2e7</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A2-1-2 -- InitializeModifiedMission Onboard Validation Online Element TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6ece14fe-ab2b-4c69-a529-f94c6ac7465a"><con:description>Test the  function that allows the GroundApp to initialize a mission onboard an element in modified mode.
 In modified mode, a mission is initialized using the data already contained in the onboard LMT database with a modified itinerary using stations that are already defined in the LMT database.

The request is sent to an online element

Expected result :
 The ground PIS shall transfer the mission initialization command to the selected element.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0236],[RefSol_PIS2G_GroundApp_SyID_0237],[RefSol_PIS2G_GroundApp_SyID_0238],
[RefSol_PIS2G_GroundApp_SyID_0239],[RefSol_PIS2G_GroundApp_SyID_0240],[RefSol_PIS2G_GroundApp_SyID_0241],
[RefSol_PIS2G_GroundApp_SyID_0242],[RefSol_PIS2G_GroundApp_SyID_0243],[RefSol_PIS2G_GroundApp_SyID_0244]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeModifiedMission" id="7dd30f54-ec7e-4327-901b-f0c1f9246edf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}

            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>true</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
               

            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberListModified}

            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}

            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}

            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="475fdc75-cf09-4aa6-b22e-4b8fa3686273"/><con:assertion type="SOAP Response" name="SOAP Response" id="54b442e0-9472-4763-8925-40349976bde6"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="247e3e28-83ae-4b2d-b982-565649243dab"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2984d2cb-f3a3-4519-9e2a-6c19bd16935b"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="bbaebd56-0a07-448f-9192-4f33502a3809"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeModifiedMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeModifiedMissionResponse[1]/ns1:InitializeModifiedMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Manual TestStep" id="6d7c197f-1e1b-4e8b-8b40-8f83c5e5ef5e"><con:description>Validate Mission Lauch on Onboard HMI</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="eb91a058-6fa4-4ff0-8068-77f014468a86"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="14fc3cd5-0942-4794-ac89-c7c5b8e0a242"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressPendingValidation",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>3b3da90f-6fc0-41fa-a434-77e982482c87</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A2-2 -- InitializeModifiedMission Offline Element TestCase" searchProperties="true" id="8db56241-e2ec-42ab-a1ba-60e07393af3e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize a mission onboard an element in modified mode.
 In modified mode, a mission is initialized using the data already contained in the onboard LMT database with a modified itinerary using stations that are already defined in the LMT database.

The request is sent to an offline element

Expected result :
 The ground PIS shall reject the request(timeout) and notify the GroundApp

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0236],[RefSol_PIS2G_GroundApp_SyID_0237],[RefSol_PIS2G_GroundApp_SyID_0238],
[RefSol_PIS2G_GroundApp_SyID_0239],[RefSol_PIS2G_GroundApp_SyID_0240],[RefSol_PIS2G_GroundApp_SyID_0241],
[RefSol_PIS2G_GroundApp_SyID_0242],[RefSol_PIS2G_GroundApp_SyID_0243],[RefSol_PIS2G_GroundApp_SyID_0244]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="3012e74a-ef0b-467c-bc3b-3ce7755c6497"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeModifiedMission" id="383d84c5-1c96-401b-8b92-383d6f792388"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}

            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
               

            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberListModified}

            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}

            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}

            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="783b2ef8-dd81-484f-8cf5-46a213b684d3"/><con:assertion type="SOAP Response" name="SOAP Response" id="e2d3343e-bed3-4941-8303-0a1400a996b7"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="5c51cfdd-c6f6-4566-a0d2-da77a50b4604"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b64c6152-7e77-448f-a5a0-c45b1ed57e05"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="2c0a15f6-055b-4289-9a9f-4957610a53fb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeModifiedMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeModifiedMissionResponse[1]/ns1:InitializeModifiedMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="5541cc21-65f7-4c62-bd54-63a9f2849d35"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressWaitingToSend
- MissionCommandProgressTimedOut</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="cec7606e-b037-43d6-abae-861598e84e75"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressWaitingToSend",
					  "MissionCommandProgressTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>51fee7d3-22ad-4ef8-977c-97e5d87dc2a7</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A2-3 -- InitializeModifiedMission Offline then Online Element TestCase" searchProperties="true" id="872b32df-0b33-4e50-8dcf-48cf26ad886d" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize a mission onboard an element in modified mode.
 In modified mode, a mission is initialized using the data already contained in the onboard LMT database with a modified itinerary using stations that are already defined in the LMT database.

The request is sent to an offline then online element

Expected result :
 The ground PIS shall transfer the mission initialization command to the selected element.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0236],[RefSol_PIS2G_GroundApp_SyID_0237],[RefSol_PIS2G_GroundApp_SyID_0238],
[RefSol_PIS2G_GroundApp_SyID_0239],[RefSol_PIS2G_GroundApp_SyID_0240],[RefSol_PIS2G_GroundApp_SyID_0241],
[RefSol_PIS2G_GroundApp_SyID_0242],[RefSol_PIS2G_GroundApp_SyID_0243],[RefSol_PIS2G_GroundApp_SyID_0244]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="c383fc91-1865-472f-ae77-7f4161705438"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeModifiedMission" id="e6afceaa-3251-46eb-a64e-a160c0594fbb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
  
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
               

            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberListModified}

            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}

            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}

            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="393f26db-b1f3-43b0-9e5e-c9edc4300960"/><con:assertion type="SOAP Response" name="SOAP Response" id="bb22cdc7-5ec9-4ebf-acbc-d27bc41f1dc7"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="58196913-a2a6-48c8-a24c-c669fb981022"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6efd74ec-2e76-4b2a-b339-544c262040f5"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="708cd6b2-cd80-4ce2-b570-fa3c8e84e6b0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeModifiedMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeModifiedMissionResponse[1]/ns1:InitializeModifiedMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications 1" disabled="true" id="07998b0a-f535-4f87-9124-9719d4a47e01"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressWaitingToSend</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="e467b11b-e067-4727-a928-87cf8ec34bc6"><con:description>Put adressee element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications 2" disabled="true" id="d7d68488-7586-45a1-a5eb-ad8201a20b53"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="18a22b29-105b-4a9b-b079-04c79791c9c1"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MissionCommandProgressProcessing",
					  "MissionCommandProgressWaitingToSend",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>4f4c7839-5fd6-4fef-b511-68ef8f5b9d32</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A2-4 -- InitializeModifiedMission Error Management TestCase" searchProperties="true" id="e01f42e3-b356-4704-a658-6c450ec816da" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize a mission onboard an element in modified mode.
 In modified mode, a mission is initialized using the data already contained in the onboard LMT database with a modified itinerary using stations that are already defined in the LMT database.

The request is sent with invalid informations

Expected result :
 The ground PIS shall return an error

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0334]

</con:description><con:settings/><con:testStep type="request" name="InitializeModifiedMission Bad Session ID" id="39357746-0a34-4e80-a1d4-e72351f2911a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission Bad Session ID" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}

            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
            ${#Project#MISSION-OnboardServiceCodeList}
              
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#DEGRADED-GEN-BadSessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberList}
        
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
            ${#Project#MISSION-ServiceHourListModified} 

            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
            ${#Project#MISSION-ServicedStationListModified}
${#Project#MISSION-ServicedStationListModified}            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="05b47b92-d24b-4e43-887c-dd0f9f88dba1"/><con:assertion type="SOAP Response" name="SOAP Response" id="694ec2a4-41c8-44c5-b829-1c1e6e5dd8f6"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="70ce4331-fe2d-4f56-8c20-bc557ff84337"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="cd72724b-f296-418d-a65e-695c7bbf6603"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="InitializeModifiedMission Invalid request timeout" id="57fba815-eb5e-4ac1-9929-b5026af2d5c6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission Invalid request timeout" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberList}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               ${#Project#MISSION-ServicedStationListModified}
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="aed97609-16f4-43f5-9019-d98536306ea8"/><con:assertion type="SOAP Response" name="SOAP Response" id="4e4f5035-fdb6-4292-b7ed-7fbb521e9a69"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="bfcfd3b2-15a3-484c-9de4-ff2fa76f3185"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="60878a0e-74ee-4a07-a8fd-8e54711e0d26"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_REQUEST_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A2-5 -- InitializeModifiedMission Error Management 2 TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d4c76b4e-7d6b-453e-bb80-3660d80b0106"><con:description>Test the  function that allows the GroundApp to initialize a mission onboard an element in modified mode.
 In modified mode, a mission is initialized using the data already contained in the onboard LMT database with a modified itinerary using stations that are already defined in the LMT database.

The request is sent with invalid informations

Expected result :
 The ground PIS shall return an error

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0334]</con:description><con:settings/><con:testStep type="manualTestStep" name="Manual TestStep" id="0a825250-8418-4467-9171-101e9ae75d78"><con:description>Stop RemoteDataStore Servcice on PIS Ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeModifiedMission PIS Data Store not accessible" id="665ef567-2b24-4b55-8bac-976ceb5fe0a8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission PIS Data Store not accessible" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
      
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
        
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberListModified}
         
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}
   
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}

            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ae975b47-1ca3-4f0f-b42b-b1ebf76a6a60"/><con:assertion type="SOAP Response" name="SOAP Response" id="26871f97-903a-4914-ac11-ad7fadd264b9"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="f969deba-51c6-4414-b9df-f1a4a44a693e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="81842fa1-fa7a-4311-85fa-4bc3615565e7"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>PIS_DATASTORE_NOT_ACCESSIBLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A3-1 -- InitializeManualMission Online Element TestCase" searchProperties="true" id="56ac238a-117b-4e65-b1bb-8f63a8ff41c5" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>This function allows the GroundApp to initialize a mission onboard an element in manual mode.
 In manual mode, a mission is initialized using data already contained in the onboard LMT database 
with a modified itinerary using stations (all or some stations) that are not defined in the LMT database.

The request is sent to an online element

Expected result :
 The ground PIS shall transfer the mission initialization command to the selected element.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0245],[RefSol_PIS2G_GroundApp_SyID_0246],[RefSol_PIS2G_GroundApp_SyID_0247],
[RefSol_PIS2G_GroundApp_SyID_0248],[RefSol_PIS2G_GroundApp_SyID_0249],[RefSol_PIS2G_GroundApp_SyID_0250],
[RefSol_PIS2G_GroundApp_SyID_0251],[RefSol_PIS2G_GroundApp_SyID_0252],[RefSol_PIS2G_GroundApp_SyID_0253]


update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeManualMission" id="3b49c51e-5339-4ac1-9108-8308d030bc5c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeManualMission</con:operation><con:request name="InitializeManualMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeManualMission>
         <!--Optional:-->
         <mis:manualModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
                 ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
                 ${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               		${#Project#MISSION-ServicedStationListManual} 
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
         </mis:manualModeRequest>
      </mis:InitializeManualMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="333cfd91-cfb2-44f7-9da0-db386aad5e1e"/><con:assertion type="SOAP Response" name="SOAP Response" id="1197acb3-eb2f-4a02-bd6a-f04c90e8530f"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="802f3dce-7dc9-45c6-b0dc-a762c70fec0c"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="fc0a2456-0744-4fc7-8b90-ac5554021a8a"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="4a407405-4201-480a-8212-b7d4d2c322c2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeManualMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeManualMissionResponse[1]/ns1:InitializeManualMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="385ae177-4271-47c5-9f23-7f04b711e7a2"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="f29a5392-654f-469f-9078-916949b83d45"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MissionCommandProgressProcessing",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>4b2c364e-1b05-4b16-b6e6-a9481fd2bf40</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A3-2 -- InitializeManualMission Offline Element TestCase" searchProperties="true" id="9eec1d7c-1124-4b1d-a6cf-26728a02d15c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>This function allows the GroundApp to initialize a mission onboard an element in manual mode.
 In manual mode, a mission is initialized using data already contained in the onboard LMT database 
with a modified itinerary using stations (all or some stations) that are not defined in the LMT database.

The request is sent to an offline  element

Expected result :
 The ground PIS shall reject the request(timeout) and notify the GroundApp

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0245],[RefSol_PIS2G_GroundApp_SyID_0246],[RefSol_PIS2G_GroundApp_SyID_0247],
[RefSol_PIS2G_GroundApp_SyID_0248],[RefSol_PIS2G_GroundApp_SyID_0249],[RefSol_PIS2G_GroundApp_SyID_0250],
[RefSol_PIS2G_GroundApp_SyID_0251],[RefSol_PIS2G_GroundApp_SyID_0252],[RefSol_PIS2G_GroundApp_SyID_0253]


update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="3cdfdb0b-8146-4079-b338-65e45d4ee0c8"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeManualMission" id="66b31aed-8122-467d-8ca1-e77167adc962"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeManualMission</con:operation><con:request name="InitializeManualMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeManualMission>
         <!--Optional:-->
         <mis:manualModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <!--<sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>-->
            <sch:OnBoardValidationFlag>true</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
                 ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               		${#Project#MISSION-ServicedStationListManual} 
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
         </mis:manualModeRequest>
      </mis:InitializeManualMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="68a07d16-7cc7-4dfb-8e13-3a1c6c8435bd"/><con:assertion type="SOAP Response" name="SOAP Response" id="fcc647c4-03d0-4c4a-bf95-a325e81a9f76"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="81ff74aa-8a83-4001-bada-eac6c396a62e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9baca755-d4ba-4832-90a3-12ce2efb2e25"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="c4fbe4b9-5bc9-494b-aabf-d5d9b00d56e1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeManualMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeManualMissionResponse[1]/ns1:InitializeManualMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="b69cba0a-f19e-4e47-8760-a60ab2cedbf5"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressWaitingToSend
- MissionCommandProgressTimedOut</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="59e179f5-ff3f-48f9-b16e-d058fef5b372"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MissionCommandProgressProcessing",
					  "MissionCommandProgressWaitingToSend",
					  "MissionCommandProgressTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>bd5be4a6-044b-4e2d-9f09-0b2f66587cbd</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A3-3 -- InitializeManualMission Offline then Online Element TestCase" searchProperties="true" id="ca087932-4902-4deb-872f-f50a845f50a2" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>This function allows the GroundApp to initialize a mission onboard an element in manual mode.
 In manual mode, a mission is initialized using data already contained in the onboard LMT database 
with a modified itinerary using stations (all or some stations) that are not defined in the LMT database.

The request is sent to an offline then online element

Expected result :
 The ground PIS shall transfer the mission initialization command to the selected element.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0245],[RefSol_PIS2G_GroundApp_SyID_0246],[RefSol_PIS2G_GroundApp_SyID_0247],
[RefSol_PIS2G_GroundApp_SyID_0248],[RefSol_PIS2G_GroundApp_SyID_0249],[RefSol_PIS2G_GroundApp_SyID_0250],
[RefSol_PIS2G_GroundApp_SyID_0251],[RefSol_PIS2G_GroundApp_SyID_0252],[RefSol_PIS2G_GroundApp_SyID_0253]


update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="83be11e9-a6d9-469f-b6f7-fcdbdff16428"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeManualMission" id="111b3226-9eb4-467d-b397-c6b5988d2e99"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeManualMission</con:operation><con:request name="InitializeManualMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeManualMission>
         <!--Optional:-->
         <mis:manualModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
                 ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               		${#Project#MISSION-ServicedStationListManual} 
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
         </mis:manualModeRequest>
      </mis:InitializeManualMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0339611e-f4a7-4734-af84-6cc93ca9eba0"/><con:assertion type="SOAP Response" name="SOAP Response" id="1ff8d029-7fca-412d-acdb-0b9674b23d87"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="95299fe2-72af-48af-a8da-7e478c106aef"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="5d6e75b0-3aa2-474c-9747-f9d6a9a6d100"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="0115818e-b885-497f-adea-2d50e707b933"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeManualMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeManualMissionResponse[1]/ns1:InitializeManualMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications 1" disabled="true" id="6bbe0f69-0a1a-4365-922b-2a773f9c47f8"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressWaitingToSend</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="4ad22868-81a4-49de-960f-727ed0535ed7"><con:description>Put adressee element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications 2" disabled="true" id="aa5a2b05-558a-4a20-b28a-841c728b37e3"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="c4f80731-7f35-47f8-8c67-bccfea24b7ca"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MissionCommandProgressProcessing",
					  "MissionCommandProgressWaitingToSend",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>fc98d086-d267-4c64-b6bf-48ba4ec604f8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A3-4 -- InitializeManualMission Error Management TestCase" searchProperties="true" id="a2ee51e5-3604-4757-99ca-d468db20ca00" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>This function allows the GroundApp to initialize a mission onboard an element in manual mode.
 In manual mode, a mission is initialized using data already contained in the onboard LMT database 
with a modified itinerary using stations (all or some stations) that are not defined in the LMT database.


The request is sent with invalid informations

Expected result :
 The ground PIS shall return an error

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0335]
</con:description><con:settings/><con:testStep type="request" name="InitializeManualMission Bad Session Id" id="be253bd6-d711-4848-a618-425832d2724d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeManualMission</con:operation><con:request name="InitializeManualMission Bad Session Id" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeManualMission>
         <!--Optional:-->
         <mis:manualModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#DEGRADED-GEN-BadSessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
                 ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               		${#Project#MISSION-ServicedStationListManual} 
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
         </mis:manualModeRequest>
      </mis:InitializeManualMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0c1b1608-2d95-4c4e-979f-145df3e5d1e8"/><con:assertion type="SOAP Response" name="SOAP Response" id="066b35d4-e0cf-41bd-8b9f-75aba08cca96"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="13f6b2de-8f2e-485a-b18e-95d670912e11"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="5e0a9339-bb94-4e96-af8c-a87939ae48d7"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="InitializeManualMission Invalid request timeout" id="c797b4ba-a75f-4610-999e-3fc9469491e2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeManualMission</con:operation><con:request name="InitializeManualMission Invalid request timeout" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeManualMission>
         <!--Optional:-->
         <mis:manualModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
                 ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               		${#Project#MISSION-ServicedStationListManual} 
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
         </mis:manualModeRequest>
      </mis:InitializeManualMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="172cfacd-026f-439a-81b5-ab9ef94644f2"/><con:assertion type="SOAP Response" name="SOAP Response" id="838cc18a-9bba-4d10-bfe8-3007e2cbe007"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="0fdb1b3c-03b5-4045-b905-60e9cc1754a5"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="7cd2dbad-fe04-4b81-a0f6-2859ac52a4dc"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_REQUEST_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A4-1 -- StopMission Online Element TestCase" searchProperties="true" id="b2d28827-862d-4743-bad1-528cce7fdb9f" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>This function allows the GroundApp to stop an active mission onboard an element.

The request is sent to an online element

Expected result :
 The  ground PIS shall transfer the mission cancellation command to the selected element.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0254],[RefSol_PIS2G_GroundApp_SyID_0255],[RefSol_PIS2G_GroundApp_SyID_0256],
[RefSol_PIS2G_GroundApp_SyID_0257],[RefSol_PIS2G_GroundApp_SyID_0258],[RefSol_PIS2G_GroundApp_SyID_0259],
[RefSol_PIS2G_GroundApp_SyID_0260],[RefSol_PIS2G_GroundApp_SyID_0261],[RefSol_PIS2G_GroundApp_SyID_0262]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="StopMission" id="eb66fab0-b477-4b10-9aa4-8e5555130052"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>StopMission</con:operation><con:request name="StopMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StopMission>
         <!--Optional:-->
         <mis:sessionId>${#Project#INTERNAL-SessionID}</mis:sessionId>
         <!--Optional:-->
         <mis:onBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</mis:onBoardValidationFlag>
         <!--Optional:-->
         <mis:elementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</mis:elementAlphaNumber>
         <!--Optional:-->
         <mis:missionId>${#Project#-GEN-MissionOperatorCode}</mis:missionId>
         <!--Optional:-->
         <mis:timeOut>${#Project#-GEN-RequestTimeout}</mis:timeOut>
      </mis:StopMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="e51a8955-11d8-466c-ba90-390a064aeeb8"/><con:assertion type="SOAP Response" name="SOAP Response" id="3e36a4ac-dd1a-46e0-96ec-be20f129e6ac"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c19f96ce-31c2-45ff-8fcf-47c8ce7a7130"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9fccc3f7-1b5f-4efa-98d0-61495151e823"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="e8a1cb3e-f48d-4377-b9ff-1912796dcad9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>StopMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:StopMissionResponse[1]/ns1:StopMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="24d79ab7-385e-443c-8be2-511a7dfab9dc"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="c8f9f280-ac62-4020-a1c4-97fa34fceb49"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MissionCommandProgressProcessing",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>2e280670-aa55-42c3-a677-696907d584be</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A4-2 -- StopMission Offline Element TestCase" searchProperties="true" id="0fede1d6-ed7e-4e99-8686-fa36e8c7c64d" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>This function allows the GroundApp to stop an active mission onboard an element.

The request is sent to an offline element

Expected result :
 The ground PIS shall reject the request(timeout) and notify the GroundApp

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0254],[RefSol_PIS2G_GroundApp_SyID_0255],[RefSol_PIS2G_GroundApp_SyID_0256],
[RefSol_PIS2G_GroundApp_SyID_0257],[RefSol_PIS2G_GroundApp_SyID_0258],[RefSol_PIS2G_GroundApp_SyID_0259],
[RefSol_PIS2G_GroundApp_SyID_0260],[RefSol_PIS2G_GroundApp_SyID_0261],[RefSol_PIS2G_GroundApp_SyID_0262]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="cbb4b427-68ba-4d2f-ac63-4f0e2f8a4cb7"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="StopMission" id="e8e18711-19ee-400e-bb41-fddbefa9e3f1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>StopMission</con:operation><con:request name="StopMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StopMission>
         <!--Optional:-->
         <mis:sessionId>${#Project#INTERNAL-SessionID}</mis:sessionId>
         <!--Optional:-->
         <mis:onBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</mis:onBoardValidationFlag>
         <!--Optional:-->
         <mis:elementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</mis:elementAlphaNumber>
         <!--Optional:-->
         <mis:missionId>${#Project#-GEN-MissionOperatorCode}</mis:missionId>
         <!--Optional:-->
         <mis:timeOut>1</mis:timeOut>
      </mis:StopMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f03dec8e-aa22-4c69-8432-7efda84e42bd"/><con:assertion type="SOAP Response" name="SOAP Response" id="42c37eff-3e5b-4972-93db-5f49e1854a3d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ee1a5752-76c6-4b28-802d-b025c8fe5796"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="75272165-df63-4656-8b7b-c5b5fc30e7f0"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="2942ecd1-fca0-458a-90a1-5d004092c8ef"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>StopMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:StopMissionResponse[1]/ns1:StopMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="0779514f-9f6a-423c-b498-1f9609744696"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressWaitingToSend
- MissionCommandProgressTimedOut</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="36f9a70b-d49e-41c2-afea-d93074b0accf"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MissionCommandProgressProcessing",
					  "MissionCommandProgressWaitingToSend",
					  "MissionCommandProgressTimedOut"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>26936482-3c83-46cb-af3d-149f9b447aa1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A4-3 -- StopMission Offline then Online Element TestCase" searchProperties="true" id="05157db8-6440-4cb8-8856-ff9744b3e4e4" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>This function allows the GroundApp to stop an active mission onboard an element.

The request is sent to an offline then online element

Expected result :
 The  ground PIS shall transfer the mission cancellation command to the selected element.

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0254],[RefSol_PIS2G_GroundApp_SyID_0255],[RefSol_PIS2G_GroundApp_SyID_0256],
[RefSol_PIS2G_GroundApp_SyID_0257],[RefSol_PIS2G_GroundApp_SyID_0258],[RefSol_PIS2G_GroundApp_SyID_0259],
[RefSol_PIS2G_GroundApp_SyID_0260],[RefSol_PIS2G_GroundApp_SyID_0261],[RefSol_PIS2G_GroundApp_SyID_0262]

update command progress status:
[RefSol_PIS2G_GroundApp_SyID_0263],[RefSol_PIS2G_GroundApp_SyID_0264],[RefSol_PIS2G_GroundApp_SyID_0265],
[RefSol_PIS2G_GroundApp_SyID_0266],[RefSol_PIS2G_GroundApp_SyID_0267],[RefSol_PIS2G_GroundApp_SyID_0268],
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Element Offline" id="3f207d80-ddae-4efd-a30c-1d5f81477fa8"><con:description>Disconnect the train from the ground station</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="StopMission" id="0b0403c5-a656-4ca3-b3b0-f046c2009d8a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>StopMission</con:operation><con:request name="StopMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StopMission>
         <!--Optional:-->
         <mis:sessionId>${#Project#INTERNAL-SessionID}</mis:sessionId>
         <!--Optional:-->
         <mis:onBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</mis:onBoardValidationFlag>
         <!--Optional:-->
         <mis:elementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</mis:elementAlphaNumber>
         <!--Optional:-->
         <mis:missionId>${#Project#-GEN-MissionOperatorCode}</mis:missionId>
         <!--Optional:-->
         <mis:timeOut>4</mis:timeOut>
      </mis:StopMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="fd519586-94cf-4a85-9f6b-444c92062364"/><con:assertion type="SOAP Response" name="SOAP Response" id="7efdb1cf-a4ca-409a-b0cc-161019d8aefb"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="de7fc845-a4ac-4abd-86b7-ceeba88287bb"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="994da1bb-41c9-4d02-9584-201f3e06ebe0"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="1b1fc037-44a2-49ef-a529-64c3a88075ba"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>StopMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:StopMissionResponse[1]/ns1:StopMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications 1" disabled="true" id="af85fd5d-a3e8-4cd3-8598-e64699e32595"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressWaitingToSend</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Element is now Online" id="2d4359c1-1203-4405-8457-ca06ecf6c6ec"><con:description>Put adressee element Online</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Element is Online</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications 2" disabled="true" id="e2859c2d-cf72-4ab9-be4e-0315641e4aee"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="6730b65b-795a-44ea-ac47-ab8701d2e5ef"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MissionCommandProgressProcessing",
					  "MissionCommandProgressWaitingToSend",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>3dc92af3-1088-4b69-b346-07ef9d3b7dc3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A4-4 -- StopMission Error Management TestCase" searchProperties="true" id="02097088-be70-4167-932f-15a400206159" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>This function allows the GroundApp to stop an active mission onboard an element.

The request is sent with invalid informations

Expected result :
 The ground PIS shall return an error


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0336]
</con:description><con:settings/><con:testStep type="request" name="StopMission Bad Session ID" id="d6f03173-b371-4709-b985-7ff4d1b0f125"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>StopMission</con:operation><con:request name="StopMission Bad Session ID" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StopMission>
         <!--Optional:-->
         <mis:sessionId>${#Project#DEGRADED-GEN-BadSessionID}</mis:sessionId>
         <!--Optional:-->
         <mis:onBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</mis:onBoardValidationFlag>
         <!--Optional:-->
         <mis:elementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</mis:elementAlphaNumber>
         <!--Optional:-->
         <mis:missionId>${#Project#-GEN-MissionOperatorCode}</mis:missionId>
         <!--Optional:-->
         <mis:timeOut>${#Project#-GEN-RequestTimeout}</mis:timeOut>
      </mis:StopMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="6174456f-d054-43e0-8f57-17f4e8b0610f"/><con:assertion type="SOAP Response" name="SOAP Response" id="27ec340b-35df-4cfb-b524-a1f986af100d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ff511fb6-01f1-4e9a-81fd-0589f17b55e7"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="24215b5e-2660-41b6-9719-5a9f518a27b8"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="StopMission Invalid request timeout" id="1b6fdab1-63a3-449f-abc3-462fac846edd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>StopMission</con:operation><con:request name="StopMission Invalid request timeout" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StopMission>
         <!--Optional:-->
         <mis:sessionId>${#Project#INTERNAL-SessionID}</mis:sessionId>
         <!--Optional:-->
         <mis:onBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</mis:onBoardValidationFlag>
         <!--Optional:-->
         <mis:elementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</mis:elementAlphaNumber>
         <!--Optional:-->
         <mis:missionId>${#Project#-GEN-MissionOperatorCode}</mis:missionId>
         <!--Optional:-->
         <mis:timeOut>${#Project#DEGRADED-GEN-InvalidRequestTimeout}</mis:timeOut>
      </mis:StopMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b3ca175a-0335-46e2-9041-29b488218641"/><con:assertion type="SOAP Response" name="SOAP Response" id="a994ff70-e041-4bb0-a930-22527f492618"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="f4713be5-dd7b-46db-b58f-f63abf7d113d"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="73c17bdd-37ad-48af-9560-13ca1df39ad6"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_REQUEST_TIMEOUT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-1 -- Update command progress status Failed: unknown element TestCase" searchProperties="true" id="e7e4c70e-54ae-4383-bbd7-1ee6e3cfdc50" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database


The selected element does not exist in the element data base of the ground PIS

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="e579a6be-001f-4956-a9d9-fa848a9e39b6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#DEGRADED-GEN-UnknownElementNumber}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="71627526-1856-40a4-8206-7791fcd570d0"/><con:assertion type="SOAP Response" name="SOAP Response" id="372b0ce1-6ff7-4cea-ba60-9b2e404014cb"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="340da72f-4b3b-4cb0-bf58-2e9ba9b9f3e5"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="8671a387-6ab9-429e-96a3-213896d70974"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="23e7793a-2048-4285-94d0-2dab04493f30"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="3cbbf0e1-7abc-4a8b-8ae2-8b690991d94f"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressUnknownElementId</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="35e303fe-f40c-4e0a-8306-128404e22547"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownElementId"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>c8e07288-d749-41d7-82e5-435f4e7ee268</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-2 -- Update command progress status Failed: unknown LMT data package version TestCase" searchProperties="true" id="01d154ab-7018-46c5-9830-263107fc09cd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database


The received LMT data package version is not found in the Ground PIS data store.

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="e2abcd8d-4211-4ca6-b4ed-84fb9ff60e11"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion/>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2aa5b7c6-0bae-447e-bb52-0a1b257220e5"/><con:assertion type="SOAP Response" name="SOAP Response" id="18d35a69-fd33-4a62-9889-6f50361d49f5"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="60ad06c5-c967-4eab-a0bc-3f60ea38ad2f"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9113a4c3-44f4-482b-a751-c49168363638"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="65bd6953-f2d9-4447-b8cc-6cf1497e285e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="3826daf9-0bba-446e-9b41-d59a3798b840"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressUnknownLmtDataPackageVersion</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="5352d410-828e-45ab-ba26-b78f69d635e1"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownLmtDataPackageVersion"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>bed8423d-6421-45cc-bd57-bd1d5ba5b042</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-3 -- Update command progress status Failed: service hours are inconsistent TestCase" searchProperties="true" id="f914a34c-d09b-4569-b783-9a7a9373f6c1" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database


Service hours are inconsistent

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeManualMission" id="f17dc8df-068a-4f7a-b947-954972bfc53d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeManualMission</con:operation><con:request name="InitializeManualMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeManualMission>
         <!--Optional:-->
         <mis:manualModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
                 ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
${#Project#DEGRADED-MISSION-InvalidServiceHourList}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               		${#Project#MISSION-ServicedStationListManual} 
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
         </mis:manualModeRequest>
      </mis:InitializeManualMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ecf07889-a9f2-4fef-8fcf-3a6ac52ac3fb"/><con:assertion type="SOAP Response" name="SOAP Response" id="91ba7137-0603-4db9-b91f-157dbf5a4f0e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="7479ff8c-3e1e-4ef9-b763-fd07500626a1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a594b372-eda6-49ea-908a-416692a55a08"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="0cbccc4d-9b6c-4d15-9f94-d9335198cdf8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeManualMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeManualMissionResponse[1]/ns1:InitializeManualMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="c230aca9-23f4-4a03-9c1a-e64371b64b29"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressInvalidServiceHours</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="10f923db-07b9-4866-a6b6-31b1c8d10046"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressInvalidServiceHours"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>56d50baa-123b-4fd8-9ff3-fe1c3c99694c</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-4 -- Update command progress status Failed: code of the mission insertion type is invalid TestCase" searchProperties="true" id="35b49d9e-9f7e-4d13-8fad-e8bc0a2332d6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database


Code of the mission insertion type is invalid

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="c6753751-f249-4d7b-8fa3-743c1537664b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>9</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="823e6ea4-2b76-4248-8a7b-b92d666f907b"/><con:assertion type="SOAP Response" name="SOAP Response" id="b6a7bb40-c3b8-4474-9f29-6822c825e8d4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="f50da108-d478-4c41-9a91-eef15a84646d"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="64ad78ad-9c85-4f9a-be09-3321d6251262"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="3950e046-918c-4fbe-83f6-b622ce9357a0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="e10921d0-405e-4bed-b79c-5d4f4da9d454"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressInvalidInsertionTypeCode</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="aba5c801-d268-4aa9-931f-a0ec4b175086"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressInvalidInsertionTypeCode"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>55bd4380-6df2-4170-80d4-3a213a15efae</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-5 -- Update command progress status Failed: unknown language code TestCase" searchProperties="true" id="140518cb-8495-4312-9c47-e9b1cf3fa0dd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

Unknown language code

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="ebb6ec04-7300-4dfa-973f-82b8644ab817"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#DEGRADED-MISSION-UnknownLanguageCode}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2e3cb3e2-35de-48dd-ace5-29fdb449682f"/><con:assertion type="SOAP Response" name="SOAP Response" id="99aa8910-40a5-4ca6-907a-fe8ec180ab15"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="cdbf21b6-f7f7-4dc4-88e3-d43452e6f033"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a768bba4-d65c-4ca8-b65f-258702d3f33f"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="fb227492-3dfa-4c4c-9531-bce493cd38a1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="328e0f7e-4824-4ca2-9e43-f8f4ddaa5a32"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressUnknownLanguageCode</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="83df946e-fea4-4f74-8ad7-ff39e1456082"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownLanguageCode"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>84a0dc0d-d7c4-448d-bb08-438da689eb91</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-6 -- Update command progress status Failed: unknown mission id TestCase" searchProperties="true" id="d5867c3d-2fb9-4960-824b-bf70cf45507a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

Unknown mission ID

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="18ac3415-ccdc-405f-ad66-fc4e36927be2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#DEGRADED-GEN-UnknownMissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ba1b3a65-7c69-4d7f-92fc-33a2eed483d3"/><con:assertion type="SOAP Response" name="SOAP Response" id="d9d1a4d1-b786-4892-9c1a-840f80c33e7d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c441aafa-6d56-43f1-b274-7c14c2f32f3e"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="020daa68-7464-4654-bea3-f83bbe752247"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="e444018f-1ac6-48fa-a6cf-0f1b3fa21090"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="0ee5b409-84c7-46cf-b523-bc8e994812db"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressUnknownMissionId</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e654b963-edce-4e75-9ccc-34e8c3b2ead2"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownOperatorCode"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>3e1a1367-5757-43e7-866c-1c88fc20933b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-7 -- Update command progress status Failed: unknown onboard service code TestCase" searchProperties="true" id="4c122a09-9495-4c5e-9ba6-b898abede374" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

Unknown onboard service code

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="05dc79cf-40d1-4b68-8ca7-40a4b6087840"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#DEGRADED-MISSION-UnknownOnboardServiceCodeList}
         
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5fb3abd6-dc7e-4dab-99e1-289fd5301712"/><con:assertion type="SOAP Response" name="SOAP Response" id="c58c57d5-2a30-4ce0-8bf3-518b34978758"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="43e95998-fc9e-4f73-a30f-5fe2f6f5d812"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="8e1c1cff-f03f-45d2-9001-d95f160a7024"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="0bce66e8-44de-454d-946d-dd44625b19d4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="8afc193a-dd47-48f0-a590-c65c7749f20a"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressUnknownOnboardServiceCode</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="9c5fc5a6-e48c-4c77-9e0e-c7b0782b5f83"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownOnboardServiceCode"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>54c5b63e-2122-42c2-9b54-a22a46752062</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-8 -- Update command progress status Failed: unknown station id of mission insertion TestCase" searchProperties="true" id="70e09fd3-569b-4672-a0ca-e015a6cf4534" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

Unknown station id of mission insertion

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="f32a66be-bc93-40ec-bb73-ea21cb5a267f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#DEGRADED-MISSION-UnknownStationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="4ead042c-d5cf-4d8a-9171-64269370358b"/><con:assertion type="SOAP Response" name="SOAP Response" id="af7f5d27-ff3e-4dfb-a90c-801457710144"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="70851994-adb2-4ec7-85dd-c0727dc4c291"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="69958e71-2b4e-414e-abd2-9a353c62d58f"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="466e34e5-afd6-4b47-b651-407f63b20266"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="bf9a701c-1ed1-4414-988c-efa6922df3f4"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressUnknownInsertionStationId</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="7712ff86-8713-4a5a-b818-b4616db628c0"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownInsertionStationId"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>1dd7c29c-bdf1-4846-b7d3-d2dc79203b05</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-9 -- Update command progress status Failed: unknown station id TestCase" searchProperties="true" id="8a070e16-d4d8-449d-8875-db937ccd36b3" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

Unknown station id 

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeManualMission" id="4ca4ac76-0e54-4e16-a9f7-f213fcf557a4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeManualMission</con:operation><con:request name="InitializeManualMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeManualMission>
         <!--Optional:-->
         <mis:manualModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
                 ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               		${#Project#DEGRADED-MISSION-ServicedStationListManualUnknownStationID}
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
         </mis:manualModeRequest>
      </mis:InitializeManualMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0819b56a-ac3d-4a6c-8d11-daaca1d5725e"/><con:assertion type="SOAP Response" name="SOAP Response" id="78460d91-3838-4f1d-8e45-5f1b84bf85e0"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="434c8736-a1e3-4935-94c6-c0706fd5bf98"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="db181222-fe42-4737-b6a6-1236ef0e8388"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="5ff659d6-32f7-4bc3-88f9-5f92fef89727"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeManualMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeManualMissionResponse[1]/ns1:InitializeManualMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="2b683e16-b76a-4e7b-8807-5f8dc0f15f72"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressUnknownStationId</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="f3356cc4-6924-4f8e-909c-26ca0fb0c947"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownStationId"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>222f14df-8348-486b-9694-af4302c60f73</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-10 -- Update command progress status Failed: mission insertion station not in mission route TestCase" searchProperties="true" id="82180f4e-eeb6-45e0-aaba-c07874855c87" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

Mission insertion station not in mission route

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeModifiedMission" id="0ccda888-4f55-43a5-a0a4-05af2de227a1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
 
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
               
              </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberListModified}

            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}

            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}
            		
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#DEGRADED-MISSION-NotInRouteStationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="506f91c6-21a9-4f67-990b-46eadacf33a0"/><con:assertion type="SOAP Response" name="SOAP Response" id="224b6faa-9e1f-411c-a701-f9a71fadabf4"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="3640c4f2-34c9-4b27-bdd9-e21895c85beb"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="0d63cb33-55c2-4acd-a09f-701dd2df1733"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="InitializeAutomaticMission" disabled="true" id="e9ac8417-9322-4bb5-90c9-3177453dfe2d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>?</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>?</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>?</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>?</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>?</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>?</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>?</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>?</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>?</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>?</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="7fd909ff-52e1-41c1-be2c-91329fb1b1f1"/><con:assertion type="SOAP Response" name="SOAP Response" id="a4ed65df-004b-4433-8f50-5452dfe258a9"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="06a0882d-c346-476a-bfca-67e3058d468f"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2ca056d9-4514-4d1d-a241-f84a67a42a2b"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="512d665f-1577-4c8f-9ab3-f80d707c2278"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeModifiedMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeModifiedMissionResponse[1]/ns1:InitializeModifiedMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="7ae1862e-b619-467f-9deb-e577ee1bb328"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressInsertionStationIsNotInRoute</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="cbf81d8e-c6e9-4809-85da-a3ffb29f1524"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressInsertionStationIsNotInRoute"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>f8526401-c718-4932-ac26-69bf9f7de129</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-11 -- Update command progress status Failed: the received LMT data package version is different than the installed one TestCase" searchProperties="true" id="e140b4f0-b215-4d8e-8a4d-80d2d06b51ef" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

The received LMT data package version is different than the installed one

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="44789a28-ec83-499f-bcea-5ee92c584976"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#DEGRADED-MISSION-DifferentInstalledLmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="3bb02f88-5a4e-4b6c-8cfb-9a4312d6c700"/><con:assertion type="SOAP Response" name="SOAP Response" id="7e8c1e8a-2fbe-4a54-ba94-53ea5b4baa6f"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="746f523a-0025-40c8-8636-92565afd28ea"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a2e093f7-768b-4222-b81d-0b2cd76213b7"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="8e54235b-5ac1-4133-b316-21c4b8bc4fa4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>REQid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="e90537cf-eba9-4b9f-a825-c6975df68b2a"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressLmtDataPackageVersionDifferent</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="29896beb-69cd-430a-b254-3e3f34740fa3"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
                           "MissionCommandProgressSent",
					  "MissionCommandProgressLmtDataPackageVersionDifferent"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>1b788c90-ce44-44f6-aa10-96943efc6638</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-12 -- Update command progress status Failed: the code corresponding to the car numbering offset is invalid TestCase" searchProperties="true" id="83738d58-4fdf-4efa-a685-c24c7a6fce14" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

The code corresponding to the car numbering offset is invalid

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="4525c826-1833-4ad4-9d9d-274b822671ef"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#DEGRADED-MISSION-InvalidCarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5719f7be-c5e1-4119-91c5-04a2cc3d57c3"/><con:assertion type="SOAP Response" name="SOAP Response" id="2c90dbab-9408-4f78-acda-27c8052c9f99"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="6232df7b-6a95-4967-88f0-7b706862b75a"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="c62021b9-d3cf-4c47-94df-24cbdb4eae36"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="eac13c06-bb02-4700-a680-07af9590133f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="6802f9ff-3f0f-4e28-b1ac-2c0c5257aa80"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressInvalidCarNumberingOffsetCode</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="17f08dfb-ccb6-4e8b-896c-cf67f7c04e7d"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressInvalidCarNumberingOffsetCode"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>bdaf822f-d662-4a65-86bf-c331687df16a</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-13 -- Update command progress status Failed: the received mission id is different than the active mission idTestCase" searchProperties="true" id="66a60770-fd3b-4a52-a712-2ad79cdd8e92" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>This function allows the GroundApp to stop an active mission onboard an element.

The mission operator id specified in the “stop the current mission” command is not equal to the operator identifier of the active mission onboard the element

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Manual TestStep : Initialise Mission" id="4a7ee05a-ea2e-4ff1-af6f-16df39a5d335"><con:description>Initialize a New Mission</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="StopMission" id="b6f66780-845e-4fc3-bce2-de99b7e771b7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>StopMission</con:operation><con:request name="StopMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StopMission>
         <!--Optional:-->
         <mis:sessionId>${#Project#INTERNAL-SessionID}</mis:sessionId>
         <!--Optional:-->
         <mis:onBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</mis:onBoardValidationFlag>
         <!--Optional:-->
         <mis:elementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</mis:elementAlphaNumber>
         <!--Optional:-->
         <mis:missionId>${#Project#DEGRADED-MISSION-DifferentActiveMissionID}</mis:missionId>
         <!--Optional:-->
         <mis:timeOut>${#Project#-GEN-RequestTimeout}</mis:timeOut>
      </mis:StopMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b0450895-f42e-4a9b-b2e7-832d2a32f0a7"/><con:assertion type="SOAP Response" name="SOAP Response" id="9baeed2e-d092-4e6f-906e-bc28eceb9e4d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b3b8744e-f7cb-41db-9814-c1d777bf1e64"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="dbeff7d1-de94-4230-8c7f-582da2b0a7d1"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="56ac85bf-8caa-49f0-9ac4-68d714a8ec11"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>StopMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:StopMissionResponse[1]/ns1:StopMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="db822923-da95-4787-87bc-a031102bded4"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressMissionIdDifferent</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="c76e9f3d-cc20-4bd2-b3b3-38a342ed7592"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					 "MissionCommandProgressSent",
					  "MissionCommandProgressMissionIdDifferent"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>52b61b61-a6e2-4790-944a-59ed37325055</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-14 -- Update command progress status Failed: no active mission on the element TestCase" searchProperties="true" id="6035d632-5b90-4876-9596-5640af36221b" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>This function allows the GroundApp to stop an active mission onboard an element.

There is no active mission onboard the element, thus the “stop the current mission” command is rejected.

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Manual TestStep : Stop Any Running Mission" id="fac72ef0-d82c-4d56-a855-069808be76b4"><con:description>Stop any running mission</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="StopMission" id="91a12ba8-323a-4b59-8d5b-c957dd5d4b7c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>StopMission</con:operation><con:request name="StopMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StopMission>
         <!--Optional:-->
         <mis:sessionId>${#Project#INTERNAL-SessionID}</mis:sessionId>
         <!--Optional:-->
         <mis:onBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</mis:onBoardValidationFlag>
         <!--Optional:-->
         <mis:elementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</mis:elementAlphaNumber>
         <!--Optional:-->
         <mis:missionId>${#Project#-GEN-MissionOperatorCode}</mis:missionId>
         <!--Optional:-->
         <mis:timeOut>${#Project#-GEN-RequestTimeout}</mis:timeOut>
      </mis:StopMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="cd1f7844-ef49-4156-ae0d-6661551c51ff"/><con:assertion type="SOAP Response" name="SOAP Response" id="f690c859-dc12-4219-b9db-ef910da45133"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="588dd362-14c9-4084-9810-8fc3ac67b073"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="0d14c1d5-9675-4249-8a72-56f142daab2d"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="b9aacea7-acda-4446-95cc-a5ae6b229a46"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>StopMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:StopMissionResponse[1]/ns1:StopMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="d4229506-89e6-49ae-baff-c62dfaad3899"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressNoActiveMission</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="dcb44ff6-349a-4b20-a512-197e2eccb05b"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressNoActiveMission"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>162c0750-ece7-47cc-89b8-42763307170f</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-15 -- Update command progress status Failed: pending command cancelled by a new initialization or cancellation command TestCase" searchProperties="true" id="0ef3b88e-dea4-4c01-ae6e-7b96875ccab9" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

Pending command cancelled by a new initialization/cancellation command

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="420ec416-47b1-44a8-aa04-186b7c46f7f4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>true</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="62701809-326e-497a-82c7-28160c77485e"/><con:assertion type="SOAP Response" name="SOAP Response" id="f5990bca-23f7-4ed7-84b6-9acb9b113b22"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ee6d887b-111a-46cb-957c-84fddcfe067b"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="280f9d0b-3d6b-4766-866b-58c85350c91d"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="Delay" id="cdd26bf9-fc4a-451e-9c7e-b35474d0431a"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="d430c0d9-edb8-4cc2-8e18-20ce5d3d15d0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="request" name="New InitializeAutomaticMission" id="814bc7dd-0c6c-493a-8abf-92218e78ac71"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="New InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>true</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="df48144c-520a-43a9-b482-924c7e69a6d3"/><con:assertion type="SOAP Response" name="SOAP Response" id="959989ed-cd5e-4786-bdd2-5e0313a79914"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="7005bb4a-09fe-44ba-b687-fc012920b4ec"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="20bc0bc2-b1ad-4ad5-9340-a91bf40e6ce9"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="81e9b995-1c39-4b57-943c-83fec8fcf3cc"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressPendingValidation
- MissionCommandProgressProcessing
- MissionCommandProgressCancelledByNewCommand
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" disabled="true" id="01e2a9f9-2d3b-4743-9063-b360aec7ce6b"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
				       "MissionCommandProgressSent",				        
				       "MissionCommandProgressPendingValidation",
				       "MissionCommandProgressCancelledByNewCommand",
				       "MissionCommandProgressProcessing",				      
				       "MissionCommandProgressSent",				      
				       "MissionCommandProgressPendingValidation",
				      "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>f8940e29-56b5-400a-9776-8db8000b7744</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-15-2 -- Update command progress status Failed: pending command cancelled by a new initialization(without onboard validation) or cancellation command TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0d727d73-7eb2-413e-a30c-6cfb0ba73728"><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

Pending command cancelled by a new initialization/cancellation command

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="b4aca688-831e-4cfe-82ee-1b3aad8a9a3f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>true</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="cd91fb08-926d-4d63-afa2-5d5a5d47a4bf"/><con:assertion type="SOAP Response" name="SOAP Response" id="83cf74fb-4440-433f-b1dd-f7d11db8e169"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="287b0bed-8602-4cae-8308-dcbcf9768171"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="bf0b597b-a348-4d9e-9444-97e90bd58f84"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="Delay" id="35a014fd-28c2-49a6-9e2f-0382fb4d16c7"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="4b05e484-1ed8-402f-87e6-776b50554f5a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="request" name="New InitializeAutomaticMission" id="77aff2d3-da14-4979-945d-403f68723bbf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="New InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>false</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="4c086651-dadb-407b-b544-d3034ba3abbc"/><con:assertion type="SOAP Response" name="SOAP Response" id="8a98e124-a0a5-4a67-836d-3e891240461b"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="cddc478d-d5a6-4e73-abbb-6a6639d2a163"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6a2bb505-5c05-47aa-b72d-9377905a6610"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="731cb833-b9b6-4803-a8af-d26db07e22a0"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressPendingValidation
- MissionCommandProgressProcessing
- MissionCommandProgressCancelledByNewCommand
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="904b24d5-aec3-42f7-97c0-2dc00d2b6e3b"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
				       "MissionCommandProgressSent",
				       "MissionCommandProgressPendingValidation",
				       "MissionCommandProgressProcessing",
				       "MissionCommandProgressCancelledByNewCommand",
				       "MissionCommandProgressSent",
					  "MissionCommandProgressSuccess"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>2073d17f-4829-49c4-b6ad-705941e6eeb0</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-16 -- Update command progress status Failed: the command is rejected by the train officer TestCase" searchProperties="true" id="0e73879c-9033-49aa-9f78-6dfc5ddfdca0" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

The command is rejected by the train officer

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="668852bd-2014-401c-ad92-bf8cd930341a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>true</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="8e122868-529a-44a1-b181-170af015f44a"/><con:assertion type="SOAP Response" name="SOAP Response" id="7b8e2964-6644-479f-90ac-d7a7ff6a78f0"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="701ec55e-d2f2-4f43-b872-19443e7a9fd3"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="e4230208-4001-4da1-b97a-974cd5cfd995"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="3a764ffa-2c51-4613-8a93-826fd00826ec"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Reject Command" id="f2112722-ecf4-41a4-90f9-38d9cdda131c"><con:description>Invalidate Command from Train IHM</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>the command is rejected by the train officer</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="134ae238-6d53-4c2c-af66-0ea45b50f3d5"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressPendingValidation
- MissionCommandProgressValidationRejected</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="a5e02717-fc21-44cc-ab85-84da933567fb"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressSent",
					  "MissionCommandProgressPendingValidation",
					  "MissionCommandProgressValidationRejected"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>10e1c29f-e09c-4815-93da-c728e6233cff</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-17 -- Update command progress status Failed: ground commands are inhibited on the element TestCase" searchProperties="true" id="c085acb9-8691-45f5-8e44-95e88e7d93db" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database

The commands initiated from the Ground PIS are inhibited on board the train’s element. 
Inhibition of commands from Ground PIS is an onboard maintenance command that prevents the onboard PIS from processing commands originating from the Ground PIS

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="manualTestStep" name="Inhibit Command from Ground" id="080d4d0e-ddd6-4db6-bf17-84e94fbdf78a"><con:description>Inhibit Command from Ground</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>the commands initiated from the Ground PIS are inhibited on board the train’s element</con:expectedResult></con:config></con:testStep><con:testStep type="request" name="InitializeAutomaticMission" id="40f8514a-fa4f-492b-98f0-69f8e90f2788"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ba76a4d0-4ddf-4be6-95f3-29699ddffa83"/><con:assertion type="SOAP Response" name="SOAP Response" id="6185b550-2723-460a-ba5b-36915ae68abc"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="721708fb-bd0b-4785-a81a-a93d2b1f705a"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="0711193a-5f85-42bd-8ada-12072a407f63"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="28573ce6-bd1f-4d82-ab59-5d4af0c0d12e"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressServiceInhibited</con:expectedResult></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="be13f34e-bdbf-4e70-8cf3-d2cc1df153fb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="d1f65888-7673-4df2-bcdd-91f32f7fe0b3"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
				        "MissionCommandProgressSent",
					  "MissionCommandProgressServiceInhibited"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>279cfa4b-3dcd-4a8d-84db-e0ebc7816958</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-18 -- Update command progress status Failed: The mission start date is invalid TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f75154ae-bf8c-47d0-b291-5ebb2abbb2b6"><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database


The start Mission Date is invalid

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeAutomaticMission" id="bc800d32-e059-43a1-9e2a-22e5d4d8e055"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#DEGRADED-MISSION-InvalidMissionStartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="699f7e3b-c6f7-4426-8d84-0909921b8958"/><con:assertion type="SOAP Response" name="SOAP Response" id="b60de3c5-ae97-4d01-ab3a-a1fb87fbab0c"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="e5fa144c-1f5d-4eba-b1c6-46e5db45c4b1"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="359c9cbf-ec27-4a6e-99af-9500b81431b5"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqID Property Transfer" id="dd0f76c5-acd4-4cf4-ba51-5d4b089cb64a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="8d0e59ad-77a2-4ba2-b3f5-2b050f5eff20"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressUnknownElementId</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="7c386c95-4417-4a5c-a8a9-3e1a0d16f6b9"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressInvalidStartDate"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>7c582ba5-fd16-4cc3-b802-43421b0dd4d0</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-19 -- Update command progress status Failed: The commercial number list is invalid TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ef19f729-c898-4c56-9282-94a0d82d4b25"><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database


The commercial number list is invalid

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeModifiedMission" id="1cb53986-6490-49e6-a6b7-81910878dae7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
         
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>true</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
     
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#DEGRADED-MISSION-InvalidCommercialNumberList}
   
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}
            		
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="30fa3f69-50d9-4ce3-87c4-3a63c4036a3a"/><con:assertion type="SOAP Response" name="SOAP Response" id="622f79c0-d00f-4630-a0fc-5f21e258d00e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="946a2246-3f23-4c5c-9b3a-bcc509f45522"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f5ace251-0ef3-40b5-b145-2aad9bdb49c8"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="4c50cd8e-2774-4f04-9ed7-24b8fd1474fa"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeModifiedMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeModifiedMissionResponse[1]/ns1:InitializeModifiedMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="65eea263-35e4-423b-9c6c-9cda690560fb"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressUnknownElementId</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="bc9fb269-32bc-4592-b251-5ff5c6f982c1"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressInvalidCommercialNumberList"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>36da0734-b902-4b65-85df-8645b640cbf3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-20 -- Update command progress status Failed: The Train name is invalid TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="650f676f-a4d1-4112-9355-b44ba64ce8f5"><con:description>Test the  function that allows the GroundApp to initialize an existing mission onboard an element in automatic mode. 
In automatic mode, an existing mission is initialized using the data already contained in the onboard LMT database


The train name is invalid

Expected Result :
The PIS shall reply with status "failed".

Requirements:
[RefSol_PIS2G_GroundApp_SyID_0269]</con:description><con:settings/><con:testStep type="request" name="InitializeModifiedMission" id="c76ef25d-5ca9-4a24-94e3-76b07acc8b89"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}          
      
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>false</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}  


            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberListModified}

            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}

            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}         
   
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#DEGRADED-MISSION-InvalidTrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="200f5569-e457-4fda-ba87-885f1ab623a9"/><con:assertion type="SOAP Response" name="SOAP Response" id="69c0f9fb-5302-4b71-94eb-900330d0d5a3"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="992049e9-9b9f-4583-befd-deecb4c4aabe"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="771d07c6-f12e-4262-b004-ffc2208bafde"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="30e452c5-5b66-49f7-9740-8882e2497d2c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeModifiedMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeModifiedMissionResponse[1]/ns1:InitializeModifiedMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="fdc55cbc-fb20-427a-a9c9-b844120bce04"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressUnknownElementId</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="2e18f925-309e-419f-a849-290b896fcf64"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressInvalidTrainName"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>f431fb2d-8ac4-4ae4-8a93-714f9273ee39</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A5-21 -- Update command progress status Failed: The Region Code is invalid TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0cc458c9-13e9-40a6-bdff-bcd9865bfcdd"><con:description/><con:settings/><con:testStep type="request" name="InitializeModifiedMission" id="d9de09b5-82a7-4293-a496-3dd175749ed9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>8</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c03abbb0-be03-4e0a-8af3-1f8c7e3fc8cf"/><con:assertion type="SOAP Response" name="SOAP Response" id="5b573913-447e-4044-80a8-72bd8f3adfb5"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="8edbcd5e-73c1-4e4a-8c91-fc9b786e01ad"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="44eabfe6-87ed-453a-836f-b56aa5a5f12b"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="c31ab797-5f78-4ce4-aea0-fb3330ea27d5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeModifiedMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeModifiedMissionResponse[1]/ns1:InitializeModifiedMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="b4f6da53-1dc0-4424-89ba-e0e5997463d9"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="efb367ce-d5db-4ca5-9a26-bc4c3000aecf"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownRegionCode"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>566d5674-33d9-4901-9053-985d2d2c491a</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A6-1 -- GetAvailableElementList TestCase" searchProperties="true" id="ad01f30f-ffe6-4e82-a50d-bb1c781ee156" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of available elements. 
This list includes also missions that are running for each element.

The request is sent with a valid session ID.

Expected result : The ground PIS shall reply with the list of available elements
                           For each element in the elements list shall include the version number of the PIS Basic data package (which includes IM templates definition) 
                           the version of the  LMT data package (which contains the stations list) and the id of the current running mission (both the Mission Commercial Number and the Mission Operator Code).
                           If the element is not in a mission, the mission Id parameter shall be omitted.


Requirements:
[RefSol_PIS2G_GroundApp_SyID_0011], [RefSol_PIS2G_GroundApp_SyID_0012],
[RefSol_PIS2G_GroundApp_SyID_0013], [RefSol_PIS2G_GroundApp_SyID_0014], 
[RefSol_PIS2G_GroundApp_SyID_0015], [RefSol_PIS2G_GroundApp_SyID_0016]</con:description><con:settings/><con:testStep type="request" name="GetAvailableElementList" id="2d65fb94-87f8-4b45-870b-50804c62cfec"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>GetAvailableElementList</con:operation><con:request name="GetAvailableElementList" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:GetAvailableElementList>
         <!--Optional:-->
         <mis:sessionId>${#Project#INTERNAL-SessionID}</mis:sessionId>
      </mis:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ec019a72-6589-4d97-824b-78b618624395"/><con:assertion type="SOAP Response" name="SOAP Response" id="4d2d5b76-bf00-4d72-b5eb-1924ec6888f8"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="0844ead2-a21c-4ef3-a6e2-8a2606109055"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="cb0ac32e-3b36-4eb0-b0f3-679c7ad028d2"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/RetrieveElementList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A6-2 -- GetAvailableElementList Error Management TestCase" searchProperties="true" id="36a5a7e2-487e-4309-bce9-713d0e684d76" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test the function that allows the GroundApp to request from the ground PIS the list of available elements. 
This list includes also missions that are running for each element.

The request is sent with a bad session ID. 

Expected result : PIS shall return an error.

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0273]</con:description><con:settings/><con:testStep type="request" name="GetAvailableElementList Bad Session ID" id="32051f48-44aa-4e56-8020-a65d063e61d4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>GetAvailableElementList</con:operation><con:request name="GetAvailableElementList Bad Session ID" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:GetAvailableElementList>
         <!--Optional:-->
         <mis:sessionId>${#Project#DEGRADED-GEN-BadSessionID}</mis:sessionId>
      </mis:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="8d34b854-4884-4848-b02d-8d60da298c3d"/><con:assertion type="SOAP Response" name="SOAP Response" id="a9bc4514-9073-4232-9569-9967101104be"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="2525df41-8963-4f1f-abc5-df65124b6af9"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="8efe57f9-9718-4cee-a7c7-055095c3d332"><con:configuration/></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f0bf7b3d-971c-4e05-9f19-c5e833d33895"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>INVALID_SESSION_ID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/RetrieveElementList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Manual TestStep" id="e9da88c7-4561-4cb6-bc20-bf3563da6478"><con:description>IIS Manage Server "stop" T2G alstom-ground-pis-server</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="GetAvailableElementList Elements list  unavailable" id="886dc180-54e8-4cb9-9fd9-5a6f9311726e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>GetAvailableElementList</con:operation><con:request name="GetAvailableElementList Elements list  unavailable" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:GetAvailableElementList>
         <!--Optional:-->
         <mis:sessionId>${#Project#INTERNAL-SessionID}</mis:sessionId>
      </mis:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ecba69a6-8604-4bdf-a036-ad0d6f42f65e"/><con:assertion type="SOAP Response" name="SOAP Response" id="217f862e-dffa-4fc0-a0b8-c60922c3c236"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="6364a928-0971-4059-b93c-70b221652c92"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6816ac9e-47e4-45f7-b3df-4cb1edc6c1ed"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>ELEMENT_LIST_NOT_AVAILABLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/RetrieveElementList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A7-1 -- InitializeAutomaticMission T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c6fe76ed-b293-45be-abe3-d331d4b9abbb"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Train Offline" id="12496593-c385-4257-8c3f-bd7ee274f7ed"><con:description>Put the Train Offline (Stop embedded T2G)</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeAutomaticMission" id="8ea36000-6f29-4854-b5b2-bb5a11667e9a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="4eaab94b-58ce-47bf-9143-5594dc2b9e2f"/><con:assertion type="SOAP Response" name="SOAP Response" id="a09e2d13-b14f-451a-9ec1-ce20ab5e15bd"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="9fed5f6e-6a5c-4179-9df8-bc285ff853fb"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="46440f74-2b9e-4aa2-887a-73cb5b3c98fd"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="1afc7eb1-5dad-4c09-9e13-f7335cf8b2e1"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="7e61b1ed-fa59-4c16-b404-2a0313c44b1a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="3c011191-ce0a-4dc2-b08b-c3ee646b700d"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
"MissionCommandProgressProcessing",
"MissionCommandProgressWaitingToSend",
"CommonT2GServerOffline", 
"MissionCommandT2GServerOffline</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" disabled="true" id="44176fa8-0619-4e42-a185-a57890a5846b"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
                           "MissionCommandProgressWaitingToSend",
                           "CommonT2GServerOffline", 
					  "MissionCommandT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>be7bf28f-3b6b-4265-98ca-93474ff34e5f</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A7-2 -- InitializeModifiedMissionT2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e6ade9a8-711b-41e2-90fa-705b54bb2825"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Train Offline" id="7ad494df-bd70-4120-9c7b-987e786cf578"><con:description>Put the Train Offline (Stop embedded T2G)</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeModifiedMission" id="64f1d0db-5fdd-4f49-b4ee-665f1d955229"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>true</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="84282dc8-02fa-4e1d-8d11-65756b500b8c"/><con:assertion type="SOAP Response" name="SOAP Response" id="53b6fb36-6de9-43fb-ac54-0964fcb4a490"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="6df9ad4f-c07f-43dc-981b-17d108980f98"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="27e92a55-fdae-4475-9c1b-7d3942fc7346"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="d59cbef2-b2bf-40ba-a1e6-31f2345c115d"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="3cf3e7c3-0bc6-4a50-be1a-19611d867077"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeModifiedMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeModifiedMissionResponse[1]/ns1:InitializeModifiedMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="1f3a8b59-758e-4704-8b7a-38a50fb0739c"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
"MissionCommandProgressProcessing",
"MissionCommandProgressWaitingToSend",
"CommonT2GServerOffline", 
"MissionCommandT2GServerOffline</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" disabled="true" id="edd2d98b-4337-46c0-be22-c1869856be1d"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
                           "MissionCommandProgressWaitingToSend",
                           "CommonT2GServerOffline", 
					  "MissionCommandT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>d7a16e6b-4986-4fb8-a1b4-acf9cab02fae</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A7-3 -- InitializeManualMission T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="af80fcf6-70b0-4b26-accc-687bd097f3c3"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Train Offline" id="7683a16a-805f-41f0-aa65-03ec34da53d0"><con:description>Put the Train Offline (Stop embedded T2G)</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeManualMission" id="08ecea7f-87eb-4c1a-9d67-9e4596ae5727"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeManualMission</con:operation><con:request name="InitializeManualMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeManualMission>
         <!--Optional:-->
         <mis:manualModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
                 ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
                ${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               		${#Project#MISSION-ServicedStationListManual} 
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
         </mis:manualModeRequest>
      </mis:InitializeManualMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="229be1f9-2e57-4030-ac68-bb31ff528660"/><con:assertion type="SOAP Response" name="SOAP Response" id="42d56bf8-2c14-4bd7-9fe3-0b56bcceb7b9"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="9c3f64a8-b509-47ed-9fec-d39e17ff1732"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="79c9e0c8-f0e1-481e-a9b9-146499cedda5"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="b1155d00-10f3-48e7-8aab-97ec3c0e3b68"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="36b06cf7-be8a-4269-bb48-96021d5c408f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeManualMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeManualMissionResponse[1]/ns1:InitializeManualMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="dac18e4f-3bce-4f6f-a8d5-da81e3c3c73d"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
"MissionCommandProgressProcessing",
"MissionCommandProgressWaitingToSend",
"CommonT2GServerOffline", 
"MissionCommandT2GServerOffline</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" disabled="true" id="8c0d95d7-cd94-459c-bae8-6dc58b8399e1"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = "MissionCommandProgressProcessing",
                           "MissionCommandProgressWaitingToSend",
                           "CommonT2GServerOffline", 
					  "MissionCommandT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>93c7c5b2-a59e-4c1e-8856-c0ebdd5da5d1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A7-4 -- StopMission T2G Offline TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="279e1897-1366-497f-b76a-185f34f0d5cd"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Train Offline" id="2d243727-e8e1-46e6-abca-0e9618208cb6"><con:description>Put the Train Offline (Stop embedded T2G)</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="StopMission" id="cca4347a-1ecb-49dd-98f4-5850ad283927"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>StopMission</con:operation><con:request name="StopMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StopMission>
         <!--Optional:-->
         <mis:sessionId>${#Project#INTERNAL-SessionID}</mis:sessionId>
         <!--Optional:-->
         <mis:onBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</mis:onBoardValidationFlag>
         <!--Optional:-->
         <mis:elementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</mis:elementAlphaNumber>
         <!--Optional:-->
         <mis:missionId>${#Project#-GEN-MissionOperatorCode}</mis:missionId>
         <!--Optional:-->
         <mis:timeOut>${#Project#-GEN-RequestTimeout}</mis:timeOut>
      </mis:StopMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d7e191fb-c906-47e9-ae32-170e09b05a75"/><con:assertion type="SOAP Response" name="SOAP Response" id="6ac0bf47-e55c-4bc7-9da4-a8734fc036d3"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="1518a399-8a4a-4377-9851-891ff6079bad"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="88273a87-8013-4e1c-965a-f6fc71b4029f"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Stop T2G Ground Server" id="8f595a5a-5688-4870-88ac-9dab4e718096"><con:description>Stop T2G server or disable network link between T2G and PIS Ground servers</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="488c07d4-1df7-4e06-9317-31f1a7717511"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>StopMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:StopMissionResponse[1]/ns1:StopMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" id="8b3048f5-78a2-4323-a8ba-869563e47e70"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
"MissionCommandProgressProcessing",
"MissionCommandProgressWaitingToSend",
"CommonT2GServerOffline", 
"MissionCommandT2GServerOffline</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" disabled="true" id="7b9eeb3c-c52b-429e-a69f-873ae3360d68"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MissionCommandProgressProcessing",
					  "MissionCommandT2GServerOffline"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>b2342bfe-efb9-497b-aab6-db78c5c69293</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A8-1 -- InitializeAutomaticMission Train Service Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8ed00eb3-8703-49a8-898f-42022dcddf19"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Bad service configuration" id="f7518423-6e66-44c4-bea0-a3c051aa68f7"><con:description>Define a wrong Instant Message service configuration</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeAutomaticMission" id="feef4163-a231-4107-bcb6-d68f0321d390"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeAutomaticMission</con:operation><con:request name="InitializeAutomaticMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeAutomaticMission>
         <!--Optional:-->
         <mis:automaticModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:automaticModeRequest>
      </mis:InitializeAutomaticMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="4d9a1d79-ba18-481f-88da-e1ecf18811fa"/><con:assertion type="SOAP Response" name="SOAP Response" id="90971224-2e97-41ff-ad39-6a947f156552"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="4125b1aa-abf0-463c-80a1-8fbf6ff679ab"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="8dcb3b81-f40c-42d0-a7dc-a25fe714a285"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeAutomaticMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="850248a9-7f8d-4495-a5a2-37d18cf3ddc1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeAutomaticMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:InitializeAutomaticMissionResponse[1]/ns1:InitializeAutomaticMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="aec2bd2b-dbb9-461d-b645-7c12f1023332"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be three notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="61794d89-b7d5-4383-9adb-30fef5dcad71"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownServiceId"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>594a9f2e-7d3b-4724-9868-fb0408b73c2f</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A8-2 -- InitializeModifiedMission Train Service Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b2a78004-e6b4-4d5c-939f-87233df31971"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Bad service configuration" id="3db4eb57-f137-43ba-9cca-ff4530b219c0"><con:description>Define a wrong Instant Message service configuration</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeModifiedMission" id="672c4c8e-befb-46e1-b2bf-b4bb834a90f8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeModifiedMission</con:operation><con:request name="InitializeModifiedMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeModifiedMission>
         <!--Optional:-->
         <mis:modifiedModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
            <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
               ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
              ${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
              ${#Project#MISSION-ServicedStationListModified}
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
            <!--Optional:-->
            <sch:StationInsertion>
               <!--Optional:-->
               <mis1:StationId>${#Project#MISSION-StationInsertionId}</mis1:StationId>
               <!--Optional:-->
               <mis1:Type>${#Project#MISSION-StationInsertionType}</mis1:Type>
            </sch:StationInsertion>
         </mis:modifiedModeRequest>
      </mis:InitializeModifiedMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="aaa08a4d-80f4-40d3-85bb-b17684035eb0"/><con:assertion type="SOAP Response" name="SOAP Response" id="e04c8fc6-9950-4edd-8bfa-6a2a24f14ce8"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="347cef0f-6884-4110-bd36-b903f4a20fa8"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="1fb0891f-1c79-4418-80bd-dc004d9d8041"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeModifiedMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="9a7671ef-d321-4933-ac18-0a5db425de9b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeModifiedMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeModifiedMissionResponse[1]/ns1:InitializeModifiedMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="74efa402-2ca7-4044-b6ea-ce2093a4a9e7"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="8adfab72-2eab-4c70-b120-c0886f2632cf"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications =  ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownServiceId"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>e6a068e2-4cf9-47d1-a42f-8044c8221559</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A8-3 -- InitializeManualMission Train Service Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="50324c5a-3d3d-4f9f-b6c2-77d0d8ea29d3"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Bad service configuration" id="b3faa176-5e04-4222-a127-4a76418dc1c0"><con:description>Define a wrong Instant Message service configuration</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="InitializeManualMission" id="d6daa5bf-49c9-4df7-bd9a-aa397bde0254"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>InitializeManualMission</con:operation><con:request name="InitializeManualMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/" xmlns:sch="http://alstom.com/pacis/pis/schema/" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:mis1="http://alstom.com/pacis/pis/schema/train/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:InitializeManualMission>
         <!--Optional:-->
         <mis:manualModeRequest>
            <!--Optional:-->
            <sch:CarNumberingOffsetCode>${#Project#MISSION-CarNumberingOffsetCode}</sch:CarNumberingOffsetCode>
            <!--Optional:-->
            <sch:ElementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</sch:ElementAlphaNumber>
            <!--Optional:-->
  <sch:LanguageCodeList>
               ${#Project#MISSION-LanguageCodeList}
            </sch:LanguageCodeList>
            <!--Optional:-->
            <sch:LmtDataPackageVersion>${#Project#MISSION-LmtDataPackageVersion}</sch:LmtDataPackageVersion>
            <!--Optional:-->
            <sch:MissionOperatorCode>${#Project#-GEN-MissionOperatorCode}</sch:MissionOperatorCode>
            <!--Optional:-->
            <sch:OnBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</sch:OnBoardValidationFlag>
            <!--Optional:-->
            <sch:OnboardServiceCodeList>
               ${#Project#MISSION-OnboardServiceCodeList}
            </sch:OnboardServiceCodeList>
            <!--Optional:-->
            <sch:RequestTimeout>${#Project#-GEN-RequestTimeout}</sch:RequestTimeout>
            <!--Optional:-->
            <sch:SessionId>${#Project#INTERNAL-SessionID}</sch:SessionId>
            <!--Optional:-->
            <sch:StartDate>${#Project#MISSION-StartDate}</sch:StartDate>
            <!--Optional:-->
            <sch:CommercialNumberList>
                 ${#Project#MISSION-CommercialNumberListModified}
            </sch:CommercialNumberList>
            <!--Optional:-->
            <sch:MissionTypeCode>${#Project#MISSION-MissionTypeCode}</sch:MissionTypeCode>
            <!--Optional:-->
            <sch:RegionCode>${#Project#MISSION-RegionCode}</sch:RegionCode>
            <!--Optional:-->
            <sch:ServiceHourList>
${#Project#MISSION-ServiceHourListModified}
            </sch:ServiceHourList>
            <!--Optional:-->
            <sch:ServicedStationList>
               		${#Project#MISSION-ServicedStationListManual} 
            </sch:ServicedStationList>
            <!--Optional:-->
            <sch:TrainName>${#Project#MISSION-TrainName}</sch:TrainName>
         </mis:manualModeRequest>
      </mis:InitializeManualMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ca48af10-9ada-4185-8e4a-069f61468a21"/><con:assertion type="SOAP Response" name="SOAP Response" id="6c4e3a70-4196-45e6-8e09-29ebfe1a5ef7"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="9a84aa78-a709-4255-985d-36de80069424"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="d45dd886-fb3f-4e3e-b428-e54e7f6ba871"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/InitializeManualMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="23e00ea5-ce36-4e98-95d7-fd71d63c5305"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>InitializeManualMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';

//ns1:InitializeManualMissionResponse[1]/ns1:InitializeManualMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="1d60a134-eaed-419b-86e4-13a531629f33"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="e25afbd4-111c-4e70-b862-cce94ee51762"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownServiceId"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>93c7c5b2-a59e-4c1e-8856-c0ebdd5da5d1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1490-A8-4 -- StopMission Train Service Not Found TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="855c4776-6bfa-49cc-89de-efdc548a19a5"><con:description/><con:settings/><con:testStep type="manualTestStep" name="Bad service configuration" id="f0eaa671-560e-4122-b1ec-fee149d40397"><con:description>Define a wrong Instant Message service configuration</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="request" name="StopMission" id="09c48c8d-71ba-44da-bcac-a2b1eac1aff8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_IMissionService</con:interface><con:operation>StopMission</con:operation><con:request name="StopMission" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Mission/MissionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mis="http://alstom.com/pacis/pis/ground/mission/">
   <soapenv:Header/>
   <soapenv:Body>
      <mis:StopMission>
         <!--Optional:-->
         <mis:sessionId>${#Project#INTERNAL-SessionID}</mis:sessionId>
         <!--Optional:-->
         <mis:onBoardValidationFlag>${#Project#MISSION-OnBoardValidationFlag}</mis:onBoardValidationFlag>
         <!--Optional:-->
         <mis:elementAlphaNumber>${#Project#-GEN-AddresseeElementNb}</mis:elementAlphaNumber>
         <!--Optional:-->
         <mis:missionId>${#Project#-GEN-MissionOperatorCode}</mis:missionId>
         <!--Optional:-->
         <mis:timeOut>${#Project#-GEN-RequestTimeout}</mis:timeOut>
      </mis:StopMission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c4a53c7e-c463-488c-8fda-ebd697d946d9"/><con:assertion type="SOAP Response" name="SOAP Response" id="25a9258b-625f-4eef-90e2-e927038debc8"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="d1f01095-8238-4ad2-b96f-9e110a6c23e2"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f21ee434-c517-464b-bd86-bc657ff85eb3"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/mission/IMissionService/StopMission" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ReqId Property Transfer" id="531c8781-9441-48a8-94e2-74f9ec1bd52a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ReqIDTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>StopMission</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/mission/';
//ns1:StopMissionResponse[1]/ns1:StopMissionResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Examine received notifications" disabled="true" id="decfe36c-27eb-48b4-91c2-9d42eb415101"><con:description>Examine received notifications in NotificationAppGroundMockService</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>There should be the following notifications received:
- MissionCommandProgressProcessing
- MissionCommandProgressSent
- MissionCommandProgressSuccess</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="ac931ee9-061e-4609-9575-116647b427d5"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["MissionCommandProgressProcessing",
					  "MissionCommandProgressUnknownServiceId"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:setupScript>def mockService = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService")
if (mockService.getMockRunner() == null || !mockService.getMockRunner().isRunning())
{
	mockService.start()
}
// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
// find the module within the library 
module = library.testCases["Utils"].testSteps["Check"]
// initialise the library; which places an instance of Check in the context
module.run(testRunner, context)
</con:setupScript><con:tearDownScript>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</con:tearDownScript><con:properties><con:property><con:name>RequestID</con:name><con:value>32a64ca1-4448-42e9-a28d-1896cb48d3f9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="TC_PIS_Sy_1500 - LiveVideoControl TestSuite" disabled="true" id="15849a96-4e66-4517-97e0-740cafd65857"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAvailableElementList TestCase" searchProperties="true" id="43a6ca15-97b1-485f-81bb-9ce6a1feeb59"><con:settings/><con:testStep type="request" name="GetAvailableElementList" id="43a81141-1de1-42d8-87c4-978c81fca0df"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_LiveVideoControl</con:interface><con:operation>GetAvailableElementList</con:operation><con:request name="GetAvailableElementList"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:liv="http://alstom.com/pacis/pis/ground/livevideocontrol/">
   <soapenv:Header/>
   <soapenv:Body>
      <liv:GetAvailableElementList>
         <!--Optional:-->
         <liv:sessionId>${#Project#INTERNAL-SessionID}</liv:sessionId>
      </liv:GetAvailableElementList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="2e421da8-9c1b-4758-aee2-1cfec0676ed5"/><con:assertion type="XPath Match" name="XPath Match" id="fad32962-372a-4fa4-9b04-aed169147068"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/livevideocontrol/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/GetAvailableElementList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StartVideoStreamingCommand for Element TestCase" searchProperties="true" id="a6fa8fe7-28b2-48e6-92a9-5cd7ee5cd01c"><con:settings/><con:testStep type="request" name="StartVideoStreamingCommand" id="4c973f2e-9ae4-4483-8ce1-fe8c8dd05859"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_LiveVideoControl</con:interface><con:operation>StartVideoStreamingCommand</con:operation><con:request name="StartVideoStreamingCommand"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:liv="http://alstom.com/pacis/pis/ground/livevideocontrol/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <liv:StartVideoStreamingCommand>
         <!--Optional:-->
         <liv:sessionId>${#Project#INTERNAL-SessionID}</liv:sessionId>
         <!--Optional:-->
         <liv:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </liv:targetAddress>
         <!--Optional:-->
         <liv:url>${#Project#LVC-StreamingURL}</liv:url>
      </liv:StartVideoStreamingCommand>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f7830ff8-da38-4d4f-b16b-eaa55ddd4dbe"/><con:assertion type="SOAP Response" name="SOAP Response" id="ce4e2ea2-070f-481d-a4dd-88e6fbce1bf3"/><con:assertion type="XPath Match" name="XPath Match" id="87ab64a0-e752-4d54-b7a0-0cd99f821915"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/livevideocontrol/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="5c8891e6-bb48-4bf9-a11c-3a9ab7f3ecf5"><con:configuration/></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StartVideoStreamingCommand" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="1d004440-34f5-454e-b301-b39e0df80c93"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Request ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>StartVideoStreamingCommand</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/livevideocontrol/';
//ns1:StartVideoStreamingCommandResponse[1]/ns1:StartVideoStreamingCommandResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>RequestID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="a6f8c2b0-f41b-4e60-a574-6e59d6cfe0c5"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["LiveVideoControlDistributionProcessing",
					 "LiveVideoControlDistributionSent",
					 "LiveVideoControlDistributionReceived"]

def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:properties><con:property><con:name>RequestID</con:name><con:value>51d43503-6e49-4a82-8aa4-30eb28f1f5b3</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StopVideoStreamingCommand TestCase" searchProperties="true" id="d9051a16-8b2d-4fcb-accc-620071073e4d"><con:settings/><con:testStep type="request" name="StopVideoStreamingCommand" id="870422c5-4ca3-493f-a453-86446eb49810"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_LiveVideoControl</con:interface><con:operation>StopVideoStreamingCommand</con:operation><con:request name="StopVideoStreamingCommand"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/LiveVideoControl/LiveVideoControlService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:liv="http://alstom.com/pacis/pis/ground/livevideocontrol/" xmlns:sch="http://alstom.com/pacis/pis/schema/">
   <soapenv:Header/>
   <soapenv:Body>
      <liv:StopVideoStreamingCommand>
         <!--Optional:-->
         <liv:sessionId>${#Project#INTERNAL-SessionID}</liv:sessionId>
         <!--Optional:-->
         <liv:targetAddress>
            <sch:Id>${#Project#-GEN-AddresseeElementNb}</sch:Id>
            <sch:Type>${#Project#INTERNAL-AddresseeType1}</sch:Type>
         </liv:targetAddress>
      </liv:StopVideoStreamingCommand>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ff54e43b-e0cc-4d20-bda6-cbe81859676d"/><con:assertion type="SOAP Response" name="SOAP Response" id="e60cf876-2ba9-4557-afb2-bb53f81b693e"/><con:assertion type="XPath Match" name="XPath Match" id="a033cd91-28f3-44db-a934-92b5c4caebd1"><con:configuration><path>declare namespace i='http://www.w3.org/2001/XMLSchema-instance';
declare namespace a='http://alstom.com/pacis/pis/schema/';
declare namespace ns1='http://alstom.com/pacis/pis/ground/livevideocontrol/';
declare namespace ns2='http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics';
declare namespace s='http://schemas.xmlsoap.org/soap/envelope/';
//ns1:ResultCode[1]</path><content>REQUEST_ACCEPTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/livevideocontrol/LiveVideoControl/StopVideoStreamingCommand" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="f5adc4ec-a8c8-4488-a478-838b4a999cbd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Request ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>StopVideoStreamingCommand</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/livevideocontrol/';
//ns1:StopVideoStreamingCommandResponse[1]/ns1:StopVideoStreamingCommandResult[1]/ns1:RequestId[1]
</con:sourcePath><con:targetType>Request ID</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Validate Notifications" id="f7f423bb-7d0e-455d-b9d2-1e944552bdea"><con:settings/><con:config><script>

//List of notification expected
def ListeNotifications = ["LiveVideoControlDistributionProcessing",
					 "LiveVideoControlDistributionSent",
					 "LiveVideoControlDistributionReceived"]


def check = context.check
check.validReceivedNotifications(ListeNotifications, 300)
 

</script></con:config></con:testStep><con:properties><con:property><con:name>Request ID</con:name><con:value>a67c1a30-e631-4b3a-9898-3b1104745fde</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Datapackage Scenario" id="4844f699-781f-45d5-aaff-07fb04b00673"><con:description>Upload, define, distribute &amp; force Baseline</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Datapackage Scenario 1 : Tranfer new baseline to element" searchProperties="true" id="1519e331-2aa5-4daf-ad00-223ce6179b91" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="calltestcase" name="GetAvailableElements" id="80234f15-193c-4bb4-b38c-43a8134436c8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b72a5c4d-57ab-4dcc-baa0-711e85e3a378</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="uploadDataPackages" id="bef1e4cb-9de4-45ad-93c7-f472d79d965d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f75d5a61-0302-45f6-a33d-dfd18fa48409</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>384668ea-30dd-420e-a1bd-fd7412f4e960</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="uploadAlreadyExistingDataPackages" disabled="true" id="1ac7d3e0-8516-415e-ab4f-2e2c650fdd42"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>6635fff0-03ed-4252-a987-a7afe208ab01</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>e6b2bbbe-045e-40c1-a291-16b25286cf3b</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="defineNewBaseline" id="03d0d5b4-1b04-44d4-b30d-6f205224a6e7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>53319ec6-f08a-43ca-87a2-b034641a66f9</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>040d2ff7-4b0b-4c4b-a8fc-1e71c4af19b5</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="getBaselineList" id="b1b4453f-2e20-44bc-8eac-ad8100729e69"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2965ee35-9489-4a86-8399-6ed6c6d21547</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="defineAlreadyExistingBaseline" id="02020cd5-e0aa-40e9-9ad1-feb7318bcbe6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>9ba335fe-2e4d-4953-8b02-b682d68fbd59</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>073a5c6d-c491-4053-860c-79552c5510af</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="AssignFutureBaselineToElement" id="d4c2db19-34b8-4d81-9c51-8eb59bf0a036"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f0c3f04c-6997-4a84-bc64-c1e6b85b3b71</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="distributeBaselineToElement" id="0c2590d0-8d79-4e15-bde6-184bb226e751"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>52c3c94f-bf62-49b4-8172-d13c74ad70ca</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>b76d659b-3da5-4d44-b490-8baacaad186e</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetElementDataPackageBaselines" id="fba53a4d-5d57-441a-93a2-e0effac96dbd"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4d600375-704c-4047-a847-803b3e0e2b7e</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForceFutureBaselineToElement" disabled="true" id="d6e36075-9975-4170-8fd7-375123119cdd"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d6c45476-3e40-4ffc-ace5-214fbf6a80ae</con:targetTestCase><con:properties><con:property><con:name>RequestId</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestId</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ClearForcingStatus" disabled="true" id="140291bc-152a-437a-960d-9c1710c84864"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>ece61c81-14b4-46ea-be34-861a75f46338</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="AssignCurrentBaselineToElement" id="2446e61b-6fb7-43ad-82d5-b3d518832dea"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f382ef59-304d-4c03-a59b-695ecc7e7f15</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Datapackage Scenario 2 : Tranfer new baseline with missing package to element" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4b2b0df7-bcfa-48ce-9ef9-3fa05570cf77"><con:settings/><con:testStep type="calltestcase" name="GetAvailableElements" id="62cbc1fc-da40-49a6-bc4f-cce4421ab670"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b72a5c4d-57ab-4dcc-baa0-711e85e3a378</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="uploadDataPackages" id="5c26530b-b397-47e7-bc4d-dfe177a9cf40"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f75d5a61-0302-45f6-a33d-dfd18fa48409</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>93206fff-8cb3-4079-b59e-123ab228f6ef</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="uploadAlreadyExistingDataPackages" id="f9f324da-06a4-4fd4-8f61-ae7e469e8eed"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>6635fff0-03ed-4252-a987-a7afe208ab01</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>e6b2bbbe-045e-40c1-a291-16b25286cf3b</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="defineNewBaselinewithMissingDataPackage" id="d1674884-82c3-41a0-a367-5c2c544121a9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b5f16a57-bf88-4552-85a7-e7399547370a</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="getBaselineList" id="285e1f75-8cd3-4f1b-bfb8-5e0882263034"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2965ee35-9489-4a86-8399-6ed6c6d21547</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="getElementDataPackageBaselines" id="37372297-af61-4ca0-a6ed-4441fc7df531"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4d600375-704c-4047-a847-803b3e0e2b7e</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="AssignFutureBaselineToElement" id="33f75900-2925-4461-b6aa-a9666dd12d35"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f0c3f04c-6997-4a84-bc64-c1e6b85b3b71</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>dcb220d9-7fb7-482f-9ef8-bd4d8018ee31</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="AssignFutureBaseline with Missing package ToElement" id="aecbf679-6d3f-48c4-852d-44cf9c0ab71f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bb54e01-7ff1-4ec6-93ee-434c55e8ce0c</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="distributeBaseline with missing package toElement" id="257767a9-90f9-4a7c-85db-386b4c2c2bdf"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>879bf994-18ad-4be8-96eb-f6b2cf3c1e4a</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForceFutureBaseline with missing package ToElement" id="65123258-6956-4d69-a6a4-d8804b75470b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c58a279e-2c5d-4f5c-be81-30b0b5ec1786</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ClearForcingStatus" id="7b7a09ac-0e21-402b-a382-1b7922a23b5f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>ece61c81-14b4-46ea-be34-861a75f46338</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="AssignCurrentBaseline with missing package ToElement" id="4b21db5d-7356-4026-9e5b-75b812be2a0f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1d95c615-44c2-4dcd-b5f6-493a40705671</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Datapackage Scenario 3 : Tranfer new baseline to Mission Commercial Number" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true" id="3d124906-4958-4ac1-b53c-fbee229dc7aa"><con:settings/><con:testStep type="calltestcase" name="GetAvailableElements" id="5d6f71eb-6cf6-4afa-bc94-515361102468"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b72a5c4d-57ab-4dcc-baa0-711e85e3a378</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="uploadDataPackages" id="20af6485-f7b4-4d7c-93a8-d4d8ddd3713a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f75d5a61-0302-45f6-a33d-dfd18fa48409</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>93206fff-8cb3-4079-b59e-123ab228f6ef</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="uploadAlreadyExistingDataPackages" id="ba574e57-e4fa-4cd5-8183-70b02004f3c0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>6635fff0-03ed-4252-a987-a7afe208ab01</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>e6b2bbbe-045e-40c1-a291-16b25286cf3b</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="defineNewBaseline" id="0e4b13a0-1c1f-4bae-ac85-861a12f7965e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>53319ec6-f08a-43ca-87a2-b034641a66f9</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>040d2ff7-4b0b-4c4b-a8fc-1e71c4af19b5</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="getBaselineList" id="f44e6463-8c00-475f-a312-21391ca5d9a6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2965ee35-9489-4a86-8399-6ed6c6d21547</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="AssignFutureBaselineToElement" id="2c51d2b2-c120-4c82-9810-74a0408e5ef2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f0c3f04c-6997-4a84-bc64-c1e6b85b3b71</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>dcb220d9-7fb7-482f-9ef8-bd4d8018ee31</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="distributeBaselineTo Mission Commercial Number" id="3429ef67-0ffc-42e4-a893-c70af7df4d6e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c3db0bcd-f966-4f70-be37-e1703233d518</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetElementDataPackageBaselines" id="5303c1b4-3da5-4f0b-829f-2cdf8671163e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4d600375-704c-4047-a847-803b3e0e2b7e</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="getMissionCommercialNumberDataPackageBaselines" id="f77a88fb-de2b-4384-92f9-bfd6fb173fb3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>ff8c9bb8-0442-4020-8407-1731d752ba7c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForceFutureBaselineToMissionCommercialNumber" id="d580f75c-44b3-4777-bf10-26782cbfce47"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>8f94bb3a-3483-4b09-82ab-54cc6daff37a</con:targetTestCase><con:properties><con:property><con:name>RequestId</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ClearForcingStatusForMissionCommercialNumber" id="249cde16-f862-4486-a5c8-0a84c65a3ff9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bc696391-e2e9-4934-adc7-8c7ba510386a</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="AssignCurrentBaselineToElement" id="507054c2-eea9-438f-ba9b-e833da5a52b2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f382ef59-304d-4c03-a59b-695ecc7e7f15</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Datapackage Scenario 4 : Tranfer new baseline to Mission Operator Code" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true" id="81a7ffda-b9e9-4b9e-803a-3689f3f45e66"><con:settings/><con:testStep type="calltestcase" name="GetAvailableElements" id="7ff6c97e-f7c5-47e9-986c-9e585851002e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b72a5c4d-57ab-4dcc-baa0-711e85e3a378</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="uploadDataPackages" id="49c80547-9c93-4635-957e-596a3018a45b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f75d5a61-0302-45f6-a33d-dfd18fa48409</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>93206fff-8cb3-4079-b59e-123ab228f6ef</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="uploadAlreadyExistingDataPackages" id="6e914f94-95b3-4444-aa47-26a6914460cc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>6635fff0-03ed-4252-a987-a7afe208ab01</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>e6b2bbbe-045e-40c1-a291-16b25286cf3b</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="defineNewBaseline" id="e5d7c1b1-dad4-4888-ba72-f58623369aaa"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>53319ec6-f08a-43ca-87a2-b034641a66f9</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>040d2ff7-4b0b-4c4b-a8fc-1e71c4af19b5</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="getBaselineList" id="353a64de-9926-4676-8405-c08ab49bb3de"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2965ee35-9489-4a86-8399-6ed6c6d21547</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="AssignFutureBaselineToElement" id="78f2aa78-5528-4989-8266-5f19a7b930d6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f0c3f04c-6997-4a84-bc64-c1e6b85b3b71</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name><con:value>dcb220d9-7fb7-482f-9ef8-bd4d8018ee31</con:value></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="distributeBaselineTo Mission OperatorCode" id="236e7e48-280d-460f-ba93-13e90392d073"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>a6ac1604-d98b-40cb-8562-03d8e753657c</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetElementDataPackageBaselines" id="01102e4d-69b7-4a23-9f48-eac2c2e25424"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4d600375-704c-4047-a847-803b3e0e2b7e</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="getMissionOperatorCodeDataPackageBaselines" id="b726c395-bf3c-49d2-8309-eb11b06bc190"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffa9907-4337-4316-85cd-b7a30eef8b47</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForceFutureBaselineToMissionOperatorCode" id="1f4b822a-ec08-4018-b7b6-d776fe17d72f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>83ccd317-7b16-44e6-9e08-aa16bb558be0</con:targetTestCase><con:properties><con:property><con:name>RequestId</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ClearForcingStatusForMissionOperatorCode" id="13a9d9b8-6ea6-42fc-8bdc-e0634e4faabe"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>a1563eb8-8324-42e2-817c-d60c47041a78</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="AssignCurrentBaselineToElement" id="cf2ba548-d167-47c0-85d3-147d6e0470b1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f382ef59-304d-4c03-a59b-695ecc7e7f15</con:targetTestCase><con:properties><con:property><con:name>RequestID</con:name></con:property></con:properties><con:returnProperties><con:entry>RequestID</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="TC_PIS_Sy_1440 - SessionService TestSuite" id="aecf6588-5512-403b-9477-64ddae312153"><con:description>WEB SERVICE SESSION

Requirements : 
[RefSol_PIS2G_GroundApp_SyID_0210],[RefSol_PIS2G_GroundApp_SyID_0211],[RefSol_PIS2G_GroundApp_SyID_0212],
[RefSol_PIS2G_GroundApp_SyID_0213],[RefSol_PIS2G_GroundApp_SyID_0214],[RefSol_PIS2G_GroundApp_SyID_0215],
[RefSol_PIS2G_GroundApp_SyID_0216],[RefSol_PIS2G_GroundApp_SyID_0217],[RefSol_PIS2G_GroundApp_SyID_0173],
"[RefSol_PIS2G_GroundApp_SyID_0218],[RefSol_PIS2G_GroundApp_SyID_0219],[RefSol_PIS2G_GroundApp_SyID_0220],
[RefSol_PIS2G_GroundApp_SyID_0221]
</con:description><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1440-A1-1 -- Correct Login TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="81f7ff52-1f2a-4951-a4c7-6fc9bf9dc457"><con:description>Test  the function that  allows the GroundApp to login to the PIS system, and get a session Identifier
The request is sent with valid login information.

Expexted Result : The PIS shall return a valid session ID

Requirements : 
[RefSol_PIS2G_GroundApp_SyID_0210],[RefSol_PIS2G_GroundApp_SyID_0211]</con:description><con:settings/><con:testStep type="request" name="Correct Login" id="0617decc-a063-4267-894a-ec3657adecf0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_ISessionService</con:interface><con:operation>Login</con:operation><con:request name="Correct Login" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@inline-response-attachments">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:Login>
         <!--Optional:-->
         <ses:username>${#Project#SESSION-Login}</ses:username>
         <!--Optional:-->
         <ses:password>${#Project#SESSION-Password}</ses:password>
      </ses:Login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="1eff200b-0162-4b44-9e6d-212a0fb476e6"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="30f591a7-eae4-428f-9933-d0f4b0c2847c"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="670a2619-b48e-4521-8a36-359b9c924529"/><con:assertion type="Simple NotContains" name="Not Contains" id="8e4a1a19-8e89-4db3-9a41-4f652ccbd06d"><con:configuration><token>00000000-0000-0000-0000-000000000000</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/session/ISessionService/Login" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="SessionID  Property Transfer" id="1139bd94-bea6-4ef4-a95d-694accffcec6"><con:description>Session ID is stored in project property to be available by other webservices</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Global Session ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Correct Login</con:sourceStep><con:sourcePath>declare namespace ns1='http://alstom.com/pacis/pis/ground/session/';
//ns1:LoginResult[1]</con:sourcePath><con:targetType>INTERNAL-SessionID</con:targetType><con:targetStep>#Project#</con:targetStep></con:transfers></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1440-A1-2 -- Incorrect  Login TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="eb9bc49e-9490-4f17-a1a7-fa940581d2b5"><con:description>Test  the function that  allows the GroundApp to login to the PIS system, and get a session Identifier
The request is sent with invalid  login information.

 Expected result : The PIS shall return SessionID = 0  

Requirements : 
[RefSol_PIS2G_GroundApp_SyID_0210],[RefSol_PIS2G_GroundApp_SyID_0212]</con:description><con:settings/><con:testStep type="request" name="Incorrect Login" id="0d1303f0-0f8a-421c-a315-bf0b69b5fc44"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_ISessionService</con:interface><con:operation>Login</con:operation><con:request name="Incorrect Login" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:Login>
         <!--Optional:-->
         <ses:username>invalid</ses:username>
         <!--Optional:-->
         <ses:password>invalid</ses:password>
      </ses:Login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="efa7215c-8f6a-4018-a7a5-c8ea6abfa901"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="c779a6ee-59f5-4dee-a4e7-832f1aa7380f"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c97f6247-aa40-4a35-9fd3-50c16b5667d3"/><con:assertion type="XPath Match" name="XPath Match" id="f05a7882-82f3-41ad-b5ab-671df0a03443"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/session/';
//ns1:LoginResult[1]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/session/ISessionService/Login" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1440-A1-3 -- Login Session Expiration TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="bd20eac0-1eee-41ee-a401-17eb9724e375" disabled="true"><con:description>Test  the function that  allows the GroundApp to login to the PIS system, and get a session Identifier.

After the configured period of inactivity, the session shall be closed and  the client logged out 

Requirements : 
[RefSol_PIS2G_GroundApp_SyID_0213],[RefSol_PIS2G_GroundApp_SyID_0214]</con:description><con:settings/><con:testStep type="calltestcase" name="Login" id="4f7bc414-373e-4310-a1ba-d02571a1c9ed"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>81f7ff52-1f2a-4951-a4c7-6fc9bf9dc457</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="Delay for session expiration" id="be9aa2cc-e6d8-40c6-84f9-8f084aa38f77"><con:settings/><con:config><delay>3800000</delay></con:config></con:testStep><con:testStep type="manualTestStep" name="Session Expiration" id="ab115910-c400-4bf5-8938-b83b9a4f3473" disabled="true"><con:description>Verify that client application is logout after a configurable period of inactivity. [RefSol_PIS2G_GroundApp_SyID_0213],[RefSol_PIS2G_GroundApp_SyID_0214]</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>A session shall expire after a configurable period of inactivity (unit in minutes), defaulted to 480 minutes (8 hours).
When a session expires, the Ground PIS shall automatically close the associated session, and logout the client application</con:expectedResult></con:config></con:testStep><con:testStep type="calltestcase" name="SessionExpired" id="a66851ba-5ee0-4a48-ab36-b0c48f373edc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02c21e03-b971-4111-a910-dc7a40d5da92</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1440-A2-1 -- SetNotificationInformation TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="9c0038e7-6ed1-43a5-bf10-06633b5e3b84"><con:description>Test of the function that allows the GroundApp to provide the notification server URL.

The request is sent with a valid URL.

Expected result : The ground PIS shall acknowledge this request 


Requirements : 
[RefSol_PIS2G_GroundApp_SyID_0215],[RefSol_PIS2G_GroundApp_SyID_0216],[RefSol_PIS2G_GroundApp_SyID_0217],[RefSol_PIS2G_GroundApp_SyID_0173],</con:description><con:settings/><con:testStep type="request" name="SetNotificationInformation" id="8211a3ec-2ff3-4e16-ae49-602608c20f7b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_ISessionService</con:interface><con:operation>SetNotificationInformation</con:operation><con:request name="SetNotificationInformation" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:SetNotificationInformation>
         <!--Optional:-->
         <ses:sessionId>${#Project#INTERNAL-SessionID}</ses:sessionId>
         <!--Optional:-->
         <ses:notificationURL>${#Project#SESSION-Notification service URL}</ses:notificationURL>
      </ses:SetNotificationInformation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="7d6c2e0b-5ebf-4984-8b32-96d94fc342bc"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f6f62ebd-ace1-48cc-816d-a371e28849de"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="421400b4-f061-447c-9fe6-d45687fd5637"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [SetNotificationInformationResult]" id="0b990087-ff7d-47c5-a298-9f46999f85d9"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/session/';
//ns1:SetNotificationInformationResponse[1]/ns1:SetNotificationInformationResult[1]/text()</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/session/ISessionService/SetNotificationInformation" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1440-A2-2 -- SetNotificationInformation Error Management TestCas" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4458aa5f-47c1-4146-87ea-49ca2803076d"><con:description>Test of the function that allows the GroundApp to provide the notification server URL.

The request is sent with and invalid URL or a bad session ID.

Expected result : The PIS shall return an error

Requirements : 
[RefSol_PIS2G_GroundApp_SyID_0173]
[RefSol_PIS2G_GroundApp_SyID_0271]
</con:description><con:settings/><con:testStep type="request" name="SetNotificationInformation Invalid URL" id="4aa543e4-9083-4c70-a7f2-3435ddbd766e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_ISessionService</con:interface><con:operation>SetNotificationInformation</con:operation><con:request name="SetNotificationInformation Invalid URL" outgoingWss="" incomingWss=""><con:description>An invalid URL is sent</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:SetNotificationInformation>
         <!--Optional:-->
         <ses:sessionId>${#Project#INTERNAL-SessionID}</ses:sessionId>
         <!--Optional:-->
         <ses:notificationURL>ghfyufhfhf</ses:notificationURL>
      </ses:SetNotificationInformation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b8d9bb8b-3dee-43a8-b43f-2bf1635a8d7c"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="a66c4343-810b-4a60-b613-290ea83361b8"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="cc322e52-dfee-494a-9ff3-ea40796ed6dc"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [SetNotificationInformationResult]" id="dde97a07-30df-4bb9-8021-dbf1977eab07"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/session/';
//ns1:SetNotificationInformationResponse[1]/ns1:SetNotificationInformationResult[1]/text()</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/session/ISessionService/SetNotificationInformation" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SetNotificationInformation Bad Session ID" id="f472fbbc-eca0-4d33-a44a-5bf42411d8e3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_ISessionService</con:interface><con:operation>SetNotificationInformation</con:operation><con:request name="SetNotificationInformation Bad Session ID" outgoingWss="" incomingWss=""><con:description>An invalid session ID is sent</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:SetNotificationInformation>
         <!--Optional:-->
         <ses:sessionId>d044dc63-ddba-4336-8e2c-f70d046f75dc</ses:sessionId>
         <!--Optional:-->
         <ses:notificationURL>${#Project#SESSION-Notification service URL}</ses:notificationURL>
      </ses:SetNotificationInformation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="505d8c9a-605e-4010-9565-7894dac056db"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="7717c4d3-4997-4f83-bf9f-414d5a44fb9d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="ad84707b-53de-4501-baba-15482b5b7763"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [SetNotificationInformationResult]" id="ef4d6823-224c-4921-9eb2-12a0403d3767"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/session/';
//ns1:SetNotificationInformationResponse[1]/ns1:SetNotificationInformationResult[1]/text()</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/session/ISessionService/SetNotificationInformation" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1440-A3-1 -- Logout TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0546e2a0-f5fc-4719-a560-fa2d29b51a8e"><con:description>Test the function that allows the GroundApp to logout from the PIS system

Expexted Result : The PIS shall verify the session identifier, stop the notification request associated to this session, and close the specified session.


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0218],[RefSol_PIS2G_GroundApp_SyID_0219]
</con:description><con:settings/><con:testStep type="request" name="Logout" id="2ac583e1-7776-432d-9885-f3f5742abebb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_ISessionService</con:interface><con:operation>Logout</con:operation><con:request name="Logout" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:Logout>
         <!--Optional:-->
         <ses:sessionId>${#Project#INTERNAL-SessionID}</ses:sessionId>
      </ses:Logout>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="164b3cc4-179f-4a27-80fe-82e5a6f1ca06"/><con:assertion type="SOAP Response" name="SOAP Response" id="1f723338-e863-45e4-ad44-682863fad246"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="b1fb416f-4364-4afd-9303-4ed54f1e53e5"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [LogoutResult]" id="7ac7268a-a9fd-41ae-8a9a-286998e7b609"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/session/';
//ns1:LogoutResponse[1]/ns1:LogoutResult[1]/text()</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/session/ISessionService/Logout" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1440-A3-2 -- Logout Error Management TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d11d834a-fdf8-4ecd-8167-9f5777ca946c"><con:description>Test the function that allows the GroundApp to logout from the PIS system

The Logout request is sent  with an  invalid sessionID. 

Expected result : The PIS shall return invalid session ID error

Requirements ;
[RefSol_PIS2G_GroundApp_SyID_0272]
</con:description><con:settings/><con:testStep type="request" name="Logout Bad Session ID" id="074aa4ff-af78-4f4b-b7c8-b07a70e47b9d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_ISessionService</con:interface><con:operation>Logout</con:operation><con:request name="Logout Bad Session ID" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:Logout>
         <!--Optional:-->
         <ses:sessionId>d044dc63-ddba-4336-8e2c-f70d046f75dc</ses:sessionId>
      </ses:Logout>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="937dc85f-50c8-4cf0-8894-7f411c7b466e"/><con:assertion type="SOAP Response" name="SOAP Response" id="4dfcb6a8-8b40-4565-a3f5-dcf4f35d7c68"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="9e533497-a458-4d1f-b706-dc08a950ead7"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [LogoutResult]" id="759ddff4-8e69-45a4-a0c8-9ec78a9ecad3"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/session/';
//ns1:LogoutResponse[1]/ns1:LogoutResult[1]/text()</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/session/ISessionService/Logout" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1440-A4-2 -- IsSessionValid Expired  TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="02c21e03-b971-4111-a910-dc7a40d5da92"><con:description>Test the function that allows the GroundApp to request from the ground PIS the status of a session. The ground PIS returns one of the following statuses: “active” or “expired”.

The session associated to the received session identifier has expired. 

Expected Result: Ground PIS shall return the status "expired" 


Requirements :
[RefSol_PIS2G_GroundApp_SyID_0220],[RefSol_PIS2G_GroundApp_SyID_0221]</con:description><con:settings/><con:testStep type="manualTestStep" name="Session Expiration" id="b2723903-474e-4c4a-bb55-8760a42d0736"><con:description>Wait for Session expiration delay or Logout</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="delay" name="Delay for session expiration" id="6e7ef4e1-e105-4f2c-8ad7-4a1ed3832b80"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="IsSessionValid EXPIRED" id="caaeb1e4-bf37-4ae6-85ac-28999ab8a4aa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_ISessionService</con:interface><con:operation>IsSessionValid</con:operation><con:request name="IsSessionValid EXPIRED" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:IsSessionValid>
         <!--Optional:-->
         <ses:sessionId>${#Project#INTERNAL-SessionID}</ses:sessionId>
      </ses:IsSessionValid>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0252e657-d8a3-49dd-b578-007f8124f624"/><con:assertion type="SOAP Response" name="SOAP Response" id="6e9171f6-b410-43f1-9854-2cf53f77b178"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="a2ed1c4d-b6e2-4234-8a03-8b61eea501eb"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="e27e05a6-f9bd-4ea2-8538-cc6a180bd1ba"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/session/';
//ns1:IsSessionValidResult[1]</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/session/ISessionService/IsSessionValid" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_PIS_Sy_1440-A4-1 -- IsSessionValid Active TestCase" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="cd8617a4-20d0-4009-8e23-08f9a9d21766"><con:description>Test the function that allows the GroundApp to request from the ground PIS the status of a session. The ground PIS returns one of the following statuses: “active” or “expired”.

The session associated to the received session identifier is active.

 Expected Result: Ground PIS shall return the status "active"

Requirements :
[RefSol_PIS2G_GroundApp_SyID_0220],[RefSol_PIS2G_GroundApp_SyID_0221]</con:description><con:settings/><con:testStep type="request" name="IsSessionValid ACTIVE" id="068a326b-8965-48c9-8763-0a7f1ee32733"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_ISessionService</con:interface><con:operation>IsSessionValid</con:operation><con:request name="IsSessionValid ACTIVE" outgoingWss="" incomingWss=""><con:description/><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://alstom-ground-pis-server/Session/SessionService.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://alstom.com/pacis/pis/ground/session/">
   <soapenv:Header/>
   <soapenv:Body>
      <ses:IsSessionValid>
         <!--Optional:-->
         <ses:sessionId>${#Project#INTERNAL-SessionID}</ses:sessionId>
      </ses:IsSessionValid>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="18d6baf7-b1a7-4d38-be99-9caeb50b4d83"/><con:assertion type="SOAP Response" name="SOAP Response" id="ab805c26-71bb-414d-90b1-daf8a16f6c58"/><con:assertion type="XPath Match" name="XPath Match" id="37439cc2-44d9-4be9-8b57-84e05a69c7f2"><con:configuration><path>declare namespace ns1='http://alstom.com/pacis/pis/ground/session/';
//ns1:IsSessionValidResult[1]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="9993cce8-b478-4f88-a985-1bb2113a54b1"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://alstom.com/pacis/pis/ground/session/ISessionService/IsSessionValid" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Logout"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Logout Sequence" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Logout"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>0546e2a0-f5fc-4719-a560-fa2d29b51a8e</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Session Expired"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02c21e03-b971-4111-a910-dc7a40d5da92</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="StopMock"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StopMock" searchProperties="true" id="f57a1582-bb89-4072-a27e-0b61ea769873"><con:settings/><con:testStep type="groovy" name="StopMockService"><con:settings/><con:config><script>def mockRunner = testRunner.testCase.testSuite.project.getMockServiceByName("NotificationAppGroundMockService").getMockRunner()
if (mockRunner != null &amp;&amp; mockRunner.isRunning())
{
	mockRunner.stop()
}</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:mockService port="44444" path="/" host="buildmachinepis" name="NotificationAppGroundMockService" dispatchResponseMessages="true" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-version">false</con:setting></con:settings><con:mockOperation name="SendNotification" interface="NotificationAppGroundBinding" operation="SendNotification"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>MockResponse</con:defaultResponse><con:response name="MockResponse" encoding="UTF-8"><con:settings><con:setting id="WsdlSettings@enable-mtom">false</con:setting></con:settings><con:responseContent><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:app="http://alstom.com/pacis/pis/schema/appground/">
   <soap:Header/>
   <soap:Body>
      <app:SendNotificationResponse/>
   </soap:Body>
</soap:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://alstom.com/pacis/pis/appground/INotificationAppGroundService/SendNotificationResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:properties/></con:mockService><con:requirements/><con:properties><con:property><con:name>-GEN-AddresseeElementNb</con:name><con:value>TRAIN-2</con:value></con:property><con:property><con:name>-GEN-MissionCommercialNumber</con:name><con:value>4870</con:value></con:property><con:property><con:name>-GEN-MissionOperatorCode</con:name><con:value>A0001</con:value></con:property><con:property><con:name>-GEN-RequestTimeout</con:name><con:value>1</con:value></con:property><con:property><con:name>DATAPACKAGE-ActivationDateTime</con:name><con:value>2012-09-15T17:36:00</con:value></con:property><con:property><con:name>DATAPACKAGE-BaselineCreationDate</con:name><con:value>2012-04-26T08:00:00.000</con:value></con:property><con:property><con:name>DATAPACKAGE-BaselineDescription</con:name><con:value>SIVENG Baseline 2.0.0.5</con:value></con:property><con:property><con:name>DATAPACKAGE-BaselineVersion</con:name><con:value>2.1.1.63</con:value></con:property><con:property><con:name>DATAPACKAGE-ExpirationDateTime</con:name><con:value>2020-08-30T16:55:00</con:value></con:property><con:property><con:name>DATAPACKAGE-FileCompression</con:name><con:value>false</con:value></con:property><con:property><con:name>DATAPACKAGE-IsIncrementalUpdate</con:name><con:value>false</con:value></con:property><con:property><con:name>DATAPACKAGE-LmtFileURL</con:name><con:value>ftp://media@alstom-pc-test:2121/Lmt-0.0.3.0.zip</con:value></con:property><con:property><con:name>DATAPACKAGE-LMTVersion</con:name><con:value>0.0.3.0</con:value></con:property><con:property><con:name>DATAPACKAGE-PisBaseFileURL</con:name><con:value>ftp://media@alstom-pc-test:2121/PisBase-1.0.0.75.zip</con:value></con:property><con:property><con:name>DATAPACKAGE-PISBaseVersion</con:name><con:value>1.0.0.75</con:value></con:property><con:property><con:name>DATAPACKAGE-PisInfotainementFileURL</con:name><con:value>ftp://media@alstom-pc-test:2121/PisInfotainment-1.0.0.110.zip</con:value></con:property><con:property><con:name>DATAPACKAGE-PisInfotainmentVersion</con:name><con:value>1.0.0.110</con:value></con:property><con:property><con:name>DATAPACKAGE-PisMission-FileURL</con:name><con:value>ftp://media@alstom-pc-test:2121/PisMission-1.0.0.75.zip</con:value></con:property><con:property><con:name>DATAPACKAGE-PISMissionVersion</con:name><con:value>1.0.0.75</con:value></con:property><con:property><con:name>DATAPACKAGE-Priority</con:name><con:value>0</con:value></con:property><con:property><con:name>DATAPACKAGE-TransferMode</con:name><con:value>AnyBandwidth</con:value></con:property><con:property><con:name>DATAPACKAGE-TransfertDate</con:name><con:value>2012-08-03T12:51:00</con:value></con:property><con:property><con:name>DATAPACKAGE-TransfertExpirationDateTime</con:name><con:value>2020-09-03T19:55:00</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-CorruptedFileURL</con:name><con:value>ftp://media@alstom-pc-test:2121/PisBase-0.0.0.0.zip</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-IncoherentExpirationDateTime</con:name><con:value>2008-12-12T09:00:00</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-IncompleteBaselineVersion</con:name><con:value>2.0.0.333</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidActivationDateTime</con:name><con:value>0</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidBaselineVersion</con:name><con:value>0</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidExpirationDateTime</con:name><con:value>0</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidFileCompression</con:name><con:value>invalid</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidFileURL</con:name><con:value>z:\invalid</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidInfotainmentVersion</con:name><con:value>00</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidLMTVersion</con:name><con:value>00</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidPathStructure</con:name><con:value>zz///path</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidPISBaseVersion</con:name><con:value>00</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidPISMissionVersion</con:name><con:value>00</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidTransferDate</con:name><con:value>invalid</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-InvalidTransferMode</con:name><con:value>invalid</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-MissingBaselineVersion</con:name><con:value>6.6.6.6</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGEMissionCommercialNumberNoFutureBaselineAssigned</con:name><con:value>?</con:value></con:property><con:property><con:name>DEGRADED-GEN-BadSessionID</con:name><con:value>00000000-0000-0000-0000-000000000000</con:value></con:property><con:property><con:name>DEGRADED-GEN-InvalidRequestTimeout</con:name><con:value>999999</con:value></con:property><con:property><con:name>DEGRADED-GEN-UnknownElementNumber</con:name><con:value>UNKNOWNELEMENT123</con:value></con:property><con:property><con:name>DEGRADED-GEN-UnknownMissionID</con:name><con:value>UNKNOWNMISSIONABC</con:value></con:property><con:property><con:name>DEGRADED-GEN-UnknownMissionOperatorCode</con:name><con:value>FFFFF</con:value></con:property><con:property><con:name>DEGRADED-IM-PredefinedUndefinedIdentifier</con:name><con:value>0000</con:value></con:property><con:property><con:name>DEGRADED-IM-PredefinedUndefinedStationId</con:name><con:value>StationXX</con:value></con:property><con:property><con:name>DEGRADED-IM-ScheduledEndDateInvalid</con:name><con:value>2010-01-24T16:29:00</con:value></con:property><con:property><con:name>DEGRADED-IM-ScheduledIdentifierUndefined</con:name><con:value>UNDEFINED</con:value></con:property><con:property><con:name>DEGRADED-IM-ScheduledMessageTextInvalid</con:name><con:value>Way nor furnished sir procuring therefore but. Warmth far manner myself active are cannot called. Set her half end girl rich met. Me allowance departure an curiosity ye. In no talking address excited it conduct. Husbands debating replying overcame blessing he it me to domestic.   Living valley had silent eat merits esteem bed. In last an or went wise as left. Visited civilly am demesne so colonel he calling. So unreserved do interested increasing sentiments. Vanity day giving points within six not law. Few impression difficulty his use has comparison decisively.   Ye on properly handsome returned throwing am no whatever. In without wishing he of picture no exposed talking minutes. Curiosity continual belonging offending so explained it exquisite. Do remember to followed yourself material mr recurred carriage. High drew west we no or at john. About or given on witty event. Or sociable up material bachelor bringing landlord confined. Busy so many in hung easy find well up. So of exquisite my an explained remainder. Dashwood denoting securing be on perceive my laughing so.   Am increasing at contrasted in favourable he considered astonished. As if made held in an shot. By it enough to valley desire do. Mrs chief great maids these which are ham match she. Abode to tried do thing maids. Doubtful disposed returned rejoiced to dashwood is so up.   An so vulgar to on points wanted. Not rapturous resolving continued household northward gay. He it otherwise supported instantly. Unfeeling agreeable suffering it on smallness newspaper be. So come must time no as. Do on unpleasing possession as of unreserved. Yet joy exquisite put sometimes enjoyment perpetual now. Behind lovers eat having length horses vanity say had its.   Parish so enable innate in formed missed. Hand two was eat busy fail. Stand smart grave would in so. Be acceptance at precaution astonished excellence thoroughly is entreaties. Who decisively attachment has dispatched. Fruit defer in party me built under first. Forbade him but savings sending ham general. So play do in near park that pain.   Arrived compass prepare an on as. Reasonable particular on my it in sympathize. Size now easy eat hand how. Unwilling he departure elsewhere dejection at. Heart large seems may purse means few blind. Exquisite newspaper attending on certainty oh suspicion of. He less do quit evil is. Add matter family active mutual put wishes happen.   His followed carriage proposal entrance directly had elegance. Greater for cottage gay parties natural. Remaining he furniture on he discourse suspected perpetual. Power dried her taken place day ought the. Four and our ham west miss. Education shameless who middleton agreement how. We in found world chief is at means weeks smile.   Led ask possible mistress relation elegance eat likewise debating. By message or am nothing amongst chiefly address. The its enable direct men depend highly. Ham windows sixteen who inquiry fortune demands. Is be upon sang fond must shew. Really boy law county she unable her sister. Feet you off its like like six. Among sex are leave law built now. In built table in an rapid blush. Merits behind on afraid or warmly.   Oh he decisively impression attachment friendship so if everything. Whose her enjoy chief new young. Felicity if ye required likewise so doubtful. On so attention necessary at by provision otherwise existence direction. Unpleasing up announcing unpleasant themselves oh do on. Way advantage age led listening belonging supposing.  Way nor furnished sir procuring therefore but. Warmth far manner myself active are cannot called. Set her half end girl rich met. Me allowance departure an curiosity ye. In no talking address excited it conduct. Husbands debating replying overcame blessing he it me to domestic.   Living valley had silent eat merits esteem bed. In last an or went wise as left. Visited civilly am demesne so colonel he calling. So unreserved do interested increasing sentiments. Vanity day giving points within six not law. Few impression difficulty his use has comparison decisively.   Ye on properly handsome returned throwing am no whatever. In without wishing he of picture no exposed talking minutes. Curiosity continual belonging offending so explained it exquisite. Do remember to followed yourself material mr recurred carriage. High drew west we no or at john. About or given on witty event. Or sociable up material bachelor bringing landlord confined. Busy so many in hung easy find well up. So of exquisite my an explained remainder. Dashwood denoting securing be on perceive my laughing so.   Am increasing at contrasted in favourable he considered astonished. As if made held in an shot. By it enough to valley desire do. Mrs chief great maids these which are ham match she. Abode to tried do thing maids. Doubtful disposed returned rejoiced to dashwood is so up.   An so vulgar to on points wanted. Not rapturous resolving continued household northward gay. He it otherwise supported instantly. Unfeeling agreeable suffering it on smallness newspaper be. So come must time no as. Do on unpleasing possession as of unreserved. Yet joy exquisite put sometimes enjoyment perpetual now. Behind lovers eat having length horses vanity say had its.   Parish so enable innate in formed missed. Hand two was eat busy fail. Stand smart grave would in so. Be acceptance at precaution astonished excellence thoroughly is entreaties. Who decisively attachment has dispatched. Fruit defer in party me built under first. Forbade him but savings sending ham general. So play do in near park that pain.   Arrived compass prepare an on as. Reasonable particular on my it in sympathize. Size now easy eat hand how. Unwilling he departure elsewhere dejection at. Heart large seems may purse means few blind. Exquisite newspaper attending on certainty oh suspicion of. He less do quit evil is. Add matter family active mutual put wishes happen.   His followed carriage proposal entrance directly had elegance. Greater for cottage gay parties natural. Remaining he furniture on he discourse suspected perpetual. Power dried her taken place day ought the. Four and our ham west miss. Education shameless who middleton agreement how. We in found world chief is at means weeks smile.   Led ask possible mistress relation elegance eat likewise debating. By message or am nothing amongst chiefly address. The its enable direct men depend highly. Ham windows sixteen who inquiry fortune demands. Is be upon sang fond must shew. Really boy law county she unable her sister. Feet you off its like like six. Among sex are leave law built now. In built table in an rapid blush. Merits behind on afraid or warmly.   Oh he decisively impression attachment friendship so if everything. Whose her enjoy chief new young. Felicity if ye required likewise so doubtful. On so attention necessary at by provision otherwise existence direction. Unpleasing up announcing unpleasant themselves oh do on. Way advantage age led listening belonging supposing.   Way nor furnished sir procuring therefore but. Warmth far manner myself active are cannot called. Set her half end girl rich met. Me allowance departure an curiosity ye. In no talking address excited it conduct. Husbands debating replying overcame blessing he it me to domestic.   Living valley had silent eat merits esteem bed. In last an or went wise as left. Visited civilly am demesne so colonel he calling. So unreserved do interested increasing sentiments. Vanity day giving points within six not law. Few impression difficulty his use has comparison decisively.   Ye on properly handsome returned throwing am no whatever. In without wishing he of picture no exposed talking minutes. Curiosity continual belonging offending so explained it exquisite. Do remember to followed yourself material mr recurred carriage. High drew west we no or at john. About or given on witty event. Or sociable up material bachelor bringing landlord confined. Busy so many in hung easy find well up. So of exquisite my an explained remainder. Dashwood denoting securing be on perceive my laughing so.   Am increasing at contrasted in favourable he considered astonished. As if made held in an shot. By it enough to valley desire do. Mrs chief great maids these which are ham match she. Abode to tried do thing maids. Doubtful disposed returned rejoiced to dashwood is so up.   An so vulgar to on points wanted. Not rapturous resolving continued household northward gay. He it otherwise supported instantly. Unfeeling agreeable suffering it on smallness newspaper be. So come must time no as. Do on unpleasing possession as of unreserved. Yet joy exquisite put sometimes enjoyment perpetual now. Behind lovers eat having length horses vanity say had its.   Parish so enable innate in formed missed. Hand two was eat busy fail. Stand smart grave would in so. Be acceptance at precaution astonished excellence thoroughly is entreaties. Who decisively attachment has dispatched. Fruit defer in party me built under first. Forbade him but savings sending ham general. So play do in near park that pain.   Arrived compass prepare an on as. Reasonable particular on my it in sympathize. Size now easy eat hand how. Unwilling he departure elsewhere dejection at. Heart large seems may purse means few blind. Exquisite newspaper attending on certainty oh suspicion of. He less do quit evil is. Add matter family active mutual put wishes happen.   His followed carriage proposal entrance directly had elegance. Greater for cottage gay parties natural. Remaining he furniture on he discourse suspected perpetual. Power dried her taken place day ought the. Four and our ham west miss. Education shameless who middleton agreement how. We in found world chief is at means weeks smile.   Led ask possible mistress relation elegance eat likewise debating. By message or am nothing amongst chiefly address. The its enable direct men depend highly. Ham windows sixteen who inquiry fortune demands. Is be upon sang fond must shew. Really boy law county she unable her sister. Feet you off its like like six. Among sex are leave law built now. In built table in an rapid blush. Merits behind on afraid or warmly.   Oh he decisively impression attachment friendship so if everything. Whose her enjoy chief new young. Felicity if ye required likewise so doubtful. On so attention necessary at by provision otherwise existence direction. Unpleasing up announcing unpleasant themselves oh do on. Way advantage age led listening belonging supposing.   Way nor furnished sir procuring therefore but. Warmth far manner myself active are cannot called. Set her half end girl rich met. Me allowance departure an curiosity ye. In no talking address excited it conduct. Husbands debating replying overcame blessing he it me to domestic.   Living valley had silent eat merits esteem bed. In last an or went wise as left. Visited civilly am demesne so colonel he calling. So unreserved do interested increasing sentiments. Vanity day giving points within six not law. Few impression difficulty his use has comparison decisively.   Ye on properly handsome returned throwing am no whatever. In without wishing he of picture no exposed talking minutes. Curiosity continual belonging offending so explained it exquisite. Do remember to followed yourself material mr recurred carriage. High drew west we no or at john. About or given on witty event. Or sociable up material bachelor bringing landlord confined. Busy so many in hung easy find well up. So of exquisite my an explained remainder. Dashwood denoting securing be on perceive my laughing so.   Am increasing at contrasted in favourable he considered astonished. As if made held in an shot. By it enough to valley desire do. Mrs chief great maids these which are ham match she. Abode to tried do thing maids. Doubtful disposed returned rejoiced to dashwood is so up.   An so vulgar to on points wanted. Not rapturous resolving continued household northward gay. He it otherwise supported instantly. Unfeeling agreeable suffering it on smallness newspaper be. So come must time no as. Do on unpleasing possession as of unreserved. Yet joy exquisite put sometimes enjoyment perpetual now. Behind lovers eat having length horses vanity say had its.   Parish so enable innate in formed missed. Hand two was eat busy fail. Stand smart grave would in so. Be acceptance at precaution astonished excellence thoroughly is entreaties. Who decisively attachment has dispatched. Fruit defer in party me built under first. Forbade him but savings sending ham general. So play do in near park that pain.   Arrived compass prepare an on as. Reasonable particular on my it in sympathize. Size now easy eat hand how. Unwilling he departure elsewhere dejection at. Heart large seems may purse means few blind. Exquisite newspaper attending on certainty oh suspicion of. He less do quit evil is. Add matter family active mutual put wishes happen.   His followed carriage proposal entrance directly had elegance. Greater for cottage gay parties natural. Remaining he furniture on he discourse suspected perpetual. Power dried her taken place day ought the. Four and our ham west miss. Education shameless who middleton agreement how. We in found world chief is at means weeks smile.   Led ask possible mistress relation elegance eat likewise debating. By message or am nothing amongst chiefly address. The its enable direct men depend highly. Ham windows sixteen who inquiry fortune demands. Is be upon sang fond must shew. Really boy law county she unable her sister. Feet you off its like like six. Among sex are leave law built now. In built table in an rapid blush. Merits behind on afraid or warmly.   Oh he decisively impression attachment friendship so if everything. Whose her enjoy chief new young. Felicity if ye required likewise so doubtful. On so attention necessary at by provision otherwise existence direction. Unpleasing up announcing unpleasant themselves oh do on. Way advantage age led listening belonging supposing.   Way nor furnished sir procuring therefore but. Warmth far manner myself active are cannot called. Set her half end girl rich met. Me allowance departure an curiosity ye. In no talking address excited it conduct. Husbands debating replying overcame blessing he it me to domestic.   Living valley had silent eat merits esteem bed. In last an or went wise as left. Visited civilly am demesne so colonel he calling. So unreserved do interested increasing sentiments. Vanity day giving points within six not law. Few impression difficulty his use has comparison decisively.   Ye on properly handsome returned throwing am no whatever. In without wishing he of picture no exposed talking minutes. Curiosity continual belonging offending so explained it exquisite. Do remember to followed yourself material mr recurred carriage. High drew west we no or at john. About or given on witty event. Or sociable up material bachelor bringing landlord confined. Busy so many in hung easy find well up. So of exquisite my an explained remainder. Dashwood denoting securing be on perceive my laughing so.   Am increasing at contrasted in favourable he considered astonished. As if made held in an shot. By it enough to valley desire do. Mrs chief great maids these which are ham match she. Abode to tried do thing maids. Doubtful disposed returned rejoiced to dashwood is so up.   An so vulgar to on points wanted. Not rapturous resolving continued household northward gay. He it otherwise supported instantly. Unfeeling agreeable suffering it on smallness newspaper be. So come must time no as. Do on unpleasing possession as of unreserved. Yet joy exquisite put sometimes enjoyment perpetual now. Behind lovers eat having length horses vanity say had its.   Parish so enable innate in formed missed. Hand two was eat busy fail. Stand smart grave would in so. Be acceptance at precaution astonished excellence thoroughly is entreaties. Who decisively attachment has dispatched. Fruit defer in party me built under first. Forbade him but savings sending ham general. So play do in near park that pain.   Arrived compass prepare an on as. Reasonable particular on my it in sympathize. Size now easy eat hand how. Unwilling he departure elsewhere dejection at. Heart large seems may purse means few blind. Exquisite newspaper attending on certainty oh suspicion of. He less do quit evil is. Add matter family active mutual put wishes happen.   His followed carriage proposal entrance directly had elegance. Greater for cottage gay parties natural. Remaining he furniture on he discourse suspected perpetual. Power dried her taken place day ought the. Four and our ham west miss. Education shameless who middleton agreement how. We in found world chief is at means weeks smile. END</con:value></con:property><con:property><con:name>DEGRADED-MISSION-DifferentActiveMissionID</con:name><con:value>4870</con:value></con:property><con:property><con:name>DEGRADED-MISSION-DifferentInstalledLmtDataPackageVersion</con:name><con:value>2.0.0.0</con:value></con:property><con:property><con:name>DEGRADED-MISSION-InconsistentServiceHourArrivalTime1</con:name><con:value>?</con:value></con:property><con:property><con:name>DEGRADED-MISSION-InconsistentServiceHourDepartureTime1</con:name><con:value>?</con:value></con:property><con:property><con:name>DEGRADED-MISSION-InvalidCarNumberingOffsetCode</con:name><con:value>8</con:value></con:property><con:property><con:name>DEGRADED-MISSION-InvalidCommercialNumberList</con:name><con:value><![CDATA[<arr:string>4870</arr:string> <arr:string>4870</arr:string> <arr:string></arr:string> <arr:string>4871</arr:string>]]></con:value></con:property><con:property><con:name>DEGRADED-MISSION-InvalidMissionStartDate</con:name><con:value>2501201</con:value></con:property><con:property><con:name>DEGRADED-MISSION-InvalidServiceHourList</con:name><con:value><![CDATA[	<mis1:StationServiceHours> 		<mis1:DepartureTime>08:00:00</mis1:DepartureTime> 	</mis1:StationServiceHours> 	 	<mis1:StationServiceHours> 		<mis1:ArrivalTime>18:15:00</mis1:ArrivalTime> 		<mis1:DepartureTime>08:20:00</mis1:DepartureTime> 	</mis1:StationServiceHours> 	 	<mis1:StationServiceHours> 		<mis1:ArrivalTime>08:45:00</mis1:ArrivalTime> 		<mis1:DepartureTime>08:50:00</mis1:DepartureTime> 	</mis1:StationServiceHours> 	 	<mis1:StationServiceHours> 		<mis1:ArrivalTime>10:35:00</mis1:ArrivalTime> 	    </mis1:StationServiceHours>]]></con:value></con:property><con:property><con:name>DEGRADED-MISSION-InvalidStationInsertionType</con:name><con:value>?</con:value></con:property><con:property><con:name>DEGRADED-MISSION-InvalidTrainName</con:name><con:value>INVALID_TRAIN_NAME_81_CHARACTERS_123456123231454621442154545848754674687435435DDGDDDGDGDGDDGDGg44</con:value></con:property><con:property><con:name>DEGRADED-MISSION-NotInRouteStationInsertionId</con:name><con:value>666666666666</con:value></con:property><con:property><con:name>DEGRADED-MISSION-ServicedStationListManualUnknownStationID</con:name><con:value><![CDATA[<mis1:StationList> <mis1:Id>111111111111</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>   <mis1:StationList> <mis1:Id>222222222222</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>   <mis1:StationList> <mis1:Id>333333333333</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>   <mis1:StationList> <mis1:Id>444444444444</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>   <mis1:StationList> <mis1:Id>9999999</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>]]></con:value></con:property><con:property><con:name>DEGRADED-MISSION-UnknownLanguageCode</con:name><con:value><![CDATA[ <arr:string>fra</arr:string><arr:string>czk</arr:string><arr:string>spa</arr:string>]]></con:value></con:property><con:property><con:name>DEGRADED-MISSION-UnknownLmtDataPackageVersion</con:name><con:value>9.8.7.6</con:value></con:property><con:property><con:name>DEGRADED-MISSION-UnknownOnboardServiceCodeList</con:name><con:value>&lt;arr:unsignedInt>1&lt;/arr:unsignedInt>&lt;arr:unsignedInt>55&lt;/arr:unsignedInt></con:value></con:property><con:property><con:name>DEGRADED-MISSION-UnknownStationInsertionId</con:name><con:value>99999</con:value></con:property><con:property><con:name>DEGRADED-MISSION-UnknownStationListId</con:name><con:value>?</con:value></con:property><con:property><con:name>IM-FreeTextAttentionGetter</con:name><con:value>true</con:value></con:property><con:property><con:name>IM-FreeTextContent</con:name><con:value>Free Text From Ground</con:value></con:property><con:property><con:name>IM-FreeTextDelayBetweenRepetition</con:name><con:value>5</con:value></con:property><con:property><con:name>IM-FreeTextDuration</con:name><con:value>15</con:value></con:property><con:property><con:name>IM-FreeTextIdentifier</con:name><con:value>1</con:value></con:property><con:property><con:name>IM-FreeTextNumberRepetitions</con:name><con:value>1</con:value></con:property><con:property><con:name>IM-PredefinedCarId</con:name><con:value>2</con:value></con:property><con:property><con:name>IM-PredefinedDelay</con:name><con:value>9</con:value></con:property><con:property><con:name>IM-PredefinedDelayReason</con:name><con:value>0</con:value></con:property><con:property><con:name>IM-PredefinedHour</con:name><con:value>2012-12-12T10:00:00</con:value></con:property><con:property><con:name>IM-PredefinedIdentifier</con:name><con:value>100</con:value></con:property><con:property><con:name>IM-PredefinedIdentifierCarId</con:name><con:value>A0101</con:value></con:property><con:property><con:name>IM-PredefinedIdentifierDelay</con:name><con:value>A0107</con:value></con:property><con:property><con:name>IM-PredefinedIdentifierHour</con:name><con:value>A9900</con:value></con:property><con:property><con:name>IM-PredefinedIdentifierStation</con:name><con:value>A0102</con:value></con:property><con:property><con:name>IM-PredefinedStationId</con:name><con:value>666666666666</con:value></con:property><con:property><con:name>IM-RequestID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7d43f489-1160-4d86-9e74-f56f20e13b4c</con:value></con:property><con:property><con:name>IM-ScheduledDateEnd</con:name><con:value>2015-08-08T22:42:00</con:value></con:property><con:property><con:name>IM-ScheduledDateStart</con:name><con:value>2012-08-01T10:40:00</con:value></con:property><con:property><con:name>IM-ScheduledIdentifier</con:name><con:value>SCHEDULED</con:value></con:property><con:property><con:name>IM-ScheduledMessageText</con:name><con:value>Message Planifie du Sol</con:value></con:property><con:property><con:name>INTERNAL-AddresseeType1</con:name><con:value>Element</con:value></con:property><con:property><con:name>INTERNAL-AddresseeType2</con:name><con:value>MissionCode</con:value></con:property><con:property><con:name>INTERNAL-AddresseeType3</con:name><con:value>MissionOperatorCode</con:value></con:property><con:property><con:name>INTERNAL-SessionID</con:name><con:value>61510f5b-0edf-4f61-8d60-e5e4159e6a19</con:value></con:property><con:property><con:name>MISSION-CarNumberingOffsetCode</con:name><con:value>1</con:value></con:property><con:property><con:name>MISSION-CommercialNumberList</con:name><con:value><![CDATA[<arr:string>4870</arr:string><arr:string>4870</arr:string><arr:string>4871</arr:string><arr:string>4871</arr:string><arr:string>4871</arr:string>]]></con:value></con:property><con:property><con:name>MISSION-CommercialNumberListModified</con:name><con:value><![CDATA[<arr:string>4870</arr:string><arr:string>4870</arr:string><arr:string>4871</arr:string><arr:string>4871</arr:string>]]></con:value></con:property><con:property><con:name>MISSION-LanguageCode1</con:name><con:value>fra</con:value></con:property><con:property><con:name>MISSION-LanguageCodeList</con:name><con:value><![CDATA[ <arr:string>fra</arr:string><arr:string>eng</arr:string><arr:string>spa</arr:string>]]></con:value></con:property><con:property><con:name>MISSION-LmtDataPackageVersion</con:name><con:value>2.0.0.6</con:value></con:property><con:property><con:name>MISSION-MissionID</con:name><con:value>4871</con:value></con:property><con:property><con:name>MISSION-MissionTypeCode</con:name><con:value>TGV</con:value></con:property><con:property><con:name>MISSION-OnboardServiceCode1</con:name><con:value>1</con:value></con:property><con:property><con:name>MISSION-OnboardServiceCodeList</con:name><con:value>&lt;arr:unsignedInt>1&lt;/arr:unsignedInt>&lt;arr:unsignedInt>2&lt;/arr:unsignedInt></con:value></con:property><con:property><con:name>MISSION-OnBoardValidationFlag</con:name><con:value>false</con:value></con:property><con:property><con:name>MISSION-ServicedStationListManual</con:name><con:value><![CDATA[<mis1:StationList> <mis1:Id>111111111111</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>  <mis1:StationList> <mis1:Id>222222222222</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>  <mis1:StationList> <mis1:Id>333333333333</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>  <mis1:StationList> <mis1:Id>444444444444</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>  <mis1:StationList> <mis1:Id>555555555555</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>]]></con:value></con:property><con:property><con:name>MISSION-ServicedStationListModified</con:name><con:value><![CDATA[<mis1:StationList> <mis1:Id>111111111111</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>  <mis1:StationList> <mis1:Id>222222222222</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>  <mis1:StationList> <mis1:Id>333333333333</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>  <mis1:StationList> <mis1:Id>444444444444</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>  <mis1:StationList> <mis1:Id>555555555555</mis1:Id><mis1:Name></mis1:Name>   </mis1:StationList>]]></con:value></con:property><con:property><con:name>MISSION-ServiceHourListModified</con:name><con:value><![CDATA[	<mis1:StationServiceHours> 		<mis1:DepartureTime>08:00:00</mis1:DepartureTime> 	</mis1:StationServiceHours> 	 	<mis1:StationServiceHours> 		<mis1:ArrivalTime>08:15:00</mis1:ArrivalTime> 		<mis1:DepartureTime>08:20:00</mis1:DepartureTime> 	</mis1:StationServiceHours>  	<mis1:StationServiceHours> 		<mis1:ArrivalTime>08:45:00</mis1:ArrivalTime> 		<mis1:DepartureTime>08:50:00</mis1:DepartureTime> 	</mis1:StationServiceHours>  	<mis1:StationServiceHours> 		<mis1:ArrivalTime>09:35:00</mis1:ArrivalTime> 		<mis1:DepartureTime>09:40:00</mis1:DepartureTime> 	</mis1:StationServiceHours>  	<mis1:StationServiceHours> 		<mis1:ArrivalTime>10:35:00</mis1:ArrivalTime> 	</mis1:StationServiceHours>]]></con:value></con:property><con:property><con:name>MISSION-StartDate</con:name><con:value>25012012</con:value></con:property><con:property><con:name>MISSION-StationInsertionId</con:name><con:value>111111111111</con:value></con:property><con:property><con:name>MISSION-StationInsertionType</con:name><con:value>1</con:value></con:property><con:property><con:name>MISSION-TrainName</con:name><con:value>IDTGV</con:value></con:property><con:property><con:name>SESSION-Login</con:name><con:value>admin</con:value></con:property><con:property><con:name>SESSION-Notification service URL</con:name><con:value>http://192.168.0.3:44444</con:value></con:property><con:property><con:name>SESSION-Password</con:name><con:value>admin</con:value></con:property><con:property><con:name>MAINTENANCE-CommandsList</con:name><con:value>ALL_LOGS</con:value></con:property><con:property><con:name>MAINTENANCE-CleanCommandsList</con:name><con:value>ALL_LOGS</con:value></con:property><con:property><con:name>MAINTENANCE-LogsStartDateTime</con:name><con:value>2012-08-08T15:04:00</con:value></con:property><con:property><con:name>MAINTENANCE-LogsEndDateTime</con:name><con:value>2013-08-10T15:26:00</con:value></con:property><con:property><con:name>MAINTENANCE-LogsLanguage</con:name><con:value>0</con:value></con:property><con:property><con:name>MISSION-RegionCode</con:name><con:value>1</con:value></con:property><con:property><con:name>LVC-StreamingURL</con:name><con:value>http://192.168.0.91:1987</con:value></con:property><con:property><con:name>DEGRADED-DATAPACKAGE-MissingPISBaseVersion</con:name><con:value>1.0.0.42</con:value></con:property><con:property><con:name>DATAPACKAGE-BaselinesListType</con:name><con:value>ALL</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>